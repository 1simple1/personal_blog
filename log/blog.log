2020-11-07 11:18:28.855  INFO 2204 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 2204 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 11:18:28.957 DEBUG 2204 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 11:18:28.978  INFO 2204 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 11:18:31.252  INFO 2204 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 11:18:31.263  INFO 2204 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 11:18:31.264  INFO 2204 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 11:18:31.369  INFO 2204 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 11:18:31.369  INFO 2204 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2291 ms
2020-11-07 11:18:32.113  INFO 2204 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 11:18:32.287  INFO 2204 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 11:18:32.594  INFO 2204 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 11:18:32.605  INFO 2204 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 4.882 seconds (JVM running for 5.867)
2020-11-07 11:19:06.609  INFO 2204 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 11:19:06.610  INFO 2204 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 11:19:06.627  INFO 2204 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-11-07 11:19:06.704  INFO 2204 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 11:19:06.756  INFO 2204 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 11:19:07.083  INFO 2204 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 11:19:07.159 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 11:19:07.222 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 11:19:07.299 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 11:19:07.304 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 11:19:07.305 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 11:19:07.321 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 11:19:07.325 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 11:19:07.326 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 11:19:07.333 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 11:19:07.339 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 11:19:07.339 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 11:19:07.364 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 11:19:07.365 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 11:19:07.366 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 11:19:07.368 DEBUG 2204 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 11:19:07.369  INFO 2204 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 11:19:09.042  INFO 2204 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 11:19:09.044 DEBUG 2204 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 11:19:09.045 DEBUG 2204 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 11:19:09.047 DEBUG 2204 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 11:19:09.048  INFO 2204 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 11:26:57.921  INFO 2996 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 2996 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 11:26:57.926 DEBUG 2996 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 11:26:57.927  INFO 2996 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 11:26:59.855  INFO 2996 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 11:26:59.867  INFO 2996 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 11:26:59.868  INFO 2996 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 11:26:59.993  INFO 2996 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 11:26:59.993  INFO 2996 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1970 ms
2020-11-07 11:27:00.900  INFO 2996 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 11:27:01.087  INFO 2996 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 11:27:01.425  INFO 2996 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 11:27:01.438  INFO 2996 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 4.417 seconds (JVM running for 7.779)
2020-11-07 11:27:29.927  INFO 2996 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 11:27:29.927  INFO 2996 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 11:27:29.942  INFO 2996 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-11-07 11:27:29.989  INFO 2996 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 11:27:30.021  INFO 2996 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 11:27:30.257  INFO 2996 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 11:27:30.341 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 11:27:30.403 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 11:27:30.438 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 11:27:30.442 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 11:27:30.443 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 11:27:30.450 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 11:27:30.455 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 11:27:30.456 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 11:27:30.461 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 11:27:30.466 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 11:27:30.467 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 11:27:30.476 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 11:27:30.477 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 11:27:30.478 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 11:27:30.481 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 11:27:30.482  INFO 2996 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 11:27:32.071  INFO 2996 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 11:27:32.073 DEBUG 2996 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 11:27:32.074 DEBUG 2996 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 11:27:32.076 DEBUG 2996 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 11:27:32.077  INFO 2996 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 11:27:35.217  INFO 2996 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[2, {}]}
2020-11-07 11:27:35.225 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 11:27:35.226 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 11:27:35.228 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 11:27:35.229 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?, ?
2020-11-07 11:27:35.230 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer), 5(Integer)
2020-11-07 11:27:35.234 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : <==      Total: 1
2020-11-07 11:27:35.236 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 11:27:35.236 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 11:27:35.242 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 11:27:35.243 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 11:27:35.244 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 11:27:35.251 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 11:27:35.253 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 11:27:35.253 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 11:27:35.256 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 11:27:35.257  INFO 2996 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 11:27:35.779  INFO 2996 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 11:27:35.780 DEBUG 2996 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 11:27:35.781 DEBUG 2996 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 11:27:35.784 DEBUG 2996 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 11:27:35.785  INFO 2996 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 11:27:37.637  INFO 2996 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 11:27:37.640 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 11:27:37.640 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 11:27:37.643 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 11:27:37.644 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 11:27:37.644 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 11:27:37.651 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 11:27:37.652 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 11:27:37.653 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 11:27:37.656 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 11:27:37.657 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 11:27:37.658 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 11:27:37.665 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 11:27:37.667 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 11:27:37.667 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 11:27:37.669 DEBUG 2996 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 11:27:37.669  INFO 2996 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 11:27:38.133  INFO 2996 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 11:27:38.134 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 11:27:38.135 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 11:27:38.136 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 11:27:38.136  INFO 2996 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 11:27:40.999  INFO 2996 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/51', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[51, {}]}
2020-11-07 11:27:41.026 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 11:27:41.027 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 51(Long)
2020-11-07 11:27:41.032 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 11:27:41.119 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 11:27:41.120 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 51(Long)
2020-11-07 11:27:41.135 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 11:27:41.152  INFO 2996 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 11:27:42.413  INFO 2996 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 11:27:42.416 DEBUG 2996 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 11:27:42.416 DEBUG 2996 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 11:27:42.417 DEBUG 2996 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 11:27:42.418  INFO 2996 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 11:27:42.462  INFO 2996 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/51', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[51, {}]}
2020-11-07 11:27:42.466 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 11:27:42.467 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 51(Long)
2020-11-07 11:27:42.477 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 11:27:42.477  INFO 2996 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 11:27:49.280  INFO 2996 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.post', args参数：[Comment(id=null, nickname=测试, email=jack@163.com, content=评论测试, adminComment=false, avatar=null, createTime=null, blogId=null, parentCommentId=null, parentNickname=null, replyComments=[], parentComment=Comment(id=-1, nickname=null, email=null, content=null, adminComment=false, avatar=null, createTime=null, blogId=null, parentCommentId=null, parentNickname=null, replyComments=[], parentComment=null, blog=null), blog=Blog(id=51, title=null, content=null, firstPicture=null, flag=原创, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=null, description=null, type=null, user=null, tags=[], comments=[])), org.apache.catalina.session.StandardSessionFacade@2cde44c2]}
2020-11-07 11:27:49.285 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 11:27:49.288 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 51(Long)
2020-11-07 11:27:49.296 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 11:27:49.303 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 11:27:49.306 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 51(Long)
2020-11-07 11:27:49.310 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 11:27:49.317 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.saveComments     : ==>  Preparing: insert into t_comment(id,nickname,email,admin_comment,content,avatar,create_time,blog_id,parent_comment_id) values (?,?,?,?,?,?,?,?,?)
2020-11-07 11:27:49.328 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.saveComments     : ==> Parameters: null, 测试(String), jack@163.com(String), false(Boolean), 评论测试(String), /images/小黄人头像.jpg(String), 2020-11-07 11:27:49.315(Timestamp), 51(Long), null
2020-11-07 11:27:49.339 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.saveComments     : <==    Updates: 1
2020-11-07 11:27:49.346  INFO 2996 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/comments/51
2020-11-07 11:27:49.375  INFO 2996 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/51;jsessionid=37DD578D6C69F88A75E1B919DDD00F0A', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[51, {}]}
2020-11-07 11:27:49.376 DEBUG 2996 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 11:27:49.376 DEBUG 2996 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 51(Long)
2020-11-07 11:27:49.380 DEBUG 2996 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 11:27:49.380 DEBUG 2996 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 51(Long)
2020-11-07 11:27:49.382 DEBUG 2996 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 11:27:49.383 DEBUG 2996 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 11:27:49.384 DEBUG 2996 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 72(Long)
2020-11-07 11:27:49.384 DEBUG 2996 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 11:27:49.385 DEBUG 2996 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : <==      Total: 1
2020-11-07 11:27:49.386  INFO 2996 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 11:28:04.471  INFO 2996 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/51', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[51, {}]}
2020-11-07 11:28:04.472 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 11:28:04.473 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 51(Long)
2020-11-07 11:28:04.475 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 11:28:04.477 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 11:28:04.478 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 51(Long)
2020-11-07 11:28:04.479 DEBUG 2996 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 11:28:04.481  INFO 2996 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 11:28:05.512  INFO 2996 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 11:28:05.513 DEBUG 2996 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 11:28:05.513 DEBUG 2996 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 11:28:05.515 DEBUG 2996 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 11:28:05.515  INFO 2996 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 11:28:05.617  INFO 2996 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/51', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[51, {}]}
2020-11-07 11:28:05.617 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 11:28:05.617 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 51(Long)
2020-11-07 11:28:05.620 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 11:28:05.621 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 51(Long)
2020-11-07 11:28:05.623 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 11:28:05.624 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 11:28:05.625 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 72(Long)
2020-11-07 11:28:05.626 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 11:28:05.627 DEBUG 2996 --- [http-nio-8080-exec-5] c.s.p.d.C.listCommentByBlogId            : <==      Total: 1
2020-11-07 11:28:05.628  INFO 2996 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 11:28:14.848  INFO 2996 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.post', args参数：[Comment(id=null, nickname=测, email=jack@163.com, content=评论测试, adminComment=false, avatar=null, createTime=null, blogId=null, parentCommentId=null, parentNickname=null, replyComments=[], parentComment=Comment(id=-1, nickname=null, email=null, content=null, adminComment=false, avatar=null, createTime=null, blogId=null, parentCommentId=null, parentNickname=null, replyComments=[], parentComment=null, blog=null), blog=Blog(id=51, title=null, content=null, firstPicture=null, flag=原创, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=null, description=null, type=null, user=null, tags=[], comments=[])), org.apache.catalina.session.StandardSessionFacade@2cde44c2]}
2020-11-07 11:28:14.869 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 11:28:14.870 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 51(Long)
2020-11-07 11:28:14.881 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 11:28:14.884 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 11:28:14.887 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 51(Long)
2020-11-07 11:28:14.890 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 11:28:14.898 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.saveComments     : ==>  Preparing: insert into t_comment(id,nickname,email,admin_comment,content,avatar,create_time,blog_id,parent_comment_id) values (?,?,?,?,?,?,?,?,?)
2020-11-07 11:28:14.900 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.saveComments     : ==> Parameters: null, 测(String), jack@163.com(String), false(Boolean), 评论测试(String), /images/小黄人头像.jpg(String), 2020-11-07 11:28:14.897(Timestamp), 51(Long), null
2020-11-07 11:28:14.906 DEBUG 2996 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.saveComments     : <==    Updates: 1
2020-11-07 11:28:14.907  INFO 2996 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/comments/51
2020-11-07 11:28:14.921  INFO 2996 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/51', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[51, {}]}
2020-11-07 11:28:14.923 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 11:28:14.924 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 51(Long)
2020-11-07 11:28:14.930 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 11:28:14.931 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 51(Long)
2020-11-07 11:28:14.934 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 11:28:14.936 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 11:28:14.937 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 73(Long)
2020-11-07 11:28:14.939 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 11:28:14.943 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 11:28:14.945 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 72(Long)
2020-11-07 11:28:14.947 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 11:28:14.948 DEBUG 2996 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : <==      Total: 2
2020-11-07 11:28:14.950  INFO 2996 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 11:36:12.125  INFO 7336 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 7336 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 11:36:12.136 DEBUG 7336 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 11:36:12.137  INFO 7336 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 11:36:14.756  INFO 7336 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 11:36:14.768  INFO 7336 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 11:36:14.768  INFO 7336 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 11:36:14.897  INFO 7336 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 11:36:14.897  INFO 7336 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2532 ms
2020-11-07 11:36:16.903  INFO 7336 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 11:36:17.169  INFO 7336 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 11:36:17.509  INFO 7336 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 11:36:17.521  INFO 7336 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 6.254 seconds (JVM running for 7.49)
2020-11-07 11:36:33.556  INFO 7336 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 11:36:33.557  INFO 7336 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 11:36:33.580  INFO 7336 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 22 ms
2020-11-07 11:36:33.655  INFO 7336 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 11:36:33.695  INFO 7336 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 11:36:34.062  INFO 7336 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 11:36:34.130 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 11:36:34.170 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 11:36:34.208 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 11:36:34.217 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 11:36:34.218 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 11:36:34.224 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 11:36:34.227 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 11:36:34.228 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 11:36:34.233 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 11:36:34.238 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 11:36:34.238 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 11:36:34.246 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 11:36:34.247 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 11:36:34.247 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 11:36:34.250 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 11:36:34.250  INFO 7336 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 11:36:36.691  INFO 7336 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 11:36:36.693 DEBUG 7336 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 11:36:36.693 DEBUG 7336 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 11:36:36.695 DEBUG 7336 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 11:36:36.696  INFO 7336 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 11:36:41.976  INFO 7336 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@37e0e, {}]}
2020-11-07 11:36:42.017 DEBUG 7336 --- [http-nio-8080-exec-7] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 11:36:42.018 DEBUG 7336 --- [http-nio-8080-exec-7] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 11:36:42.022 DEBUG 7336 --- [http-nio-8080-exec-7] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 11:36:42.028  INFO 7336 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 11:36:43.545  INFO 7336 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 11:36:43.611 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 11:36:43.613 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 11:36:43.617 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 11:36:43.624 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 11:36:43.625 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 11:36:43.635 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 11:36:43.636 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 11:36:43.637 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 11:36:43.640 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 8
2020-11-07 11:36:43.641  INFO 7336 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 11:36:57.166  INFO 7336 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.toAddBlog', args参数：[{}]}
2020-11-07 11:36:57.170 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 11:36:57.171 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 11:36:57.180 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 8
2020-11-07 11:36:57.183 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 11:36:57.185 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 11:36:57.190 DEBUG 7336 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 7
2020-11-07 11:36:57.191  INFO 7336 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 11:44:45.907  INFO 7336 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@37e0e, {}]}
2020-11-07 11:44:45.909 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 11:44:45.909 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 11:44:45.911 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 11:44:45.913  INFO 7336 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 11:44:48.412  INFO 7336 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 11:44:48.424 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 11:44:48.433 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 11:44:48.447 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 11:44:48.453 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 11:44:48.455 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 11:44:48.460 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 0
2020-11-07 11:44:48.463  INFO 7336 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 11:44:50.015  INFO 7336 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 11:44:50.047 DEBUG 7336 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 11:44:50.051 DEBUG 7336 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 11:44:50.061 DEBUG 7336 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 11:44:50.068  INFO 7336 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 11:44:56.218  INFO 7336 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 11:44:56.220  INFO 7336 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 11:45:22.989  INFO 7336 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=JavaSE, blogs=[]), {}]}
2020-11-07 11:45:22.994 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 11:45:23.000 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: JavaSE(String)
2020-11-07 11:45:23.004 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 11:45:23.008 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 11:45:23.011 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, JavaSE(String)
2020-11-07 11:45:23.017 DEBUG 7336 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 11:45:23.020  INFO 7336 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 11:45:23.067  INFO 7336 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 11:45:23.071 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 11:45:23.072 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 11:45:23.073 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 11:45:23.078 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 11:45:23.079 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 11:45:23.081 DEBUG 7336 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 1
2020-11-07 11:45:23.082  INFO 7336 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 11:45:25.148  INFO 7336 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 11:45:25.169 DEBUG 7336 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 11:45:25.170 DEBUG 7336 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 11:45:25.177 DEBUG 7336 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 11:45:25.179  INFO 7336 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 11:45:26.815  INFO 7336 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 11:45:26.821 DEBUG 7336 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 11:45:26.822 DEBUG 7336 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 11:45:26.826 DEBUG 7336 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 11:45:26.830 DEBUG 7336 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 11:45:26.832 DEBUG 7336 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 11:45:26.837 DEBUG 7336 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 1
2020-11-07 11:45:26.839  INFO 7336 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 13:37:50.365  WARN 7336 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h41m46s170ms586µs285ns).
2020-11-07 13:45:14.527  WARN 7336 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m54s155ms73µs944ns).
2020-11-07 14:23:19.814  INFO 8176 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 8176 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 14:23:19.843 DEBUG 8176 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 14:23:19.843  INFO 8176 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 14:23:21.681  INFO 8176 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 14:23:21.690  INFO 8176 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 14:23:21.691  INFO 8176 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 14:23:21.806  INFO 8176 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 14:23:21.807  INFO 8176 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1873 ms
2020-11-07 14:23:23.075  INFO 8176 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 14:23:23.367  INFO 8176 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 14:23:23.826  INFO 8176 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 14:23:23.837  INFO 8176 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 4.937 seconds (JVM running for 6.002)
2020-11-07 14:25:35.580  INFO 8176 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 14:25:35.581  INFO 8176 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 14:25:35.604  INFO 8176 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 21 ms
2020-11-07 14:25:35.662  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 14:25:35.695  INFO 8176 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 14:25:35.874  INFO 8176 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 14:25:35.931 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 14:25:35.955 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 14:25:35.993 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 14:25:35.997 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 14:25:35.998 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 14:25:36.000 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 0
2020-11-07 14:25:36.005 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 14:25:36.005 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 14:25:36.007 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 0
2020-11-07 14:25:36.008 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 14:25:36.008 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 14:25:36.009 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 0
2020-11-07 14:25:36.010  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 14:25:36.993  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 14:25:36.995 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 14:25:36.996 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 14:25:36.997 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 0
2020-11-07 14:25:36.998  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 14:25:48.336  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@63ccf5e0, {}]}
2020-11-07 14:25:48.401 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 14:25:48.402 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 14:25:48.406 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 14:25:48.409  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 14:25:50.039  INFO 8176 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 14:25:50.078 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 14:25:50.082 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 14:25:50.089 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 14:25:50.094 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 14:25:50.095 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 14:25:50.102 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 1
2020-11-07 14:25:50.104  INFO 8176 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 14:25:51.036  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 14:25:51.064 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:25:51.065 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:25:51.068 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:25:51.075 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:25:51.076 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:25:51.080 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 1
2020-11-07 14:25:51.081  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:25:53.205  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/70/delete', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.deleteType', args参数：[70, {}]}
2020-11-07 14:25:53.210 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.deleteTypeById      : ==>  Preparing: delete from blog.t_type where id = ?;
2020-11-07 14:25:53.217 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.deleteTypeById      : ==> Parameters: 70(Long)
2020-11-07 14:25:53.227 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.deleteTypeById      : <==    Updates: 1
2020-11-07 14:25:53.231  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:25:53.310  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=删除成功}, 1]}
2020-11-07 14:25:53.311 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:25:53.314 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:25:53.316 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:25:53.317  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:25:57.126  INFO 8176 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:25:57.127  INFO 8176 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:26:06.295  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=前端开发, blogs=[]), {}]}
2020-11-07 14:26:06.299 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:26:06.300 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 前端开发(String)
2020-11-07 14:26:06.306 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:26:06.308 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:26:06.311 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 前端开发(String)
2020-11-07 14:26:06.315 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:26:06.316  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:26:06.337  INFO 8176 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:26:06.339 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:26:06.340 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:26:06.341 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:26:06.344 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:26:06.345 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:26:06.346 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 1
2020-11-07 14:26:06.347  INFO 8176 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:26:08.336  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:26:08.338  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:26:13.802  INFO 8176 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=后端开发, blogs=[]), {}]}
2020-11-07 14:26:13.807 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:26:13.808 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 后端开发(String)
2020-11-07 14:26:13.813 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:26:13.818 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:26:13.821 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 后端开发(String)
2020-11-07 14:26:13.833 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:26:13.836  INFO 8176 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:26:13.854  INFO 8176 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:26:13.857 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:26:13.857 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:26:13.861 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:26:13.865 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:26:13.866 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:26:13.868 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 2
2020-11-07 14:26:13.869  INFO 8176 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:26:15.528  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:26:15.530  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:26:54.848  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=数据结构和算法, blogs=[]), {}]}
2020-11-07 14:26:54.853 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:26:54.854 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 数据结构和算法(String)
2020-11-07 14:26:54.857 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:26:54.859 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:26:54.861 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 数据结构和算法(String)
2020-11-07 14:26:54.874 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:26:54.876  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:26:54.898  INFO 8176 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:26:54.900 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:26:54.900 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:26:54.902 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:26:54.905 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:26:54.906 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:26:54.908 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 3
2020-11-07 14:26:54.912  INFO 8176 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:26:57.657  INFO 8176 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:26:57.659  INFO 8176 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:27:20.787  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=入门教程, blogs=[]), {}]}
2020-11-07 14:27:20.791 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:27:20.795 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 入门教程(String)
2020-11-07 14:27:20.800 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:27:20.812 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:27:20.815 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 入门教程(String)
2020-11-07 14:27:20.826 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:27:20.828  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:27:20.847  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:27:20.851 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:27:20.851 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:27:20.853 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:27:20.855 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:27:20.855 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:27:20.858 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 4
2020-11-07 14:27:20.859  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:27:23.255  INFO 8176 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:27:23.257  INFO 8176 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:27:28.454  INFO 8176 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=计算机网络, blogs=[]), {}]}
2020-11-07 14:27:28.456 DEBUG 8176 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:27:28.457 DEBUG 8176 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 计算机网络(String)
2020-11-07 14:27:28.459 DEBUG 8176 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:27:28.460 DEBUG 8176 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:27:28.461 DEBUG 8176 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 计算机网络(String)
2020-11-07 14:27:28.466 DEBUG 8176 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:27:28.467  INFO 8176 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:27:28.480  INFO 8176 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:27:28.481 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:27:28.482 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:27:28.483 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:27:28.486 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:27:28.487 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:27:28.491 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 14:27:28.491  INFO 8176 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:27:33.605  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:27:33.607  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:27:37.587  INFO 8176 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=数据库, blogs=[]), {}]}
2020-11-07 14:27:37.589 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:27:37.591 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 数据库(String)
2020-11-07 14:27:37.594 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:27:37.596 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:27:37.602 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 数据库(String)
2020-11-07 14:27:37.624 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:27:37.624  INFO 8176 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:27:37.637  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:27:37.638 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:27:37.639 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:27:37.640 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:27:37.641 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:27:37.642 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:27:37.648 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 14:27:37.648  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:27:42.324  INFO 8176 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 2]}
2020-11-07 14:27:42.325 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:27:42.326 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:27:42.327 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:27:42.328 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?, ?
2020-11-07 14:27:42.329 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer), 5(Integer)
2020-11-07 14:27:42.330 DEBUG 8176 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 1
2020-11-07 14:27:42.330  INFO 8176 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:27:43.761  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 14:27:43.766 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:27:43.767 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:27:43.769 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:27:43.771 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:27:43.773 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:27:43.779 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 14:27:43.780  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:27:53.898  INFO 8176 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:27:53.901  INFO 8176 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:28:07.675  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=错误总结, blogs=[]), {}]}
2020-11-07 14:28:07.678 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:28:07.679 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 错误总结(String)
2020-11-07 14:28:07.683 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:28:07.685 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:28:07.687 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 错误总结(String)
2020-11-07 14:28:07.694 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:28:07.696  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:28:07.716  INFO 8176 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:28:07.717 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:28:07.718 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:28:07.720 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:28:07.722 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:28:07.723 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:28:07.726 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 14:28:07.727  INFO 8176 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:29:51.871  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:29:51.872  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:30:08.780  INFO 8176 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=Linux, blogs=[]), {}]}
2020-11-07 14:30:08.782 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:30:08.783 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: Linux(String)
2020-11-07 14:30:08.785 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:30:08.786 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:30:08.788 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, Linux(String)
2020-11-07 14:30:08.792 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:30:08.792  INFO 8176 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:30:08.820  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:30:08.823 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:30:08.824 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:30:08.826 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:30:08.828 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:30:08.829 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:30:08.833 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 14:30:08.833  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:30:34.907  INFO 8176 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:30:34.909  INFO 8176 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:30:47.549  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=设计模式, blogs=[]), {}]}
2020-11-07 14:30:47.554 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:30:47.555 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 设计模式(String)
2020-11-07 14:30:47.557 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:30:47.559 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:30:47.559 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 设计模式(String)
2020-11-07 14:30:47.562 DEBUG 8176 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:30:47.562  INFO 8176 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:30:47.575  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:30:47.577 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:30:47.577 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:30:47.579 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:30:47.580 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:30:47.580 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:30:47.582 DEBUG 8176 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 14:30:47.583  INFO 8176 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:30:49.469  INFO 8176 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:30:49.470  INFO 8176 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:31:17.332  INFO 8176 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=热门框架, blogs=[]), {}]}
2020-11-07 14:31:17.336 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:31:17.337 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 热门框架(String)
2020-11-07 14:31:17.339 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:31:17.341 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:31:17.342 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 热门框架(String)
2020-11-07 14:31:17.346 DEBUG 8176 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:31:17.348  INFO 8176 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:31:17.386  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:31:17.399 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:31:17.399 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:31:17.401 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:31:17.402 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:31:17.402 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:31:17.404 DEBUG 8176 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 14:31:17.405  INFO 8176 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:32:44.194  INFO 8176 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 14:32:44.195  INFO 8176 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 14:32:48.276  INFO 8176 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=其他, blogs=[]), {}]}
2020-11-07 14:32:48.278 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 14:32:48.280 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 其他(String)
2020-11-07 14:32:48.282 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 14:32:48.284 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 14:32:48.285 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 其他(String)
2020-11-07 14:32:48.289 DEBUG 8176 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 14:32:48.291  INFO 8176 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 14:32:48.314  INFO 8176 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 14:32:48.316 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:32:48.317 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:32:48.318 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:32:48.319 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:32:48.320 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:32:48.322 DEBUG 8176 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 14:32:48.323  INFO 8176 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:32:51.402  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 14:32:51.424 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 14:32:51.425 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 14:32:51.428 DEBUG 8176 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 14:32:51.430  INFO 8176 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 14:32:55.540  INFO 8176 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 14:32:55.544 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 14:32:55.545 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 14:32:55.548 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 14:32:55.551 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 14:32:55.554 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 14:32:55.560 DEBUG 8176 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 14:32:55.561  INFO 8176 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 14:39:19.339  INFO 8988 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 8988 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 14:39:19.351 DEBUG 8988 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 14:39:19.352  INFO 8988 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 14:39:21.090  INFO 8988 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 14:39:21.101  INFO 8988 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 14:39:21.102  INFO 8988 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 14:39:21.226  INFO 8988 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 14:39:21.226  INFO 8988 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1737 ms
2020-11-07 14:39:22.026  INFO 8988 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 14:39:22.210  INFO 8988 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 14:39:22.649  INFO 8988 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 14:39:22.730  INFO 8988 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 4.306 seconds (JVM running for 5.345)
2020-11-07 14:39:28.042  INFO 8988 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 14:39:28.043  INFO 8988 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 14:39:28.058  INFO 8988 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-11-07 14:39:29.649  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@14cdb77b, {}]}
2020-11-07 14:39:29.669  INFO 8988 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 14:39:30.612  INFO 8988 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 14:39:30.789 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 14:39:30.890 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 14:39:31.027 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 14:39:31.125  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 14:39:40.211  INFO 8988 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 14:39:40.393 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 14:39:40.393 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 14:39:40.430 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 14:39:40.435 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 14:39:40.435 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 14:39:40.475 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 14:39:40.478 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 14:39:40.479 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 14:39:40.532 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 8
2020-11-07 14:39:40.533  INFO 8988 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 14:39:50.047  INFO 8988 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 14:39:50.092 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 14:39:50.092 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 14:39:50.124 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 14:39:50.125 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 14:39:50.125 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 14:39:50.164 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 14:39:50.165 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 14:39:50.166 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 14:39:50.200 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 14:39:50.204 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 14:39:50.204 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 14:39:50.243 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 14:39:50.244 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 14:39:50.245 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 14:39:50.283 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 14:39:50.284  INFO 8988 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 14:39:50.891  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 14:39:50.928 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 14:39:50.928 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 14:39:50.964 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 14:39:50.966  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 14:39:59.558  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 14:39:59.635 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 14:39:59.636 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 14:39:59.690 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 14:39:59.847 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 14:39:59.848 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 14:39:59.935 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 14:40:00.001  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 14:40:00.493  INFO 8988 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 14:40:00.493 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 14:40:00.493 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 14:40:00.528 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 14:40:00.528  INFO 8988 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 14:40:00.829  INFO 8988 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 14:40:00.834 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 14:40:00.835 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 14:40:00.878 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 14:40:00.880 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 14:40:00.917 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 14:40:00.921 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 14:40:00.925 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 14:40:00.968 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 14:40:00.976 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 14:40:00.978 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 14:40:01.020 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 14:40:01.027 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 14:40:01.028 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 14:40:01.064 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 14:40:01.066 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 14:40:01.100 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 14:40:01.102 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 14:40:01.102 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 14:40:01.134 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 14:40:01.135 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 14:40:01.136 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 14:40:01.136 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 14:40:01.172 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 14:40:01.173 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 14:40:01.174 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 14:40:01.206 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 14:40:01.208 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 14:40:01.208 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 14:40:01.241 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 14:40:01.242 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 14:40:01.273 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 14:40:01.274 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 14:40:01.275 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 14:40:01.307 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 14:40:01.308 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 14:40:01.309 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 14:40:01.313  INFO 8988 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 15:16:30.650  INFO 8988 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 15:16:30.743 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 15:16:30.743 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 15:16:30.796 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 15:16:30.799 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 15:16:30.800 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 15:16:30.863 DEBUG 8988 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 15:16:30.921  INFO 8988 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 15:16:31.411  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:16:31.411 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:16:31.411 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:16:31.442 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:16:31.442  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:16:31.504  INFO 8988 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 15:16:31.504 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 15:16:31.505 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 15:16:31.539 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 15:16:31.540 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 15:16:31.571 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 15:16:31.572 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:16:31.573 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 15:16:31.602 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 15:16:31.607 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:16:31.608 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 15:16:31.642 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 15:16:31.645 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:16:31.646 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 15:16:31.688 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 15:16:31.689 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 15:16:31.728 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 15:16:31.729 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:16:31.729 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 15:16:31.763 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 15:16:31.763 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 15:16:31.766 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:16:31.766 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 15:16:31.801 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 15:16:31.804 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:16:31.805 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 15:16:31.839 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 15:16:31.842 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:16:31.844 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 15:16:31.876 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 15:16:31.877 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 15:16:31.912 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 15:16:31.914 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:16:31.915 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 15:16:31.947 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 15:16:31.948 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 15:16:31.949 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 15:16:31.953  INFO 8988 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 15:17:23.852  INFO 8988 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 15:17:23.904 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 15:17:23.905 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 15:17:23.944 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 15:17:23.946 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 15:17:23.948 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 15:17:23.982 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 15:17:23.982 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 15:17:23.983 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 15:17:24.015 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 15:17:24.015 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 15:17:24.015 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 15:17:24.053 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 15:17:24.054 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 15:17:24.054 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 15:17:24.082 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 15:17:24.082  INFO 8988 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 15:17:24.486  INFO 8988 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:17:24.486 DEBUG 8988 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:17:24.486 DEBUG 8988 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:17:24.522 DEBUG 8988 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:17:24.522  INFO 8988 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:17:27.017  INFO 8988 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/40', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[40, {}]}
2020-11-07 15:17:27.108 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 15:17:27.108 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 40(Long)
2020-11-07 15:17:27.140 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 15:17:27.147 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 15:17:27.147 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 40(Long)
2020-11-07 15:17:27.204 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 15:17:27.265  INFO 8988 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 15:17:27.814  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:17:27.840 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:17:27.841 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:17:27.852  INFO 8988 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/40', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[40, {}]}
2020-11-07 15:17:27.873 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:17:27.874  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:17:27.881 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 15:17:27.881 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 40(Long)
2020-11-07 15:17:27.916 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 15:17:27.917 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 40(Long)
2020-11-07 15:17:27.952 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 15:17:27.953 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:17:27.953 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 60(Long)
2020-11-07 15:17:27.988 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 15:17:27.989 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:17:27.989 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 58(Long)
2020-11-07 15:17:28.032 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 15:17:28.034 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:17:28.035 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 47(Long)
2020-11-07 15:17:28.068 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 15:17:28.071 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:17:28.073 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 1(Long)
2020-11-07 15:17:28.111 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 15:17:28.113 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 1(Long)
2020-11-07 15:17:28.151 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 15:17:28.152 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:17:28.153 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 43(Long)
2020-11-07 15:17:28.185 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ========>  Preparing: select * from t_comment where id = ?
2020-11-07 15:17:28.185 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ========> Parameters: 43(Long)
2020-11-07 15:17:28.220 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <========      Total: 1
2020-11-07 15:17:28.221 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ========>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:17:28.221 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ========> Parameters: 44(Long)
2020-11-07 15:17:28.262 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ==========>  Preparing: select * from t_comment where id = ?
2020-11-07 15:17:28.262 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ==========> Parameters: 44(Long)
2020-11-07 15:17:28.305 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <==========      Total: 1
2020-11-07 15:17:28.307 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ==========>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:17:28.307 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ==========> Parameters: 45(Long)
2020-11-07 15:17:28.351 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ============>  Preparing: select * from t_comment where id = ?
2020-11-07 15:17:28.352 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ============> Parameters: 45(Long)
2020-11-07 15:17:28.394 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <============      Total: 1
2020-11-07 15:17:28.396 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ============>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:17:28.396 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ============> Parameters: 48(Long)
2020-11-07 15:17:28.432 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ==============>  Preparing: select * from t_comment where id = ?
2020-11-07 15:17:28.433 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ==============> Parameters: 48(Long)
2020-11-07 15:17:28.466 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <==============      Total: 1
2020-11-07 15:17:28.468 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ==============>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 15:17:28.468 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ==============> Parameters: 57(Long)
2020-11-07 15:17:28.504 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <==============      Total: 0
2020-11-07 15:17:28.505 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <============      Total: 1
2020-11-07 15:17:28.506 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <==========      Total: 1
2020-11-07 15:17:28.508 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <========      Total: 1
2020-11-07 15:17:28.509 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 1
2020-11-07 15:17:28.510 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 15:17:28.512 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : <==      Total: 4
2020-11-07 15:17:28.531  INFO 8988 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 15:18:29.119  INFO 8988 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[2, {}]}
2020-11-07 15:18:29.237 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 15:18:29.238 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 15:18:29.288 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 15:18:29.290 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?, ?
2020-11-07 15:18:29.290 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer), 5(Integer)
2020-11-07 15:18:29.329 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll             : <==      Total: 1
2020-11-07 15:18:29.332 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 15:18:29.333 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 15:18:29.378 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 15:18:29.381 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 15:18:29.382 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 15:18:29.433 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 15:18:29.435 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 15:18:29.437 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 15:18:29.482 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 15:18:29.484  INFO 8988 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 15:18:30.023  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:18:30.057 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:18:30.057 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:18:30.091 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:18:30.091  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:18:32.711  INFO 8988 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 15:18:32.863 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 15:18:32.864 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 15:18:33.033 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 15:18:33.035 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 15:18:33.037 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 15:18:33.229 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 15:18:33.232 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 15:18:33.234 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 15:18:33.390 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 15:18:33.393 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 15:18:33.394 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 15:18:33.546 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 15:18:33.547 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 15:18:33.548 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 15:18:33.677 DEBUG 8988 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 15:18:33.680  INFO 8988 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 15:18:34.160  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:18:34.161 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:18:34.161 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:18:34.242 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:18:34.243  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:18:48.660  INFO 8988 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[2, {}]}
2020-11-07 15:18:48.796 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 15:18:48.797 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 15:18:48.833 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 15:18:48.834 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?, ?
2020-11-07 15:18:48.835 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer), 5(Integer)
2020-11-07 15:18:48.865 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : <==      Total: 1
2020-11-07 15:18:48.866 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 15:18:48.866 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 15:18:48.898 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 15:18:48.899 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 15:18:48.900 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 15:18:48.951 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 15:18:48.952 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 15:18:48.952 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 15:18:48.983 DEBUG 8988 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 15:18:48.984  INFO 8988 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 15:18:49.440  INFO 8988 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:18:49.441 DEBUG 8988 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:18:49.441 DEBUG 8988 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:18:49.471 DEBUG 8988 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:18:49.471  INFO 8988 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:18:51.303  INFO 8988 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/49', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[49, {}]}
2020-11-07 15:18:51.422 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 15:18:51.422 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 49(Long)
2020-11-07 15:18:51.475 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 15:18:51.479 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 15:18:51.479 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 49(Long)
2020-11-07 15:18:51.617 DEBUG 8988 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 15:18:51.756  INFO 8988 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 15:18:52.250  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:18:52.250 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:18:52.250 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:18:52.281 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:18:52.282  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:18:52.287  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/49', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[49, {}]}
2020-11-07 15:18:52.287 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 15:18:52.288 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 49(Long)
2020-11-07 15:18:52.320 DEBUG 8988 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 15:18:52.320  INFO 8988 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 15:19:12.815  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/49', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[49, {}]}
2020-11-07 15:19:12.889 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 15:19:12.890 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 49(Long)
2020-11-07 15:19:12.932 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 15:19:12.933 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 15:19:12.934 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 49(Long)
2020-11-07 15:19:13.022 DEBUG 8988 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 15:19:13.118  INFO 8988 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 15:19:13.910  INFO 8988 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:19:13.950 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:19:13.951 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:19:13.987 DEBUG 8988 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:19:13.987  INFO 8988 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:19:13.994  INFO 8988 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/49', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[49, {}]}
2020-11-07 15:19:14.037 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 15:19:14.038 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 49(Long)
2020-11-07 15:19:14.080 DEBUG 8988 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 15:19:14.080  INFO 8988 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 15:20:23.348  INFO 7716 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 7716 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 15:20:23.351 DEBUG 7716 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 15:20:23.353  INFO 7716 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 15:20:24.958  INFO 7716 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 15:20:24.968  INFO 7716 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 15:20:24.969  INFO 7716 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 15:20:25.066  INFO 7716 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 15:20:25.066  INFO 7716 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1589 ms
2020-11-07 15:20:25.716  INFO 7716 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 15:20:25.890  INFO 7716 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 15:20:26.159  INFO 7716 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 15:20:26.169  INFO 7716 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 3.504 seconds (JVM running for 4.384)
2020-11-07 15:21:06.820  INFO 7716 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 15:21:06.822  INFO 7716 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 15:21:06.837  INFO 7716 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-11-07 15:21:06.918  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 15:21:06.957  INFO 7716 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 15:21:07.535  INFO 7716 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 15:21:07.734 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 15:21:07.789 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 15:21:07.845 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 15:21:07.848 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 15:21:07.849 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 15:21:07.891 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 15:21:07.896 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 15:21:07.897 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 15:21:07.940 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 15:21:07.948 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 15:21:07.949 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 15:21:07.989 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 15:21:07.992 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 15:21:07.993 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 15:21:08.031 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 15:21:08.032  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 15:21:09.185  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:21:09.221 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:21:09.222 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:21:09.257 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:21:09.257  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:21:11.172  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[2, {}]}
2020-11-07 15:21:11.223 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 15:21:11.224 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 15:21:11.263 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 15:21:11.264 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?, ?
2020-11-07 15:21:11.265 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer), 5(Integer)
2020-11-07 15:21:11.303 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll             : <==      Total: 1
2020-11-07 15:21:11.304 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 15:21:11.304 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 15:21:11.341 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 15:21:11.342 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 15:21:11.342 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 15:21:11.374 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 15:21:11.375 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 15:21:11.375 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 15:21:11.410 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 15:21:11.412  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 15:21:11.853  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:21:11.854 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:21:11.854 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:21:11.899 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:21:11.900  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:21:13.279  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/49', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[49, {}]}
2020-11-07 15:21:13.374 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 15:21:13.375 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 49(Long)
2020-11-07 15:21:13.412 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 15:21:13.547 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 15:21:13.550 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 49(Long)
2020-11-07 15:21:13.611 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 15:21:13.679 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 15:21:13.680 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 49(Long)
2020-11-07 15:21:13.714 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 6
2020-11-07 15:21:13.823 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? , ? , ? , ? , ? )
2020-11-07 15:21:13.826 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 20(Long), 33(Long), 34(Long), 35(Long), 37(Long), 38(Long)
2020-11-07 15:21:13.859 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 6
2020-11-07 15:21:13.860  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 15:21:14.292  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:21:14.293 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:21:14.293 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:21:14.320  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/49', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[49, {}]}
2020-11-07 15:21:14.325 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:21:14.328  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:21:14.354 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 15:21:14.354 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 49(Long)
2020-11-07 15:21:14.385 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 15:21:14.387  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 15:23:01.046  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/49', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[49, {}]}
2020-11-07 15:23:01.147 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 15:23:01.147 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 49(Long)
2020-11-07 15:23:01.196 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 15:23:01.197 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 15:23:01.197 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 49(Long)
2020-11-07 15:23:01.285 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 15:23:01.407 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 15:23:01.407 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 49(Long)
2020-11-07 15:23:01.466 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 6
2020-11-07 15:23:01.468 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? , ? , ? , ? , ? )
2020-11-07 15:23:01.469 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 20(Long), 33(Long), 34(Long), 35(Long), 37(Long), 38(Long)
2020-11-07 15:23:01.548 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 6
2020-11-07 15:23:01.548  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 15:23:02.494  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 15:23:02.533 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 15:23:02.533 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 15:23:02.545  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/49', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[49, {}]}
2020-11-07 15:23:02.591 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 15:23:02.592 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 15:23:02.592 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 49(Long)
2020-11-07 15:23:02.593  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 15:23:02.631 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 15:23:02.633  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 15:51:38.419  WARN 7716 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=25m30s643ms893µs914ns).
2020-11-07 17:42:13.391  WARN 7716 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=39m4s750ms754µs398ns).
2020-11-07 18:49:33.733  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 18:49:33.869 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 18:49:33.880 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 18:49:33.945 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 18:49:33.951 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 18:49:33.953 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 18:49:34.002 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 18:49:34.006 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 18:49:34.007 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 18:49:34.055 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 18:49:34.058 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 18:49:34.059 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 18:49:34.105 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 18:49:34.107 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 18:49:34.108 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 18:49:34.155 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 18:49:34.156  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 18:49:35.892  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 18:49:35.932 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 18:49:35.933 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 18:49:35.977 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 18:49:35.978  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 18:49:43.749  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 18:49:43.857 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 18:49:43.860 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 18:49:43.954 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 18:49:44.025 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 18:49:44.026 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 18:49:44.125 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 18:49:44.233 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 18:49:44.234 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 18:49:44.280 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 18:49:44.293 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 18:49:44.294 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 18:49:44.345 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 18:49:44.347  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 18:49:44.878  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 18:49:44.937 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 18:49:44.938 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 18:49:44.991 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 18:49:44.991  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 18:49:45.045  INFO 7716 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 18:49:45.046 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 18:49:45.048 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 18:49:45.117 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 18:49:45.118 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 18:49:45.166 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 18:49:45.166 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:49:45.166 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 18:49:45.268 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:49:45.273 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:49:45.274 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 18:49:45.313 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:49:45.315 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:49:45.315 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 18:49:45.355 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:49:45.355 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 18:49:45.400 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:49:45.401 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:49:45.402 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 18:49:45.439 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:49:45.440 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:49:45.440 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:49:45.441 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 18:49:45.480 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:49:45.481 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:49:45.482 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 18:49:45.523 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:49:45.525 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:49:45.526 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 18:49:45.574 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:49:45.574 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 18:49:45.622 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:49:45.623 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:49:45.623 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 18:49:45.663 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:49:45.665 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:49:45.665 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 18:49:45.708  INFO 7716 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 18:52:07.996  INFO 7716 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 18:52:08.129 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 18:52:08.132 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 18:52:08.187 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 18:52:08.192 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 18:52:08.193 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 18:52:08.293 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 18:52:08.402 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 18:52:08.403 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 18:52:08.450 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 18:52:08.452 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 18:52:08.452 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 18:52:08.502 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 18:52:08.504  INFO 7716 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 18:52:09.310  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 18:52:09.380 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 18:52:09.381 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 18:52:09.388  INFO 7716 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 18:52:09.431 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 18:52:09.432 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 18:52:09.432 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 18:52:09.433  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 18:52:09.492 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 18:52:09.493 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 18:52:09.550 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 18:52:09.551 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:52:09.551 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 18:52:09.596 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:52:09.598 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:52:09.599 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 18:52:09.667 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:52:09.668 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:52:09.668 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 18:52:09.744 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:52:09.745 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 18:52:09.810 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:52:09.811 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:52:09.812 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 18:52:09.870 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:52:09.871 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:52:09.878 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:52:09.878 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 18:52:09.938 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:52:09.940 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:52:09.940 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 18:52:09.986 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:52:09.989 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:52:09.990 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 18:52:10.036 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:52:10.037 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 18:52:10.087 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:52:10.089 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:52:10.089 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 18:52:10.127 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:52:10.127 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:52:10.128 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 18:52:10.133  INFO 7716 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 18:54:10.025  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 18:54:10.165 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 18:54:10.168 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 18:54:10.275 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 18:54:10.279 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 18:54:10.279 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 18:54:10.367 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 18:54:10.510 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 18:54:10.511 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 18:54:10.557 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 18:54:10.558 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 18:54:10.559 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 18:54:10.621 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 18:54:10.622  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 18:54:11.799  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 18:54:11.840 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 18:54:11.840 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 18:54:11.884 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 18:54:11.885  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 18:54:12.021  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 18:54:12.022 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 18:54:12.025 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 18:54:12.070 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 18:54:12.071 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 18:54:12.119 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 18:54:12.120 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:54:12.121 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 18:54:12.172 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:54:12.173 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:54:12.174 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 18:54:12.228 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:54:12.230 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:54:12.230 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 18:54:12.272 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:54:12.273 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 18:54:12.328 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:54:12.329 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:54:12.329 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 18:54:12.376 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:54:12.377 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:54:12.379 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:54:12.380 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 18:54:12.423 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:54:12.424 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:54:12.425 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 18:54:12.475 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:54:12.476 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:54:12.476 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 18:54:12.514 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:54:12.515 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 18:54:12.556 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:54:12.557 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:54:12.557 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 18:54:12.601 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:54:12.603 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:54:12.604 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 18:54:12.617  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 18:55:33.511  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 18:55:33.603 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 18:55:33.607 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 18:55:33.657 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 18:55:33.666 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 18:55:33.667 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 18:55:33.764 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 18:55:33.884 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 18:55:33.885 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 18:55:33.922 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 18:55:33.924 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 18:55:33.924 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 18:55:33.962 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 18:55:33.963  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 18:55:34.886  INFO 7716 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 18:55:34.923 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 18:55:34.925 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 18:55:34.959 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 18:55:34.960  INFO 7716 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 18:55:35.054  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 18:55:35.093 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 18:55:35.094 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 18:55:35.210 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 18:55:35.211 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 18:55:35.249 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 18:55:35.250 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:35.250 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 18:55:35.294 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:55:35.296 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:35.296 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 18:55:35.337 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:55:35.339 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:35.341 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 18:55:35.385 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:55:35.386 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 18:55:35.447 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:55:35.447 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:35.447 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 18:55:35.503 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:55:35.503 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:55:35.507 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:35.507 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 18:55:35.573 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:55:35.574 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:35.575 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 18:55:35.625 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:55:35.627 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:35.628 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 18:55:35.677 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:55:35.677 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 18:55:35.726 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:55:35.727 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:35.728 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 18:55:35.775 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:55:35.775 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:55:35.776 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 18:55:35.777  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 18:55:54.722  INFO 7716 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 18:55:54.811 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 18:55:54.814 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 18:55:54.860 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 18:55:54.864 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 18:55:54.864 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 18:55:55.012 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 18:55:55.126 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 18:55:55.126 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 18:55:55.165 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 18:55:55.166 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 18:55:55.166 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 18:55:55.210 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 18:55:55.210  INFO 7716 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 18:55:55.935  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 18:55:55.991 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 18:55:55.991 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 18:55:56.039 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 18:55:56.041  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 18:55:56.159  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 18:55:56.159 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 18:55:56.160 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 18:55:56.200 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 18:55:56.202 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 18:55:56.243 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 18:55:56.244 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:56.245 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 18:55:56.283 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:55:56.284 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:56.285 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 18:55:56.348 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:55:56.349 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:56.349 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 18:55:56.392 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:55:56.392 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 18:55:56.440 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:55:56.441 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:56.442 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 18:55:56.487 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:55:56.487 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:55:56.488 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:56.488 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 18:55:56.535 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:55:56.536 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:56.536 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 18:55:56.583 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:55:56.584 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:56.585 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 18:55:56.620 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:55:56.621 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 18:55:56.655 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:55:56.655 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:55:56.656 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 18:55:56.690 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:55:56.691 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:55:56.691 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 18:55:56.692  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 18:56:06.045  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 18:56:06.383 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 18:56:06.383 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 18:56:06.457 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 18:56:06.461 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 18:56:06.462 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 18:56:06.575 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 18:56:06.675 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 18:56:06.677 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 18:56:06.736 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 18:56:06.737 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 18:56:06.738 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 18:56:06.777 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 18:56:06.778  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 18:56:07.684  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 18:56:07.741 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 18:56:07.742 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 18:56:07.762  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 18:56:07.782 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 18:56:07.782  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 18:56:07.812 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 18:56:07.812 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 18:56:07.871 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 18:56:07.872 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 18:56:07.916 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 18:56:07.917 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:07.918 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 18:56:07.967 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:56:07.968 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:07.969 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 18:56:08.009 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:56:08.010 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:08.011 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 18:56:08.098 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:56:08.098 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 18:56:08.171 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:56:08.172 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:08.173 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 18:56:08.221 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:56:08.221 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:56:08.221 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:08.223 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 18:56:08.318 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:56:08.319 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:08.320 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 18:56:08.412 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:56:08.414 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:08.415 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 18:56:08.499 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:56:08.499 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 18:56:08.561 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:56:08.561 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:08.562 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 18:56:08.593 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:56:08.594 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:56:08.594 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 18:56:08.594  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 18:56:21.913  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 18:56:22.047 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 18:56:22.048 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 18:56:22.086 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 18:56:22.090 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 18:56:22.091 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 18:56:22.170 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 18:56:22.255 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 18:56:22.255 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 18:56:22.307 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 18:56:22.311 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 18:56:22.311 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 18:56:22.347 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 18:56:22.348  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 18:56:23.046  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 18:56:23.096 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 18:56:23.096 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 18:56:23.149 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 18:56:23.149  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 18:56:23.258  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 18:56:23.259 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 18:56:23.260 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 18:56:23.338 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 18:56:23.339 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 18:56:23.413 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 18:56:23.414 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:23.415 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 18:56:23.466 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:56:23.468 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:23.468 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 18:56:23.511 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:56:23.513 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:23.513 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 18:56:23.555 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:56:23.555 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 18:56:23.593 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:56:23.594 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:23.595 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 18:56:23.630 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:56:23.631 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:56:23.632 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:23.633 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 18:56:23.669 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:56:23.671 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:23.671 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 18:56:23.712 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 18:56:23.713 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:23.713 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 18:56:23.748 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 18:56:23.749 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 18:56:23.791 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 18:56:23.792 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 18:56:23.792 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 18:56:23.829 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 18:56:23.829 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 18:56:23.829 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 18:56:23.830  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 19:00:24.015  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 19:00:24.162 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 19:00:24.164 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 19:00:24.256 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 19:00:24.263 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 19:00:24.264 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 19:00:24.364 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 19:00:24.479 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:00:24.482 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 19:00:24.530 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 19:00:24.531 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 19:00:24.532 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 19:00:24.582 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 19:00:24.582  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 19:00:25.317  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:00:25.368 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:00:25.368 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:00:25.422 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:00:25.423  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:00:25.583  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 19:00:25.636 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 19:00:25.637 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 19:00:25.698 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 19:00:25.699 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 19:00:25.779 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 19:00:25.781 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:00:25.781 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 19:00:25.883 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:00:25.884 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:00:25.885 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 19:00:25.995 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:00:25.996 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:00:25.997 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 19:00:26.124 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:00:26.124 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 19:00:26.190 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:00:26.194 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:00:26.194 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 19:00:26.271 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:00:26.271 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:00:26.274 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:00:26.274 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 19:00:26.339 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:00:26.341 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:00:26.342 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 19:00:26.394 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:00:26.395 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:00:26.418 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 19:00:26.491 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:00:26.491 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 19:00:26.561 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:00:26.562 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:00:26.564 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 19:00:26.630 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:00:26.630 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:00:26.630 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 19:00:26.642  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 19:00:30.865  INFO 7716 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/tags/34', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.TagShowController.show', args参数：[34, {}, 1]}
2020-11-07 19:00:31.001 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag_COUNT    : ==>  Preparing: SELECT count(0) FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 19:00:31.002 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag_COUNT    : ==> Parameters: 
2020-11-07 19:00:31.069 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag_COUNT    : <==      Total: 1
2020-11-07 19:00:31.069 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id LIMIT ?
2020-11-07 19:00:31.069 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 100(Integer)
2020-11-07 19:00:31.147 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 19:00:31.223 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.BlogMapper.findAllByTagId_COUNT  : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type ty, t_user u, t_blog_tags bt, t_tag ta WHERE b.published AND b.user_id = u.id AND b.type_id = ty.id AND b.id = bt.blogs_id AND bt.tags_id = ta.id AND ta.id = ?
2020-11-07 19:00:31.224 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.BlogMapper.findAllByTagId_COUNT  : ==> Parameters: 34(Long)
2020-11-07 19:00:31.338 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.d.BlogMapper.findAllByTagId_COUNT  : <==      Total: 1
2020-11-07 19:00:31.351 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAllByTagId      : ==>  Preparing: SELECT b.id, b.title, b.first_picture, b.views, b.update_time, b.description, ty.name, u.nickname, u.avatar FROM t_blog b, t_type ty, t_user u, t_blog_tags bt, t_tag ta WHERE b.published and b.user_id = u.id and b.type_id = ty.id and b.id = bt.blogs_id and bt.tags_id = ta.id and ta.id = ? ORDER BY b.update_time desc LIMIT ?
2020-11-07 19:00:31.353 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAllByTagId      : ==> Parameters: 34(Long), 5(Integer)
2020-11-07 19:00:31.421 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAllByTagId      : <==      Total: 2
2020-11-07 19:00:31.427  INFO 7716 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: tag
2020-11-07 19:00:31.969  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:00:32.187 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:00:32.188 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:00:32.294 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:00:32.295  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:02:09.874  INFO 7716 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 19:02:10.247 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 19:02:10.248 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 19:02:10.298 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 19:02:10.302 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 19:02:10.302 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 19:02:10.376 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 19:02:10.485 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:02:10.485 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 19:02:10.526 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 19:02:10.528 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 19:02:10.528 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 19:02:10.587 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 19:02:10.587  INFO 7716 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 19:02:10.713 ERROR 7716 --- [http-nio-8080-exec-6] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-6] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626) [tomcat-embed-core-9.0.38.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733) [tomcat-embed-core-9.0.38.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "type.id" (template: "blog" - line 49, col 36)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "type.id" (template: "blog" - line 49, col 36)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 74 common frames omitted

2020-11-07 19:02:10.747 ERROR 7716 --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626) ~[tomcat-embed-core-9.0.38.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733) ~[tomcat-embed-core-9.0.38.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]

2020-11-07 19:02:56.120  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 19:02:56.238 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 19:02:56.242 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 19:02:56.295 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 19:02:56.302 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 19:02:56.303 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 19:02:56.375 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 19:02:56.472 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:02:56.472 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 19:02:56.516 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 19:02:56.517 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 19:02:56.518 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 19:02:56.597 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 19:02:56.598  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 19:02:57.507  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:02:57.548 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:02:57.549 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:02:57.587 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:02:57.588  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:02:57.661  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 19:02:57.694 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 19:02:57.694 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 19:02:57.728 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 19:02:57.728 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 19:02:57.757 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 19:02:57.758 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:02:57.758 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 19:02:57.788 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:02:57.791 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:02:57.791 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 19:02:57.822 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:02:57.823 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:02:57.824 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 19:02:57.859 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:02:57.860 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 19:02:57.890 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:02:57.890 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:02:57.891 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 19:02:57.920 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:02:57.920 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:02:57.921 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:02:57.921 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 19:02:57.962 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:02:57.964 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:02:57.965 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 19:02:58.006 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:02:58.007 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:02:58.008 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 19:02:58.047 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:02:58.047 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 19:02:58.084 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:02:58.085 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:02:58.085 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 19:02:58.116 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:02:58.117 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:02:58.117 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 19:02:58.117  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 19:03:38.355  INFO 7716 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 19:03:38.494 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 19:03:38.495 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 19:03:38.550 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 19:03:38.552 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 19:03:38.552 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 19:03:38.639 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 19:03:38.741 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:03:38.741 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 19:03:38.785 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 19:03:38.786 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 19:03:38.787 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 19:03:38.837 DEBUG 7716 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 19:03:38.838  INFO 7716 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 19:03:39.781  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:03:39.823 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:03:39.824 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:03:39.866 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:03:39.866  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:03:39.960  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 19:03:39.960 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 19:03:39.961 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 19:03:39.997 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 19:03:39.999 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 19:03:40.038 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 19:03:40.038 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:03:40.038 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 19:03:40.102 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:03:40.103 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:03:40.103 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 19:03:40.142 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:03:40.750 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:03:40.752 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 19:03:40.799 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:03:40.800 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 19:03:40.838 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:03:40.839 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:03:40.840 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 19:03:40.883 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:03:40.883 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:03:40.884 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:03:40.884 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 19:03:40.918 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:03:40.919 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:03:40.920 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 19:03:40.969 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:03:40.972 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:03:40.973 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 19:03:41.038 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:03:41.039 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 19:03:41.119 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:03:41.120 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:03:41.120 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 19:03:41.155 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:03:41.155 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:03:41.156 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 19:03:41.157  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 19:03:45.027  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/types/32', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.TypeShowController.show', args参数：[32, {}, 1]}
2020-11-07 19:03:45.150 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType_COUNT  : ==>  Preparing: SELECT count(0) FROM t_type t INNER JOIN t_blog b ON t.id = b.type_id
2020-11-07 19:03:45.150 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType_COUNT  : ==> Parameters: 
2020-11-07 19:03:45.207 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType_COUNT  : <==      Total: 1
2020-11-07 19:03:45.207 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id LIMIT ?
2020-11-07 19:03:45.207 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 100(Integer)
2020-11-07 19:03:45.262 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 19:03:45.293 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.B.findAllByTypeId_COUNT          : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published AND b.type_id = ?
2020-11-07 19:03:45.294 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.B.findAllByTypeId_COUNT          : ==> Parameters: 32(Long)
2020-11-07 19:03:45.355 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.d.B.findAllByTypeId_COUNT          : <==      Total: 1
2020-11-07 19:03:45.356 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAllByTypeId     : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.type_id = ? order by b.update_time desc LIMIT ?
2020-11-07 19:03:45.356 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAllByTypeId     : ==> Parameters: 32(Long), 5(Integer)
2020-11-07 19:03:45.418 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAllByTypeId     : <==      Total: 2
2020-11-07 19:03:45.419  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: type
2020-11-07 19:03:45.914  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:03:45.915 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:03:45.915 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:03:45.958 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:03:45.958  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:04:16.063  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[53, {}]}
2020-11-07 19:04:16.921 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 19:04:16.928 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 19:04:17.069 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 19:04:17.072 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 19:04:17.075 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 19:04:17.344 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 19:04:17.606 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:04:17.607 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 53(Long)
2020-11-07 19:04:17.748 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 19:04:17.750 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 19:04:17.751 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 34(Long), 37(Long)
2020-11-07 19:04:17.882 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 19:04:17.883  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 19:04:18.385  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:04:18.461 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:04:18.461 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:04:18.467  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 19:04:18.525 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 19:04:18.525 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 19:04:18.525 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:04:18.526  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:04:18.607 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 19:04:18.609 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 19:04:18.710 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 19:04:18.713 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:18.713 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 19:04:18.761 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:04:18.762 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:18.762 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 19:04:18.813 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:04:18.819 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:18.819 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 19:04:18.860 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:04:18.861 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 19:04:18.903 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:04:18.904 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:18.905 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 19:04:18.962 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:04:18.962 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:04:18.964 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:18.964 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 19:04:19.011 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:04:19.013 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:19.013 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 19:04:19.075 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:04:19.076 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:19.076 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 19:04:19.127 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:04:19.127 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 19:04:19.169 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:04:19.172 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:19.173 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 19:04:19.209 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:04:19.210 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:04:19.210 DEBUG 7716 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : <==      Total: 6
2020-11-07 19:04:19.212  INFO 7716 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 19:04:48.400  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.post', args参数：[Comment(id=null, nickname=大名, email=tomcat@qq.com, content=评论测试, adminComment=false, avatar=null, createTime=null, blogId=null, parentCommentId=null, parentNickname=null, replyComments=[], parentComment=Comment(id=-1, nickname=null, email=null, content=null, adminComment=false, avatar=null, createTime=null, blogId=null, parentCommentId=null, parentNickname=null, replyComments=[], parentComment=null, blog=null), blog=Blog(id=53, title=null, content=null, firstPicture=null, flag=原创, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=null, description=null, type=null, user=null, tags=[], comments=[])), org.apache.catalina.session.StandardSessionFacade@7801fdde]}
2020-11-07 19:04:48.467 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 19:04:48.468 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 53(Long)
2020-11-07 19:04:48.507 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 19:04:48.511 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 19:04:48.512 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 53(Long)
2020-11-07 19:04:48.577 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 19:04:48.649 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.saveComments     : ==>  Preparing: insert into t_comment(id,nickname,email,admin_comment,content,avatar,create_time,blog_id,parent_comment_id) values (?,?,?,?,?,?,?,?,?)
2020-11-07 19:04:48.659 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.saveComments     : ==> Parameters: null, 大名(String), tomcat@qq.com(String), false(Boolean), 评论测试(String), /images/小黄人头像.jpg(String), 2020-11-07 19:04:48.647(Timestamp), 53(Long), null
2020-11-07 19:04:48.738 DEBUG 7716 --- [http-nio-8080-exec-10] c.s.p.dao.CommentMapper.saveComments     : <==    Updates: 1
2020-11-07 19:04:48.748  INFO 7716 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/comments/53
2020-11-07 19:04:48.794  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[53, {}]}
2020-11-07 19:04:48.833 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 19:04:48.833 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 53(Long)
2020-11-07 19:04:48.870 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 19:04:48.870 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 53(Long)
2020-11-07 19:04:48.909 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 19:04:48.909 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:48.910 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 85(Long)
2020-11-07 19:04:48.948 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:04:48.948 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:48.948 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 71(Long)
2020-11-07 19:04:48.991 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:04:48.992 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:48.992 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 64(Long)
2020-11-07 19:04:49.026 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:04:49.027 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:49.027 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 61(Long)
2020-11-07 19:04:49.089 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:04:49.089 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 61(Long)
2020-11-07 19:04:49.125 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:04:49.126 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:49.126 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 62(Long)
2020-11-07 19:04:49.163 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:04:49.163 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:04:49.163 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:49.164 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 56(Long)
2020-11-07 19:04:49.202 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:04:49.204 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:49.204 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 55(Long)
2020-11-07 19:04:49.249 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:04:49.250 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:49.252 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 54(Long)
2020-11-07 19:04:49.299 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:04:49.300 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 54(Long)
2020-11-07 19:04:49.352 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:04:49.353 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:04:49.354 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 59(Long)
2020-11-07 19:04:49.398 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:04:49.399 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:04:49.399 DEBUG 7716 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : <==      Total: 7
2020-11-07 19:04:49.401  INFO 7716 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 19:05:00.356  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/types/-1', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.TypeShowController.show', args参数：[-1, {}, 1]}
2020-11-07 19:05:00.403 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType_COUNT  : ==>  Preparing: SELECT count(0) FROM t_type t INNER JOIN t_blog b ON t.id = b.type_id
2020-11-07 19:05:00.404 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType_COUNT  : ==> Parameters: 
2020-11-07 19:05:00.477 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType_COUNT  : <==      Total: 1
2020-11-07 19:05:00.478 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id LIMIT ?
2020-11-07 19:05:00.478 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 100(Integer)
2020-11-07 19:05:00.787 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 19:05:00.800 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.d.B.findAllByTypeId_COUNT          : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published AND b.type_id = ?
2020-11-07 19:05:00.801 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.d.B.findAllByTypeId_COUNT          : ==> Parameters: 7(Long)
2020-11-07 19:05:00.862 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.d.B.findAllByTypeId_COUNT          : <==      Total: 1
2020-11-07 19:05:00.864 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAllByTypeId     : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.type_id = ? order by b.update_time desc LIMIT ?
2020-11-07 19:05:00.866 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAllByTypeId     : ==> Parameters: 7(Long), 5(Integer)
2020-11-07 19:05:00.931 DEBUG 7716 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAllByTypeId     : <==      Total: 2
2020-11-07 19:05:00.935  INFO 7716 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: type
2020-11-07 19:05:01.400  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:05:01.402 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:05:01.402 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:05:01.441 DEBUG 7716 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:05:01.441  INFO 7716 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:05:02.289  INFO 7716 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/tags/-1', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.TagShowController.show', args参数：[-1, {}, 1]}
2020-11-07 19:05:02.334 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.getIndexTag_COUNT    : ==>  Preparing: SELECT count(0) FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 19:05:02.336 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.getIndexTag_COUNT    : ==> Parameters: 
2020-11-07 19:05:02.408 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.getIndexTag_COUNT    : <==      Total: 1
2020-11-07 19:05:02.408 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id LIMIT ?
2020-11-07 19:05:02.409 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 100(Integer)
2020-11-07 19:05:02.463 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 19:05:02.472 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.d.BlogMapper.findAllByTagId_COUNT  : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type ty, t_user u, t_blog_tags bt, t_tag ta WHERE b.published AND b.user_id = u.id AND b.type_id = ty.id AND b.id = bt.blogs_id AND bt.tags_id = ta.id AND ta.id = ?
2020-11-07 19:05:02.472 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.d.BlogMapper.findAllByTagId_COUNT  : ==> Parameters: 20(Long)
2020-11-07 19:05:02.656 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.d.BlogMapper.findAllByTagId_COUNT  : <==      Total: 1
2020-11-07 19:05:02.659 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findAllByTagId      : ==>  Preparing: SELECT b.id, b.title, b.first_picture, b.views, b.update_time, b.description, ty.name, u.nickname, u.avatar FROM t_blog b, t_type ty, t_user u, t_blog_tags bt, t_tag ta WHERE b.published and b.user_id = u.id and b.type_id = ty.id and b.id = bt.blogs_id and bt.tags_id = ta.id and ta.id = ? ORDER BY b.update_time desc LIMIT ?
2020-11-07 19:05:02.661 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findAllByTagId      : ==> Parameters: 20(Long), 5(Integer)
2020-11-07 19:05:02.708 DEBUG 7716 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findAllByTagId      : <==      Total: 3
2020-11-07 19:05:02.709  INFO 7716 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: tag
2020-11-07 19:05:03.168  INFO 7716 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:05:03.225 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:05:03.225 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:05:03.269 DEBUG 7716 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:05:03.269  INFO 7716 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:05:04.073  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/archives', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.ArchiveShowController.archives', args参数：[{}]}
2020-11-07 19:05:04.141 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findGroupYear       : ==>  Preparing: select DATE_FORMAT(b.create_time, '%Y') from t_blog b where b.published order by b.create_time desc
2020-11-07 19:05:04.142 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findGroupYear       : ==> Parameters: 
2020-11-07 19:05:04.199 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findGroupYear       : <==      Total: 6
2020-11-07 19:05:04.285 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findByYear          : ==>  Preparing: select b.title, b.create_time, b.id, b.flag from t_blog b where b.published and DATE_FORMAT(b.create_time, "%Y") = ?
2020-11-07 19:05:04.287 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findByYear          : ==> Parameters: 2016(String)
2020-11-07 19:05:04.324 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findByYear          : <==      Total: 1
2020-11-07 19:05:04.324 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findByYear          : ==>  Preparing: select b.title, b.create_time, b.id, b.flag from t_blog b where b.published and DATE_FORMAT(b.create_time, "%Y") = ?
2020-11-07 19:05:04.326 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findByYear          : ==> Parameters: 2018(String)
2020-11-07 19:05:04.366 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findByYear          : <==      Total: 1
2020-11-07 19:05:04.366 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findByYear          : ==>  Preparing: select b.title, b.create_time, b.id, b.flag from t_blog b where b.published and DATE_FORMAT(b.create_time, "%Y") = ?
2020-11-07 19:05:04.366 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findByYear          : ==> Parameters: 2020(String)
2020-11-07 19:05:04.414 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findByYear          : <==      Total: 4
2020-11-07 19:05:04.416 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc
2020-11-07 19:05:04.417 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 
2020-11-07 19:05:04.465 DEBUG 7716 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll             : <==      Total: 6
2020-11-07 19:05:04.467  INFO 7716 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: archives
2020-11-07 19:05:04.965  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:05:04.966 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:05:04.966 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:05:05.007 DEBUG 7716 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:05:05.008  INFO 7716 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:09:58.543  INFO 1416 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 1416 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 19:09:58.548 DEBUG 1416 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 19:09:58.549  INFO 1416 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 19:10:00.658  INFO 1416 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 19:10:00.671  INFO 1416 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 19:10:00.672  INFO 1416 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 19:10:00.790  INFO 1416 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 19:10:00.791  INFO 1416 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2105 ms
2020-11-07 19:10:01.680  INFO 1416 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 19:10:01.884  INFO 1416 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 19:10:02.240  INFO 1416 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 19:10:02.252  INFO 1416 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 4.671 seconds (JVM running for 5.729)
2020-11-07 19:10:07.089  INFO 1416 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 19:10:07.089  INFO 1416 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 19:10:07.103  INFO 1416 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-11-07 19:10:07.149  INFO 1416 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 19:10:07.180  INFO 1416 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 19:10:08.660  INFO 1416 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 19:10:08.905 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 19:10:09.037 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 19:10:09.199 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 19:10:09.212 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 19:10:09.216 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 19:10:09.278 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll             : <==      Total: 5
2020-11-07 19:10:09.288 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 19:10:09.289 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 19:10:09.335 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 7
2020-11-07 19:10:09.354 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 19:10:09.356 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 19:10:09.431 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 17
2020-11-07 19:10:09.435 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 19:10:09.437 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 19:10:09.498 DEBUG 1416 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 5
2020-11-07 19:10:09.500  INFO 1416 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 19:10:11.353  INFO 1416 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:10:11.396 DEBUG 1416 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:10:11.397 DEBUG 1416 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:10:11.443 DEBUG 1416 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:10:11.444  INFO 1416 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:10:14.724  INFO 1416 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/39', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[39, {}]}
2020-11-07 19:10:14.876 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 19:10:14.877 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 39(Long)
2020-11-07 19:10:14.927 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 19:10:15.088 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 19:10:15.091 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 39(Long)
2020-11-07 19:10:15.174 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 19:10:15.264 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:10:15.266 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 39(Long)
2020-11-07 19:10:15.311 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 3
2020-11-07 19:10:15.509 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? , ? )
2020-11-07 19:10:15.510 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 20(Long), 33(Long), 37(Long)
2020-11-07 19:10:15.554 DEBUG 1416 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 3
2020-11-07 19:10:15.557  INFO 1416 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 19:10:16.114  INFO 1416 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:10:16.150 DEBUG 1416 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:10:16.150 DEBUG 1416 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:10:16.189  INFO 1416 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/39', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[39, {}]}
2020-11-07 19:10:16.193 DEBUG 1416 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 19:10:16.194  INFO 1416 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:10:16.197 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 19:10:16.198 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 39(Long)
2020-11-07 19:10:16.240 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 19:10:16.241 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 39(Long)
2020-11-07 19:10:16.278 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 19:10:16.279 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:10:16.279 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 84(Long)
2020-11-07 19:10:16.328 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:10:16.340 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:10:16.342 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 46(Long)
2020-11-07 19:10:16.383 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:10:16.391 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:10:16.395 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 41(Long)
2020-11-07 19:10:16.446 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:10:16.448 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 41(Long)
2020-11-07 19:10:16.502 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:10:16.503 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:10:16.504 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 42(Long)
2020-11-07 19:10:16.551 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:10:16.553 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:10:16.557 DEBUG 1416 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : <==      Total: 3
2020-11-07 19:10:16.564  INFO 1416 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 19:11:01.391  INFO 1416 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.post', args参数：[Comment(id=null, nickname=ab, email=jack@163.com, content=回复, adminComment=false, avatar=null, createTime=null, blogId=null, parentCommentId=null, parentNickname=null, replyComments=[], parentComment=Comment(id=-1, nickname=null, email=null, content=null, adminComment=false, avatar=null, createTime=null, blogId=null, parentCommentId=null, parentNickname=null, replyComments=[], parentComment=null, blog=null), blog=Blog(id=39, title=null, content=null, firstPicture=null, flag=原创, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=null, description=null, type=null, user=null, tags=[], comments=[])), org.apache.catalina.session.StandardSessionFacade@3981f2c3]}
2020-11-07 19:11:01.492 DEBUG 1416 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 19:11:01.493 DEBUG 1416 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 39(Long)
2020-11-07 19:11:01.547 DEBUG 1416 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 19:11:01.557 DEBUG 1416 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 19:11:01.558 DEBUG 1416 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 39(Long)
2020-11-07 19:11:01.634 DEBUG 1416 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 19:11:01.708 DEBUG 1416 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.saveComments     : ==>  Preparing: insert into t_comment(id,nickname,email,admin_comment,content,avatar,create_time,blog_id,parent_comment_id) values (?,?,?,?,?,?,?,?,?)
2020-11-07 19:11:01.725 DEBUG 1416 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.saveComments     : ==> Parameters: null, ab(String), jack@163.com(String), false(Boolean), 回复(String), /images/小黄人头像.jpg(String), 2020-11-07 19:11:01.706(Timestamp), 39(Long), null
2020-11-07 19:11:01.797 DEBUG 1416 --- [http-nio-8080-exec-3] c.s.p.dao.CommentMapper.saveComments     : <==    Updates: 1
2020-11-07 19:11:01.811  INFO 1416 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/comments/39
2020-11-07 19:11:01.876  INFO 1416 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/39', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[39, {}]}
2020-11-07 19:11:01.878 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 19:11:01.879 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 39(Long)
2020-11-07 19:11:01.928 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====>  Preparing: select id,title from t_blog where id = ?
2020-11-07 19:11:01.930 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : ====> Parameters: 39(Long)
2020-11-07 19:11:01.965 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getBlog          : <====      Total: 1
2020-11-07 19:11:01.968 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:11:01.969 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 86(Long)
2020-11-07 19:11:02.008 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:11:02.012 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:11:02.013 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 84(Long)
2020-11-07 19:11:02.069 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:11:02.074 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:11:02.075 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 46(Long)
2020-11-07 19:11:02.128 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 0
2020-11-07 19:11:02.134 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:11:02.136 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ====> Parameters: 41(Long)
2020-11-07 19:11:02.203 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======>  Preparing: select * from t_comment where id = ?
2020-11-07 19:11:02.204 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : ======> Parameters: 41(Long)
2020-11-07 19:11:02.251 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.dao.CommentMapper.getParent        : <======      Total: 1
2020-11-07 19:11:02.253 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======>  Preparing: select * from t_comment where parent_comment_id = ?;
2020-11-07 19:11:02.254 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : ======> Parameters: 42(Long)
2020-11-07 19:11:02.291 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <======      Total: 0
2020-11-07 19:11:02.292 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.CommentMapper.getreplyComments   : <====      Total: 1
2020-11-07 19:11:02.293 DEBUG 1416 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : <==      Total: 4
2020-11-07 19:11:02.296  INFO 1416 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 19:13:39.823  INFO 5708 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 5708 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 19:13:39.827 DEBUG 5708 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 19:13:39.828  INFO 5708 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 19:13:43.049  INFO 5708 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 19:13:43.069  INFO 5708 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 19:13:43.070  INFO 5708 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 19:13:43.333  INFO 5708 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 19:13:43.334  INFO 5708 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3370 ms
2020-11-07 19:13:45.164  INFO 5708 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 19:13:45.519  INFO 5708 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 19:13:46.222  INFO 5708 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 19:13:46.237  INFO 5708 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 7.387 seconds (JVM running for 8.887)
2020-11-07 19:14:04.924  INFO 5708 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 19:14:04.925  INFO 5708 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 19:14:04.955  INFO 5708 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 28 ms
2020-11-07 19:14:05.019  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 19:14:05.049  INFO 5708 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 19:14:05.261  INFO 5708 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 19:14:05.317 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 19:14:05.344 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 19:14:05.387 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 19:14:05.392 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 19:14:05.392 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 19:14:05.394 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 0
2020-11-07 19:14:05.401 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 19:14:05.401 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 19:14:05.406 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 0
2020-11-07 19:14:05.408 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 19:14:05.408 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 19:14:05.410 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 0
2020-11-07 19:14:05.411  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 19:14:06.480  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:14:06.482 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:14:06.482 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:14:06.483 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 0
2020-11-07 19:14:06.483  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:14:09.409  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@555ab3bd, {}]}
2020-11-07 19:14:09.463 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 19:14:09.464 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 19:14:09.472 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 19:14:09.478  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 19:14:11.290  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 19:14:11.304 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:14:11.304 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:14:11.307 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:14:11.309 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:14:11.310 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:14:11.316 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 11
2020-11-07 19:14:11.317  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:14:20.230  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.toAddBlog', args参数：[{}]}
2020-11-07 19:14:20.233 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:14:20.234 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:14:20.242 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 11
2020-11-07 19:14:20.244 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 19:14:20.244 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 19:14:20.246 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 0
2020-11-07 19:14:20.248  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 19:14:24.376  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 19:14:24.388 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:14:24.389 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:14:24.393 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:14:24.398 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:14:24.399 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:14:24.401 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:14:24.402  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:14:26.914  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 2]}
2020-11-07 19:14:26.922 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:14:26.925 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:14:26.936 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:14:26.944 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?, ?
2020-11-07 19:14:26.950 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer), 5(Integer)
2020-11-07 19:14:26.953 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:14:26.954  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:14:28.563  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 3]}
2020-11-07 19:14:28.573 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:14:28.575 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:14:28.584 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:14:28.589 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?, ?
2020-11-07 19:14:28.599 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 10(Integer), 5(Integer)
2020-11-07 19:14:28.606 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 1
2020-11-07 19:14:28.611  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:14:30.043  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 19:14:30.048 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:14:30.049 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:14:30.053 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:14:30.058 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:14:30.059 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:14:30.065 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:14:30.068  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:14:38.754  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 19:14:38.789 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:14:38.795 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:14:38.800 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:14:38.803  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:14:41.194  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:14:41.195  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:14:47.574  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=JavaSE, blogs=[]), {}]}
2020-11-07 19:14:47.578 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:14:47.579 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: JavaSE(String)
2020-11-07 19:14:47.581 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:14:47.584 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:14:47.584 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, JavaSE(String)
2020-11-07 19:14:47.606 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:14:47.607  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:14:47.642  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:14:47.644 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:14:47.645 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:14:47.647 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:14:47.648 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:14:47.649 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:14:47.652 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 1
2020-11-07 19:14:47.653  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:14:49.852  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:14:49.854  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:15:42.845  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=JavaWeb, blogs=[]), {}]}
2020-11-07 19:15:42.866 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:15:42.867 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: JavaWeb(String)
2020-11-07 19:15:42.870 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:15:42.872 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:15:42.873 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, JavaWeb(String)
2020-11-07 19:15:42.886 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:15:42.888  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:15:42.897  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:15:42.899 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:15:42.900 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:15:42.903 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:15:42.905 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:15:42.906 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:15:42.908 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 2
2020-11-07 19:15:42.909  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:15:44.625  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:15:44.626  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:15:52.012  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=MySQL, blogs=[]), {}]}
2020-11-07 19:15:52.013 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:15:52.014 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: MySQL(String)
2020-11-07 19:15:52.015 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:15:52.017 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:15:52.018 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, MySQL(String)
2020-11-07 19:15:52.021 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:15:52.021  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:15:52.038  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:15:52.040 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:15:52.040 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:15:52.042 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:15:52.043 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:15:52.043 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:15:52.046 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 3
2020-11-07 19:15:52.047  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:15:53.728  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:15:53.730  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:15:59.714  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=LeetCode, blogs=[]), {}]}
2020-11-07 19:15:59.716 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:15:59.718 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: LeetCode(String)
2020-11-07 19:15:59.719 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:15:59.721 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:15:59.722 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, LeetCode(String)
2020-11-07 19:15:59.726 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:15:59.726  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:15:59.738  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:15:59.740 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:15:59.741 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:15:59.742 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:15:59.743 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:15:59.744 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:15:59.751 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 4
2020-11-07 19:15:59.751  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:16:05.728  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:16:05.729  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:16:34.103  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=HTML, blogs=[]), {}]}
2020-11-07 19:16:34.105 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:16:34.105 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: HTML(String)
2020-11-07 19:16:34.106 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:16:34.107 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:16:34.108 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, HTML(String)
2020-11-07 19:16:34.113 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:16:34.114  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:16:34.131  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:16:34.133 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:16:34.133 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:16:34.134 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:16:34.136 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:16:34.136 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:16:34.138 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:16:34.139  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:16:46.245  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:16:46.246  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:16:49.138  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=CSS, blogs=[]), {}]}
2020-11-07 19:16:49.141 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:16:49.142 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: CSS(String)
2020-11-07 19:16:49.144 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:16:49.146 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:16:49.147 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, CSS(String)
2020-11-07 19:16:49.152 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:16:49.153  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:16:49.168  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:16:49.170 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:16:49.170 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:16:49.171 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:16:49.173 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:16:49.174 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:16:49.177 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:16:49.178  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:17:12.064  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 19:17:12.094 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:17:12.096 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:17:12.100 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:17:12.103 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:17:12.105 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:17:12.115 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 11
2020-11-07 19:17:12.116  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:17:14.377  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 19:17:14.383 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:17:14.384 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:17:14.387 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:17:14.389 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:17:14.390 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:17:14.395 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:17:14.396  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:17:16.199  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 19:17:16.201 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:17:16.202 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:17:16.203 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:17:16.204 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:17:16.204 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:17:16.206 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:17:16.206  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:17:17.292  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 19:17:17.299 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:17:17.300 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:17:17.303 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:17:17.307 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:17:17.312 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:17:17.319 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:17:17.320  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:17:18.395  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 19:17:18.397  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 19:17:23.124  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=大数据, blogs=[]), {}]}
2020-11-07 19:17:23.126 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 19:17:23.127 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 大数据(String)
2020-11-07 19:17:23.128 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 19:17:23.130 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 19:17:23.131 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 大数据(String)
2020-11-07 19:17:23.146 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 19:17:23.146  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 19:17:23.156  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 19:17:23.157 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:17:23.158 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:17:23.159 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:17:23.160 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:17:23.161 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:17:23.164 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:17:23.164  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:17:24.159  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 19:17:24.165 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:17:24.166 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:17:24.170 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:17:24.175 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:17:24.177 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:17:24.184 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:17:24.186  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:17:25.531  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:17:25.531  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:17:30.339  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=JavaScript, blogs=[]), {}]}
2020-11-07 19:17:30.341 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:17:30.342 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: JavaScript(String)
2020-11-07 19:17:30.343 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:17:30.345 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:17:30.345 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, JavaScript(String)
2020-11-07 19:17:30.348 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:17:30.349  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:17:30.364  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:17:30.366 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:17:30.367 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:17:30.369 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:17:30.370 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:17:30.370 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:17:30.372 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:17:30.372  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:18:18.375  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 19:18:18.384 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:18:18.386 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:18:18.391 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:18:18.394 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:18:18.397 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:18:18.401 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:18:18.402  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:18:24.998  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 19:18:24.999  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 19:18:32.779  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=面试, blogs=[]), {}]}
2020-11-07 19:18:32.782 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 19:18:32.783 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 面试(String)
2020-11-07 19:18:32.785 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 19:18:32.787 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 19:18:32.788 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 面试(String)
2020-11-07 19:18:32.807 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 19:18:32.807  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 19:18:32.816  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 19:18:32.818 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:18:32.818 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:18:32.820 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:18:32.821 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:18:32.821 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:18:32.823 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:18:32.823  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:18:33.963  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 19:18:33.970 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:18:33.971 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:18:33.976 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:18:33.981 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:18:33.983 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:18:33.993 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:18:33.994  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:18:48.604  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:18:48.604  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:18:53.390  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=Spring, blogs=[]), {}]}
2020-11-07 19:18:53.392 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:18:53.393 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: Spring(String)
2020-11-07 19:18:53.395 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:18:53.396 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:18:53.397 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, Spring(String)
2020-11-07 19:18:53.400 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:18:53.400  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:18:53.417  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:18:53.419 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:18:53.420 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:18:53.423 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:18:53.424 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:18:53.425 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:18:53.426 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:18:53.427  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:18:54.879  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:18:54.879  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:19:03.769  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=Springboot, blogs=[]), {}]}
2020-11-07 19:19:03.771 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:19:03.771 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: Springboot(String)
2020-11-07 19:19:03.772 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:19:03.773 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:19:03.773 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, Springboot(String)
2020-11-07 19:19:03.781 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:19:03.782  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:19:03.790  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:19:03.791 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:19:03.791 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:19:03.792 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:19:03.794 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:19:03.794 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:19:03.796 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:19:03.798  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:19:05.263  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:19:05.265  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:19:10.082  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=Mybatis, blogs=[]), {}]}
2020-11-07 19:19:10.084 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:19:10.085 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: Mybatis(String)
2020-11-07 19:19:10.086 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:19:10.088 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:19:10.088 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, Mybatis(String)
2020-11-07 19:19:10.090 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:19:10.091  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:19:10.105  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:19:10.107 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:19:10.107 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:19:10.109 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:19:10.111 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:19:10.112 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:19:10.114 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:19:10.114  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:39:52.182  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 19:39:52.193 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:39:52.196 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:39:52.202 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:39:52.205 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:39:52.206 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:39:52.212 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 13
2020-11-07 19:39:52.214  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:39:59.204  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.toAddBlog', args参数：[{}]}
2020-11-07 19:39:59.210 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:39:59.211 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:39:59.221 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 13
2020-11-07 19:39:59.227 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 19:39:59.227 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 19:39:59.236 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 10
2020-11-07 19:39:59.237  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 19:43:12.104  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 19:43:12.108 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:43:12.109 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:43:12.112 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:43:12.114 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:43:12.114 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:43:12.117 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:43:12.118  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:43:13.967  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:43:13.967  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:44:48.245  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 19:44:48.252 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:44:48.253 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:44:48.262 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:44:48.266 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:44:48.266 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:44:48.270 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:44:48.271  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:44:50.115  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 19:44:50.117  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 19:44:54.295  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=Java, blogs=[]), {}]}
2020-11-07 19:44:54.299 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 19:44:54.301 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: Java(String)
2020-11-07 19:44:54.305 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 19:44:54.308 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 19:44:54.309 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, Java(String)
2020-11-07 19:44:54.316 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 19:44:54.317  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 19:44:54.341  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 19:44:54.345 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:44:54.346 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:44:54.350 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:44:54.352 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:44:54.353 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:44:54.355 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:44:54.356  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:46:04.460  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 2]}
2020-11-07 19:46:04.468 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:46:04.470 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:46:04.474 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:46:04.481 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?, ?
2020-11-07 19:46:04.482 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer), 5(Integer)
2020-11-07 19:46:04.487 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:46:04.488  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:46:06.101  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 3]}
2020-11-07 19:46:06.110 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:46:06.112 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:46:06.114 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:46:06.119 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?, ?
2020-11-07 19:46:06.120 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 10(Integer), 5(Integer)
2020-11-07 19:46:06.126 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 4
2020-11-07 19:46:06.127  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:46:51.998  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 19:46:52.009 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:46:52.011 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:46:52.022 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:46:52.029 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:46:52.030 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:46:52.040 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:46:52.044  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:46:55.520  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:46:55.521  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:47:05.780  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=面向对象的设计原则, blogs=[]), {}]}
2020-11-07 19:47:05.781 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:47:05.783 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: 面向对象的设计原则(String)
2020-11-07 19:47:05.785 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:47:05.786 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:47:05.786 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, 面向对象的设计原则(String)
2020-11-07 19:47:05.788 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:47:05.790  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:47:05.799  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:47:05.803 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:47:05.803 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:47:05.804 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:47:05.806 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:47:05.807 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:47:05.809 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:47:05.809  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:47:07.082  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 19:47:07.096 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:47:07.097 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:47:07.106 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:47:07.110 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:47:07.112 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:47:07.120 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:47:07.122  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:47:14.156  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 19:47:14.167 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:47:14.169 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:47:14.173 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:47:14.180 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:47:14.182 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:47:14.187 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:47:14.190  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:47:16.560  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/53/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.editTag', args参数：[53, {}]}
2020-11-07 19:47:16.567 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectById           : ==>  Preparing: select id,name from blog.t_tag where id = ?;
2020-11-07 19:47:16.570 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectById           : ==> Parameters: 53(Long)
2020-11-07 19:47:16.576 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectById           : <==      Total: 1
2020-11-07 19:47:16.579  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:47:19.706  WARN 5708 --- [http-nio-8080-exec-5] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2020-11-07 19:47:19.708  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/53', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.changeTag', args参数：[{}, 53, Tag(id=53, name=面向对象, blogs=[])]}
2020-11-07 19:47:19.709 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:47:19.710 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: 面向对象(String)
2020-11-07 19:47:19.711 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:47:19.713 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.updateTag            : ==>  Preparing: update blog.t_tag set name = ? where id = ?;
2020-11-07 19:47:19.713 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.updateTag            : ==> Parameters: 面向对象(String), 53(Long)
2020-11-07 19:47:19.724 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.updateTag            : <==    Updates: 1
2020-11-07 19:47:19.725  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:47:19.742  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=修改成功}]}
2020-11-07 19:47:19.743 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:47:19.743 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:47:19.745 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:47:19.746 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:47:19.746 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:47:19.749 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:47:19.749  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:47:22.285  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 19:47:22.286  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:47:30.669  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=设计原则, blogs=[]), {}]}
2020-11-07 19:47:30.671 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:47:30.672 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: 设计原则(String)
2020-11-07 19:47:30.674 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:47:30.678 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 19:47:30.680 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, 设计原则(String)
2020-11-07 19:47:30.683 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 19:47:30.683  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:47:30.700  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 19:47:30.707 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:47:30.708 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:47:30.710 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:47:30.714 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:47:30.715 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:47:30.719 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:47:30.720  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:47:32.154  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/54/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.editTag', args参数：[54, {}]}
2020-11-07 19:47:32.158 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectById           : ==>  Preparing: select id,name from blog.t_tag where id = ?;
2020-11-07 19:47:32.158 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectById           : ==> Parameters: 54(Long)
2020-11-07 19:47:32.161 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectById           : <==      Total: 1
2020-11-07 19:47:32.163  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 19:47:40.880  WARN 5708 --- [http-nio-8080-exec-5] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2020-11-07 19:47:40.884  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/54', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.changeTag', args参数：[{}, 54, Tag(id=54, name=面向对象的设计原则, blogs=[])]}
2020-11-07 19:47:40.885 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 19:47:40.886 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: 面向对象的设计原则(String)
2020-11-07 19:47:40.887 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 19:47:40.887 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.updateTag            : ==>  Preparing: update blog.t_tag set name = ? where id = ?;
2020-11-07 19:47:40.888 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.updateTag            : ==> Parameters: 面向对象的设计原则(String), 54(Long)
2020-11-07 19:47:40.890 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.updateTag            : <==    Updates: 1
2020-11-07 19:47:40.890  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:47:40.904  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=修改成功}]}
2020-11-07 19:47:40.908 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:47:40.909 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:47:40.910 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:47:40.912 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:47:40.912 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:47:40.914 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:47:40.916  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:47:44.166  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/53/delete', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.deleteType', args参数：[53, {}]}
2020-11-07 19:47:44.169 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.deleteTypeById       : ==>  Preparing: delete from blog.t_tag where id = ?;
2020-11-07 19:47:44.170 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.deleteTypeById       : ==> Parameters: 53(Long)
2020-11-07 19:47:44.175 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.deleteTypeById       : <==    Updates: 1
2020-11-07 19:47:44.175  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 19:47:44.197  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=删除成功}]}
2020-11-07 19:47:44.200 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 19:47:44.200 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 19:47:44.202 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 19:47:44.204 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 19:47:44.204 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 19:47:44.206 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 19:47:44.207  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 19:47:46.761  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 19:47:46.769 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 19:47:46.770 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 19:47:46.772 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 19:47:46.777 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 19:47:46.779 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 19:47:46.784 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 19:47:46.785  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 19:47:51.566  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 19:47:51.597 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 19:47:51.599 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 19:47:51.614 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 19:47:51.616 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 19:47:51.618 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 19:47:51.621 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 0
2020-11-07 19:47:51.623 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 19:47:51.624 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 19:47:51.627 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 0
2020-11-07 19:47:51.628 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 19:47:51.629 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 19:47:51.630 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 0
2020-11-07 19:47:51.631  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 19:47:52.465  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:47:52.467 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:47:52.467 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:47:52.468 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 0
2020-11-07 19:47:52.468  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:47:59.754  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@555ab3bd, {}]}
2020-11-07 19:47:59.755 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 19:47:59.756 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 19:47:59.758 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 19:47:59.759  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 19:48:01.725  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 19:48:01.736 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:48:01.737 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:48:01.741 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:48:01.744 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:48:01.746 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:48:01.755 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:48:01.757  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:48:03.834  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.toAddBlog', args参数：[{}]}
2020-11-07 19:48:03.852 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:48:03.853 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:48:03.856 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:48:03.857 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 19:48:03.857 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 19:48:03.860 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 19:48:03.860  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 19:52:14.285  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[Blog(id=null, title=面向对象的设计原则, content=# 面向对象程序设计原则

## 一、 单一职责原则（SRP）

> 单一职责面向对象设计原则强调：一个类或模块应仅有一个引起其变化的因素（职责）。

- 通俗地讲，一个类或模块应只承担一个（或一种类型的）业务职责

- 当类承担的业务职责较多时，该类中任何职责需求的变化都会引起静态实现的变化，和导致其代码不稳定

- 无论是向目标类添加新的代码，或修改已有的代码，都是对原有代码设计的破坏，导致程序开发者花费巨大成本进行代码修复

![image-20200513100330978.png][1]

图2.1 多个业务行为的Patron类

​		例如，COS系统中客户角色具有的业务行为有：登录系统，支付订单，查看菜单等，如图2.1。如果将所有的业务行为实现在客户类Patron中，当这些业务行为中的任何一个需求发生变化时，如支付或登录行为需求发生变化，都需要修改Patron类。即，影响Patron类变化的因素多于1个时，会导致Patron类的代码变得不稳定。

![image-20200513100701169.png][2]

图2.1中Patron类的代码框架

​		按照单一职责原则设计Patron类时，可以将登录系统、支付订单等业务职责分别单独地封装在其他类中，从而减少Patron类的业务职责。如图2.2，将登录行为封装在Employee中，支付订单行为封装在PayOrder中。

![image-20200513100830202.png][3]

图2.2 遵守“单一职责”原则设计的Patron类

> 此时，Patron继承Employee和依赖PayOrder，其类的代码框架如下：

![image-20200513100920607.png][4]

- 符合“单一职责”设计原则的图2.2的设计方案减少了影响Patron变化的因素，使其代码更加稳定。

- 工程师在使用“单一职责”原则设计类时，也会产生如下问题：
  1. 设计类数量的增加。如果一个庞大业务系统的所有类按单一职责设计，则有可能导致设计类数量的“爆炸（Explosion）”。此外，设计类数量的增加也会使设计方案复杂度增大。
  2. 类封装特性的破坏。由于数据域封装在目标（实体）类中，如果从目标类中将含有数据域访问逻辑的业务行为分离出去，则势必造成外部代码访问目标类私有域的问题，而最终破坏目标类的封装特性。
  3. 其他问题。完全教条式地运用“单一职责”设计类时，也可能会降低代码的内聚或增加代码的耦合。同时，类职责没有明确的定义，可以是具体业务功能或行为，也可以是抽象逻辑；因此，其边界是模糊的，难以清晰地划定单一职责。

## 二、“开/闭”原则（OCP）

> “开/闭”原则要求：类或模块的代码“对扩展是开放的”（Open for Extension）、“对修改是关闭的”（Close for Modification）。

- 当软件需求发生变化时，目标类或模块的代码可以通过代码扩展，很容易地实现新的需求；而不是修改已有类或模块的代码。

- 因为，软件代码业务逻辑充满了耦合，当一处代码修改时，将会引发已有代码逻辑变化，产生逻辑错误或制造出新的代码缺陷。

![image-20200513101128901.png][5]

图2.3 PayOrder类可扩展性设计

​		COS系统需求提到的订单支付方式是工资抵扣或现金；在图2.2中，支付订单行为的实现封装在PayOrder类中。如果只考虑这两种支付行为，工程师一般会在PayOrder类中使用分支结构直接实现支付业务逻辑。这种代码结构存在的问题有：

1. 如果COS支付需求发生变化，则必须修改PayOrder已有的分支结构才能满足新需求；
2. 由于Patron依赖于PayOrder，则PayOrder代码的变化会直接影响到依赖者Patron。要解决上面的问题，需要重新设计PayOrder类结构，具体方案见图2.3。



​     在图2.3中，将PayOrder泛化为一个接口或抽象类，其定义抽象的支付行为check()；现金支付订单方式的业务逻辑由子类PayByCash实现，工资抵扣支付订单方式的业务逻辑由子类PayByPRDS实现。代码示例如下。

![image-20200513101255795.png][6]

PayOrder类结构

![image-20200513101328094.png][7]

PayByCash类结构

![image-20200513101400533.png][8]

PayByPRDS类结构
​		那么，在图2.3的类设计方案中，当支付行为需求发生变化时，可以定义PayOrder新的子类实现新需求，而不需要修改已有的类（或接口）PayOrder、PayByCash、PayByPRDS等。

​		例如，COS系统升级时，新需求要添加电子银行支付订单方式。那么，工程师可以直接定义PayOrder的子类PayByEBank来实现该需求，如图2.4。

![image-20200513101440296.png][9]

图2.4 添加电子银行支付后的PayOrder类结构设计

​		在图2.4中，PayByEBank子类的添加并不会影响PayByCash、PayByPRDS等已有的类（或接口），且实现了新支付方式的扩展。

![image-20200513101526173.png][10]

PayByBank类结构

> 那么，PayByEBank类的添加对Patron（客户）类是否会产生影响？

- 这种依赖关系不受具体实现类型的影响。因此，PayByEBank类的添加也没有影响到客户类Patron。

- 从可扩展性和代码稳定性角度看，图2.3中PayOrder类的设计方案要优于图2.2，符合“开/闭”原则的设计思想。

- 实施“开/闭”原则设计代码时，工程师可以使用抽象、继承、组合等面向对象技术获得代码灵活性、可重用性、可扩展性等方面的好处。但也应看到，“开/闭”原则对代码还有以下的影响：

1. 代码可读性降低。由于使用了抽象，代码设计逻辑与业务需求逻辑相比，会产生变化，抽象代码层隐藏了具体业务细节，大大降低了源码的可读性。
2. 程序测试成本增加。同样地，使用抽象设计会使测试人员无法静态确定具体对象的引用类型，必须等到程序运行时才能确定目标对象的具体类型。因此，代码缺陷可能会滞后到程序运行后才被发现；又或者，程序出现错误后，只有通过动态调试的方法才能有效地定位缺陷。最终，它们都会导致测试成本的增加。



## 三、接口隔离原则（ISP）

> 接口隔离原则指出：如果某个接口的行为不是内聚的，就应该按照业务分组，并将分组后的业务行为通过隔离的接口单独定义。

- 接口的行为要向调用它的客户端提供业务服务；对于不同的业务分组，调用它的客户端是相互独立的；

- 因此，接口提供的服务（分组）也应该是相互独立的。



![image-20200513101804644.png][11]

图2.5 打印配送单和发送配送指令行为定义在IDeliver接口中

​		例如，在COS系统需求中，餐厅员工（Cafeteria Staff）和配餐员（Meal Deliverer）都有打印配送单（Print Delivery Instructions）的行为；而且，餐厅员工还有发送配送指令（Issue Delivery Request）的行为。如果将打印配送单行为和发送配送指令行为强行定义在接口IDeliver中，如图2.5，将会产生如下问题：

1. 子类（或实现类）可能会继承（或实现）冗余行为。配餐员MealDeliverer作为IDeliver的实现类，需要实现issueDeliveryQuest()方法；然而，在COS的需求中，配餐员不具有该行为。
2. 子类（或实现类）的客户端受到不相干的业务行为干扰。假设餐厅员工CafeteriaStaff想要改变issueDeliveryQuest()的行为定义，比如修改方法名称；那么，则要修改接口IDeliver。而IDeliver接口的变化会导致实现类MealDeliverer变化，最终影响到调用MealDeliverer的所有客户端。

​		要解决上面的问题，工程师可以按照接口隔离原则提供的建议将接口中的方法进行业务分组。由于打印打印配送单和发送配送指令是不同的业务行为，两者之间的内聚度很弱，分离它们可以降低相互影响。

​		    因此，将图2.5中的IDeliver接口行为printDeliveryInstruction()和issueDeliveryQuest()分别定义在的接口IPrintDelivery和IIssueDelivery中，用于实现行为的隔离；如图2.6所示。

![image-20200513101923338.png][12]

图2.6 使用“接口隔离”原则设计打印配送单和发送配送指令行为

​		IIssueDelivery接口定义了issueDeliveryQuest()行为，IPrintDelivery接口定义了printDeliveryInstruction()行为，彼此独立，互不影响。CafeteriaStaff类实现IIssueDelivery、IPrintDelivery接口，MealDeliverer实现IPrintDelivery接口。

​		可以看到，MealDeliverer只实现了自身需要的业务行为printDeliveryInstruction()，不用实现冗余行为issueDeliveryQuest()，保证了代码逻辑与需求的一致性。此外，IIssueDelivery接口定义的变化只对其实现类CafeteriaStaff产生影响，而不会对MealDeliverer造成任何影响。

​		图2.6中类图代码框架如下。

![image-20200513102011752.png][13]

IIssueDelivery接口

![image-20200513102023766.png][14]

IPrintDelivery接口

  在Java编程语言中，IPrintDelivery接口可以定义printDeliveryInstruction()行为的默认实现，CafeteriaStaff、MealDeliverer根据需求选择重写或使用接口默认。以CafeteriaStaff为例，代码结构如下。

![image-20200513102057438.png][15]

CafeteriaStaff实现类

## 四、依赖倒置原则（DIP）

依赖倒置面向对象设计原则建议：

1. 高层模块不应依赖于低层模块，二者都应该依赖于抽象；
2. 抽象不应依赖于细节，细节应依赖于抽象。



在分层的软件架构中，业务逻辑实现的模块被称为高层模块，数据或服务支持模块是底层模块，如图2.7

![image-20200513103158318.png][16]

图2.7 高层模块与低层模块的依赖关系
​		图2.7中，业务层依赖于数据或服务层；即，高层模块依赖低层模块。当低层模块发生变化时，高层模块则不可避免地受到影响。特别地，当目标系统分层较多时，最低层模块代码的变化，会影响到所有的（含有直接依赖或间接依赖）高层模块。

​		为了减少依赖或依赖传递对高层模块的影响，要使高层模块依赖于稳定的抽象。那么，将低层模块向高层模块提供服务定义为抽象，高层模块依赖于抽象；抽象是稳定的，抽象具体实现的变化不会影响到高层模块，如图2.8。

![image-20200513103249839.png][17]

图2.8 按照“依赖倒置”原则设计模块依赖关系示意

​		相较于图2.7中的高层模块直接依赖于低层模块实现，图2.8中的高层模块依赖于底层模块的抽象；低层模块实现也同时依赖于抽象的定义（接口实现或类继承是一种强约束依赖关系，实现类或子类均依赖接口或父类的方法定义）。当低层实现变化时，由于低层模块的抽象隔离了变化，高层模块感知不到这种变化，也就不会受到该变化的影响。

​		举个例子：在COS系统中，客户（Patron）支付订单的业务依赖于支付类（PayOrder）；如果PayOrder是支付服务的实现类，则形成了高层代码Patron直接依赖于低层实现PayOrder的逻辑关系，如图2.9。

![image-20200513103325290.png][18]

图2.9 Patron直接依赖于PayOrder实现

​		由于PayOrder是支付服务的实现，当支付服务需求发生变化时，则需要修改PayOrder已有代码，或重新定义实现新需求的子类。无论哪种方式，客户端Patron都会感知到支付服务的变化，并受到影响。假设，图2.9中的PayOrder类的check()方法实现了工资抵扣支付订单行为。那么，要实现电子银行支付订单行为的新需求，则解决方案会是以下两种中的一个：

1. 修改PayOrder类，添加电子银行支付订单服务行为；修改客户端Patron支付逻辑，使得Patron可以使用PayOrder新添加的电子银行支付行为；
2. 继承PayOrder，添加电子银行支付订单行为子类；修改Patron支付逻辑，使得Patron可以依赖新添加的电子银行支付行为子类。

以上两种解决方案都无法避免对客户端Patron代码的修改。即，低层模块实现的变化直接影响了高层模块。

​		按照“依赖倒置”原则的建议重新设计Patron与PayOrder之间的依赖关系，将低层模块提供的服务进行抽象，封装为抽象类或接口；使高层模块依赖于低层模块的抽象类（或接口）；低层模块的实现类继承（或实现）抽象类（或接口）；如图2.10所示。

![image-20200513103419518.png][19]

图2.10按照“依赖倒置”原则重新设计Patron与PayOrder之间的依赖关系

>  图2.10的类图结构与图2.3、图2.4的类图结构一致，示例代码可参见2.2节。

​      由于将图2.10中的PayOrder设计为抽象类（或接口），Patron对PayOrder的依赖关系就变得稳定了。子类PayByPRDS实现了工资抵扣支付订单服务，PayByEBank实现了电子银行支付订单服务；实现类的变化不会影响到客户端Patron。因此，图2.10的设计类图不仅能保证代码稳定性，也具有良好的可扩展性。



“依赖倒置”原则提供的代码设计建议可以很好地实现代码解耦。“依赖倒置”原则所体现的设计思维，在不同材料中有不同的名称，如“好莱坞”原则（Hollywood Principle）、回调机制（Callback Mechnism）等。

在使用依赖倒置原则时，工程师需要注意以下问题：

1. **增加了代码复杂度**。依赖倒置的设计方式无疑会增加接口或抽象类的数量，使得软件代码结构变得抽象或复杂。
2. **更适合应对需求变化**。由于将依赖关系指向抽象，抽象能够隔离调用者与被调用者的实现，使得二者的变化不会相互影响，在一定程度上保证了代码稳定性。依赖倒置的代码能够通过稳定的依赖关系将新需求加入，或将原需求变化所带来的影响降低；因此，其更适合应对有需求变化的代码设计。

## 五、Liskov替换原则（LSP）

> 对于静态类型的面对象编程语言，如Java、C#，继承是多态技术实现的主要方式。通过继承，子类可以重写父类定义的方法，使得父类（或接口）定义的对象引用可以指向不同的子类实例，形成同一个行为的调用表现出多态特征。
>
> Liskov替换原则（有的资料翻译成“里氏”替换原则）建议：子类型对象必须能够完全替换掉它们的父类型对象，而不需要改变父类型的任何属性。
>
> Liskov替换原则是美国计算机科学家Barbara Liskov（女，曾于2008年获得图灵奖）于1987年在期刊ACM SIGPLAN Notices发表的标题为“Data Abstraction and Hierarchy”的文章中所提出的形式化原则。其原文中的表述为：
>
> 对于类型S的对象o1，存在类型T的对象o2，如果能使T编写的程序P的行为在o1替换o2后保持不变，则S是T的子类型（If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T,the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T）。

​		Liskov替换原则提出了如何规范地使用继承。一旦违反该规则，则有可能会导致程序表达错误。例如，在COS系统中，工程师需要实现统计图表的绘制功能，图表组件类型有：柱状图（Bar）、线状图（Line）等。工程师设计了图表组件父类ChartComponent，并定义组件绘制行为draw()；子类Bar继承ChartComponent和实现绘制柱状图行为，Line继承ChartComponent和实现绘制线状图行为；柱状图Bar额外定义了方法fill()，用于图形填充行为的实现；使用组件对象进行图表绘制的客户类是ChartDrawer；如图2.11。

![image-20200513103700208.png][20]

图2.11 COS图表绘制类结构

​		由于不同的图表组件绘制方式不同；如，绘制柱状图不仅绘制柱形，还需对图形进行填充，而绘制线状图则不需要填充；ChartDrawer代码结构可以是：

![image-20200513103722228.png][21]

ChartComponent抽象类代码结构如下：

![image-20200513103733026.png][22]

  Bar和Line作为ChartComponent的子类，分别实现柱状图、线状图绘制，以Bar为例，其代码结构如下：

![image-20200513103741842.png][23]

​		从上面的代码中可以看到，ChartDrawer在绘制不同类型图表组件时，需要知道组件的子类型，然后才能对该组件进行绘制操作；这违反了Liskov替换原则。因为，Liskov替换原则建议：对于客户端程序ChartDrawer来说，drawChart()绘制行为使用的父类ChartComponent定义的对象是可以被其子类Bar或Line定义的对象完全替换，而不需要提供额外的子类信息。

- 违反Liskov替换原则的代码具有以下缺陷：
  1. 可扩展性差。如果需要在图2.11中添加新的图表类型，比如饼状图Pie，则必须修改ChartDrawer类代码，才能完成组件子类型的扩展。而修改已有代码将会导致一系列后果，详细见本章2.2“开/闭”原则。
  2. 引入程序逻辑错误。ChartDrawer类的行为drawChart()绘制的是ChartComponent类型的图表组件；增加的新组件仍然是ChartComponent类型，但是drawChart()原有代码却无法完成新组件对象的绘制，其逻辑是错误的。

​		仔细观察上面的代码，学习者会发现违反Liskov替换原则的主要原因是：Bar子类在实现父类ChartComponent的draw()行为时，更改了原有的业务定义。父类ChartComponent定义的抽象行为draw()是统计图表组件的完整绘制逻辑，而Bar子类将统计图表组件的绘制分成了两个行为逻辑：绘制图形draw()和填充图形fill()。即，Bar子类更改了父类ChartComponent定义的绘制行为逻辑。

​		要解决Bar子类违反Liskov替换原则的问题，只需要保证该子类业务行为逻辑与父类保持一致即可。也就是，Bar子类的绘制行为draw()应包含图形填充行为fill()的逻辑。同样是图2.11类结构，Bar子类绘制行为的实现代码可以更改为：

![image-20200513103902635.png][24]

那么，客户类ChartDrawer的代码结构则修改为：

![image-20200513103910045.png][25]

​		ChartComponent所有子类draw()行为的业务逻辑都是实现目标组件完整绘制，而不是只绘制组件的一部分。因此，客户类ChartDrawer在绘制目标组件时，就不需要关心或了解具体的组件子类型。修改后的代码没有违反Liskov替换原则。

​		此外，在图2.11中添加新的图表类型饼状图Pie，也不会对ChartDrawer带来任何影响。当ChartDrawer类的drawChart()行为收到的方法参数为Pie子类型的实例时，也能正确地实现绘制逻辑。

​		虽然遵循Liskov替换原则设计的代码方案能够给代码稳定性、可扩展性等带来好处；工程师在实际使用该规则时，仍需注意：

1. 在继承关系中，父类与子类之间是强约束关联。即，子类只能实现（或继承）父类的定义（域或行为），而不能更改；父类定义（域或行为）的变化会迫使所有子类跟随变化。
2. Liskov替换原则限制了子类重写父类行为的逻辑，降低了代码灵活性。

## 六、总结

- 任何一个面向对象设计原则都是从局部提高代码质量，而不是从软件架构的全局

- 独立运用任何一个面向对象设计原则，都无法保证整体代码方案的优化

- 本质上，软件设计活动是不同技术方案分析、比较和折中的过程


  [1]: https://yxlyz.net/usr/uploads/2020/05/3048098829.png
  [2]: https://yxlyz.net/usr/uploads/2020/05/2817496414.png
  [3]: https://yxlyz.net/usr/uploads/2020/05/1437168169.png
  [4]: https://yxlyz.net/usr/uploads/2020/05/832761637.png
  [5]: https://yxlyz.net/usr/uploads/2020/05/2041833336.png
  [6]: https://yxlyz.net/usr/uploads/2020/05/2359302113.png
  [7]: https://yxlyz.net/usr/uploads/2020/05/3505797948.png
  [8]: https://yxlyz.net/usr/uploads/2020/05/3001155084.png
  [9]: https://yxlyz.net/usr/uploads/2020/05/183990686.png
  [10]: https://yxlyz.net/usr/uploads/2020/05/2942822626.png
  [11]: https://yxlyz.net/usr/uploads/2020/05/4270639770.png
  [12]: https://yxlyz.net/usr/uploads/2020/05/2691814274.png
  [13]: https://yxlyz.net/usr/uploads/2020/05/1255504503.png
  [14]: https://yxlyz.net/usr/uploads/2020/05/1965045858.png
  [15]: https://yxlyz.net/usr/uploads/2020/05/3709593788.png
  [16]: https://yxlyz.net/usr/uploads/2020/05/3033065838.png
  [17]: https://yxlyz.net/usr/uploads/2020/05/3767007406.png
  [18]: https://yxlyz.net/usr/uploads/2020/05/3042852873.png
  [19]: https://yxlyz.net/usr/uploads/2020/05/2903354407.png
  [20]: https://yxlyz.net/usr/uploads/2020/05/2877280606.png
  [21]: https://yxlyz.net/usr/uploads/2020/05/2000988877.png
  [22]: https://yxlyz.net/usr/uploads/2020/05/3057530575.png
  [23]: https://yxlyz.net/usr/uploads/2020/05/2961699169.png
  [24]: https://yxlyz.net/usr/uploads/2020/05/1976910393.png
  [25]: https://yxlyz.net/usr/uploads/2020/05/2932182748.png
, firstPicture=/images/bg.jpg, flag=原创, views=null, appreciation=true, shareStatement=false, commentabled=false, published=true, recommend=true, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=54, description=总结了面向对象设计的几大原则，单一职责原则、“开/闭”原则、接口隔离原则、依赖倒置原则、Liskov替换原则, type=Type(id=81, name=null, blogs=[]), user=null, tags=[], comments=[]), {}, org.apache.catalina.session.StandardSessionFacade@555ab3bd]}
2020-11-07 19:52:14.341 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 19:52:14.342 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 81(Long)
2020-11-07 19:52:14.350 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 19:52:14.915 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 19:52:14.923 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 19:52:14.937 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 19:52:14.945 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.save    : ==>  Preparing: insert into t_blog(id,title,content,first_picture,flag,views,description,appreciation,share_statement, commentabled,published,recommend,create_time,update_time,type_id,user_id) values (?,?, ?,?,?,?,?,?,?, ?,?,?,?,?,?,?);
2020-11-07 19:52:15.038 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.save    : ==> Parameters: null, 面向对象的设计原则(String), # 面向对象程序设计原则

## 一、 单一职责原则（SRP）

> 单一职责面向对象设计原则强调：一个类或模块应仅有一个引起其变化的因素（职责）。

- 通俗地讲，一个类或模块应只承担一个（或一种类型的）业务职责

- 当类承担的业务职责较多时，该类中任何职责需求的变化都会引起静态实现的变化，和导致其代码不稳定

- 无论是向目标类添加新的代码，或修改已有的代码，都是对原有代码设计的破坏，导致程序开发者花费巨大成本进行代码修复

![image-20200513100330978.png][1]

图2.1 多个业务行为的Patron类

​		例如，COS系统中客户角色具有的业务行为有：登录系统，支付订单，查看菜单等，如图2.1。如果将所有的业务行为实现在客户类Patron中，当这些业务行为中的任何一个需求发生变化时，如支付或登录行为需求发生变化，都需要修改Patron类。即，影响Patron类变化的因素多于1个时，会导致Patron类的代码变得不稳定。

![image-20200513100701169.png][2]

图2.1中Patron类的代码框架

​		按照单一职责原则设计Patron类时，可以将登录系统、支付订单等业务职责分别单独地封装在其他类中，从而减少Patron类的业务职责。如图2.2，将登录行为封装在Employee中，支付订单行为封装在PayOrder中。

![image-20200513100830202.png][3]

图2.2 遵守“单一职责”原则设计的Patron类

> 此时，Patron继承Employee和依赖PayOrder，其类的代码框架如下：

![image-20200513100920607.png][4]

- 符合“单一职责”设计原则的图2.2的设计方案减少了影响Patron变化的因素，使其代码更加稳定。

- 工程师在使用“单一职责”原则设计类时，也会产生如下问题：
  1. 设计类数量的增加。如果一个庞大业务系统的所有类按单一职责设计，则有可能导致设计类数量的“爆炸（Explosion）”。此外，设计类数量的增加也会使设计方案复杂度增大。
  2. 类封装特性的破坏。由于数据域封装在目标（实体）类中，如果从目标类中将含有数据域访问逻辑的业务行为分离出去，则势必造成外部代码访问目标类私有域的问题，而最终破坏目标类的封装特性。
  3. 其他问题。完全教条式地运用“单一职责”设计类时，也可能会降低代码的内聚或增加代码的耦合。同时，类职责没有明确的定义，可以是具体业务功能或行为，也可以是抽象逻辑；因此，其边界是模糊的，难以清晰地划定单一职责。

## 二、“开/闭”原则（OCP）

> “开/闭”原则要求：类或模块的代码“对扩展是开放的”（Open for Extension）、“对修改是关闭的”（Close for Modification）。

- 当软件需求发生变化时，目标类或模块的代码可以通过代码扩展，很容易地实现新的需求；而不是修改已有类或模块的代码。

- 因为，软件代码业务逻辑充满了耦合，当一处代码修改时，将会引发已有代码逻辑变化，产生逻辑错误或制造出新的代码缺陷。

![image-20200513101128901.png][5]

图2.3 PayOrder类可扩展性设计

​		COS系统需求提到的订单支付方式是工资抵扣或现金；在图2.2中，支付订单行为的实现封装在PayOrder类中。如果只考虑这两种支付行为，工程师一般会在PayOrder类中使用分支结构直接实现支付业务逻辑。这种代码结构存在的问题有：

1. 如果COS支付需求发生变化，则必须修改PayOrder已有的分支结构才能满足新需求；
2. 由于Patron依赖于PayOrder，则PayOrder代码的变化会直接影响到依赖者Patron。要解决上面的问题，需要重新设计PayOrder类结构，具体方案见图2.3。



​     在图2.3中，将PayOrder泛化为一个接口或抽象类，其定义抽象的支付行为check()；现金支付订单方式的业务逻辑由子类PayByCash实现，工资抵扣支付订单方式的业务逻辑由子类PayByPRDS实现。代码示例如下。

![image-20200513101255795.png][6]

PayOrder类结构

![image-20200513101328094.png][7]

PayByCash类结构

![image-20200513101400533.png][8]

PayByPRDS类结构
​		那么，在图2.3的类设计方案中，当支付行为需求发生变化时，可以定义PayOrder新的子类实现新需求，而不需要修改已有的类（或接口）PayOrder、PayByCash、PayByPRDS等。

​		例如，COS系统升级时，新需求要添加电子银行支付订单方式。那么，工程师可以直接定义PayOrder的子类PayByEBank来实现该需求，如图2.4。

![image-20200513101440296.png][9]

图2.4 添加电子银行支付后的PayOrder类结构设计

​		在图2.4中，PayByEBank子类的添加并不会影响PayByCash、PayByPRDS等已有的类（或接口），且实现了新支付方式的扩展。

![image-20200513101526173.png][10]

PayByBank类结构

> 那么，PayByEBank类的添加对Patron（客户）类是否会产生影响？

- 这种依赖关系不受具体实现类型的影响。因此，PayByEBank类的添加也没有影响到客户类Patron。

- 从可扩展性和代码稳定性角度看，图2.3中PayOrder类的设计方案要优于图2.2，符合“开/闭”原则的设计思想。

- 实施“开/闭”原则设计代码时，工程师可以使用抽象、继承、组合等面向对象技术获得代码灵活性、可重用性、可扩展性等方面的好处。但也应看到，“开/闭”原则对代码还有以下的影响：

1. 代码可读性降低。由于使用了抽象，代码设计逻辑与业务需求逻辑相比，会产生变化，抽象代码层隐藏了具体业务细节，大大降低了源码的可读性。
2. 程序测试成本增加。同样地，使用抽象设计会使测试人员无法静态确定具体对象的引用类型，必须等到程序运行时才能确定目标对象的具体类型。因此，代码缺陷可能会滞后到程序运行后才被发现；又或者，程序出现错误后，只有通过动态调试的方法才能有效地定位缺陷。最终，它们都会导致测试成本的增加。



## 三、接口隔离原则（ISP）

> 接口隔离原则指出：如果某个接口的行为不是内聚的，就应该按照业务分组，并将分组后的业务行为通过隔离的接口单独定义。

- 接口的行为要向调用它的客户端提供业务服务；对于不同的业务分组，调用它的客户端是相互独立的；

- 因此，接口提供的服务（分组）也应该是相互独立的。



![image-20200513101804644.png][11]

图2.5 打印配送单和发送配送指令行为定义在IDeliver接口中

​		例如，在COS系统需求中，餐厅员工（Cafeteria Staff）和配餐员（Meal Deliverer）都有打印配送单（Print Delivery Instructions）的行为；而且，餐厅员工还有发送配送指令（Issue Delivery Request）的行为。如果将打印配送单行为和发送配送指令行为强行定义在接口IDeliver中，如图2.5，将会产生如下问题：

1. 子类（或实现类）可能会继承（或实现）冗余行为。配餐员MealDeliverer作为IDeliver的实现类，需要实现issueDeliveryQuest()方法；然而，在COS的需求中，配餐员不具有该行为。
2. 子类（或实现类）的客户端受到不相干的业务行为干扰。假设餐厅员工CafeteriaStaff想要改变issueDeliveryQuest()的行为定义，比如修改方法名称；那么，则要修改接口IDeliver。而IDeliver接口的变化会导致实现类MealDeliverer变化，最终影响到调用MealDeliverer的所有客户端。

​		要解决上面的问题，工程师可以按照接口隔离原则提供的建议将接口中的方法进行业务分组。由于打印打印配送单和发送配送指令是不同的业务行为，两者之间的内聚度很弱，分离它们可以降低相互影响。

​		    因此，将图2.5中的IDeliver接口行为printDeliveryInstruction()和issueDeliveryQuest()分别定义在的接口IPrintDelivery和IIssueDelivery中，用于实现行为的隔离；如图2.6所示。

![image-20200513101923338.png][12]

图2.6 使用“接口隔离”原则设计打印配送单和发送配送指令行为

​		IIssueDelivery接口定义了issueDeliveryQuest()行为，IPrintDelivery接口定义了printDeliveryInstruction()行为，彼此独立，互不影响。CafeteriaStaff类实现IIssueDelivery、IPrintDelivery接口，MealDeliverer实现IPrintDelivery接口。

​		可以看到，MealDeliverer只实现了自身需要的业务行为printDeliveryInstruction()，不用实现冗余行为issueDeliveryQuest()，保证了代码逻辑与需求的一致性。此外，IIssueDelivery接口定义的变化只对其实现类CafeteriaStaff产生影响，而不会对MealDeliverer造成任何影响。

​		图2.6中类图代码框架如下。

![image-20200513102011752.png][13]

IIssueDelivery接口

![image-20200513102023766.png][14]

IPrintDelivery接口

  在Java编程语言中，IPrintDelivery接口可以定义printDeliveryInstruction()行为的默认实现，CafeteriaStaff、MealDeliverer根据需求选择重写或使用接口默认。以CafeteriaStaff为例，代码结构如下。

![image-20200513102057438.png][15]

CafeteriaStaff实现类

## 四、依赖倒置原则（DIP）

依赖倒置面向对象设计原则建议：

1. 高层模块不应依赖于低层模块，二者都应该依赖于抽象；
2. 抽象不应依赖于细节，细节应依赖于抽象。



在分层的软件架构中，业务逻辑实现的模块被称为高层模块，数据或服务支持模块是底层模块，如图2.7

![image-20200513103158318.png][16]

图2.7 高层模块与低层模块的依赖关系
​		图2.7中，业务层依赖于数据或服务层；即，高层模块依赖低层模块。当低层模块发生变化时，高层模块则不可避免地受到影响。特别地，当目标系统分层较多时，最低层模块代码的变化，会影响到所有的（含有直接依赖或间接依赖）高层模块。

​		为了减少依赖或依赖传递对高层模块的影响，要使高层模块依赖于稳定的抽象。那么，将低层模块向高层模块提供服务定义为抽象，高层模块依赖于抽象；抽象是稳定的，抽象具体实现的变化不会影响到高层模块，如图2.8。

![image-20200513103249839.png][17]

图2.8 按照“依赖倒置”原则设计模块依赖关系示意

​		相较于图2.7中的高层模块直接依赖于低层模块实现，图2.8中的高层模块依赖于底层模块的抽象；低层模块实现也同时依赖于抽象的定义（接口实现或类继承是一种强约束依赖关系，实现类或子类均依赖接口或父类的方法定义）。当低层实现变化时，由于低层模块的抽象隔离了变化，高层模块感知不到这种变化，也就不会受到该变化的影响。

​		举个例子：在COS系统中，客户（Patron）支付订单的业务依赖于支付类（PayOrder）；如果PayOrder是支付服务的实现类，则形成了高层代码Patron直接依赖于低层实现PayOrder的逻辑关系，如图2.9。

![image-20200513103325290.png][18]

图2.9 Patron直接依赖于PayOrder实现

​		由于PayOrder是支付服务的实现，当支付服务需求发生变化时，则需要修改PayOrder已有代码，或重新定义实现新需求的子类。无论哪种方式，客户端Patron都会感知到支付服务的变化，并受到影响。假设，图2.9中的PayOrder类的check()方法实现了工资抵扣支付订单行为。那么，要实现电子银行支付订单行为的新需求，则解决方案会是以下两种中的一个：

1. 修改PayOrder类，添加电子银行支付订单服务行为；修改客户端Patron支付逻辑，使得Patron可以使用PayOrder新添加的电子银行支付行为；
2. 继承PayOrder，添加电子银行支付订单行为子类；修改Patron支付逻辑，使得Patron可以依赖新添加的电子银行支付行为子类。

以上两种解决方案都无法避免对客户端Patron代码的修改。即，低层模块实现的变化直接影响了高层模块。

​		按照“依赖倒置”原则的建议重新设计Patron与PayOrder之间的依赖关系，将低层模块提供的服务进行抽象，封装为抽象类或接口；使高层模块依赖于低层模块的抽象类（或接口）；低层模块的实现类继承（或实现）抽象类（或接口）；如图2.10所示。

![image-20200513103419518.png][19]

图2.10按照“依赖倒置”原则重新设计Patron与PayOrder之间的依赖关系

>  图2.10的类图结构与图2.3、图2.4的类图结构一致，示例代码可参见2.2节。

​      由于将图2.10中的PayOrder设计为抽象类（或接口），Patron对PayOrder的依赖关系就变得稳定了。子类PayByPRDS实现了工资抵扣支付订单服务，PayByEBank实现了电子银行支付订单服务；实现类的变化不会影响到客户端Patron。因此，图2.10的设计类图不仅能保证代码稳定性，也具有良好的可扩展性。



“依赖倒置”原则提供的代码设计建议可以很好地实现代码解耦。“依赖倒置”原则所体现的设计思维，在不同材料中有不同的名称，如“好莱坞”原则（Hollywood Principle）、回调机制（Callback Mechnism）等。

在使用依赖倒置原则时，工程师需要注意以下问题：

1. **增加了代码复杂度**。依赖倒置的设计方式无疑会增加接口或抽象类的数量，使得软件代码结构变得抽象或复杂。
2. **更适合应对需求变化**。由于将依赖关系指向抽象，抽象能够隔离调用者与被调用者的实现，使得二者的变化不会相互影响，在一定程度上保证了代码稳定性。依赖倒置的代码能够通过稳定的依赖关系将新需求加入，或将原需求变化所带来的影响降低；因此，其更适合应对有需求变化的代码设计。

## 五、Liskov替换原则（LSP）

> 对于静态类型的面对象编程语言，如Java、C#，继承是多态技术实现的主要方式。通过继承，子类可以重写父类定义的方法，使得父类（或接口）定义的对象引用可以指向不同的子类实例，形成同一个行为的调用表现出多态特征。
>
> Liskov替换原则（有的资料翻译成“里氏”替换原则）建议：子类型对象必须能够完全替换掉它们的父类型对象，而不需要改变父类型的任何属性。
>
> Liskov替换原则是美国计算机科学家Barbara Liskov（女，曾于2008年获得图灵奖）于1987年在期刊ACM SIGPLAN Notices发表的标题为“Data Abstraction and Hierarchy”的文章中所提出的形式化原则。其原文中的表述为：
>
> 对于类型S的对象o1，存在类型T的对象o2，如果能使T编写的程序P的行为在o1替换o2后保持不变，则S是T的子类型（If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T,the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T）。

​		Liskov替换原则提出了如何规范地使用继承。一旦违反该规则，则有可能会导致程序表达错误。例如，在COS系统中，工程师需要实现统计图表的绘制功能，图表组件类型有：柱状图（Bar）、线状图（Line）等。工程师设计了图表组件父类ChartComponent，并定义组件绘制行为draw()；子类Bar继承ChartComponent和实现绘制柱状图行为，Line继承ChartComponent和实现绘制线状图行为；柱状图Bar额外定义了方法fill()，用于图形填充行为的实现；使用组件对象进行图表绘制的客户类是ChartDrawer；如图2.11。

![image-20200513103700208.png][20]

图2.11 COS图表绘制类结构

​		由于不同的图表组件绘制方式不同；如，绘制柱状图不仅绘制柱形，还需对图形进行填充，而绘制线状图则不需要填充；ChartDrawer代码结构可以是：

![image-20200513103722228.png][21]

ChartComponent抽象类代码结构如下：

![image-20200513103733026.png][22]

  Bar和Line作为ChartComponent的子类，分别实现柱状图、线状图绘制，以Bar为例，其代码结构如下：

![image-20200513103741842.png][23]

​		从上面的代码中可以看到，ChartDrawer在绘制不同类型图表组件时，需要知道组件的子类型，然后才能对该组件进行绘制操作；这违反了Liskov替换原则。因为，Liskov替换原则建议：对于客户端程序ChartDrawer来说，drawChart()绘制行为使用的父类ChartComponent定义的对象是可以被其子类Bar或Line定义的对象完全替换，而不需要提供额外的子类信息。

- 违反Liskov替换原则的代码具有以下缺陷：
  1. 可扩展性差。如果需要在图2.11中添加新的图表类型，比如饼状图Pie，则必须修改ChartDrawer类代码，才能完成组件子类型的扩展。而修改已有代码将会导致一系列后果，详细见本章2.2“开/闭”原则。
  2. 引入程序逻辑错误。ChartDrawer类的行为drawChart()绘制的是ChartComponent类型的图表组件；增加的新组件仍然是ChartComponent类型，但是drawChart()原有代码却无法完成新组件对象的绘制，其逻辑是错误的。

​		仔细观察上面的代码，学习者会发现违反Liskov替换原则的主要原因是：Bar子类在实现父类ChartComponent的draw()行为时，更改了原有的业务定义。父类ChartComponent定义的抽象行为draw()是统计图表组件的完整绘制逻辑，而Bar子类将统计图表组件的绘制分成了两个行为逻辑：绘制图形draw()和填充图形fill()。即，Bar子类更改了父类ChartComponent定义的绘制行为逻辑。

​		要解决Bar子类违反Liskov替换原则的问题，只需要保证该子类业务行为逻辑与父类保持一致即可。也就是，Bar子类的绘制行为draw()应包含图形填充行为fill()的逻辑。同样是图2.11类结构，Bar子类绘制行为的实现代码可以更改为：

![image-20200513103902635.png][24]

那么，客户类ChartDrawer的代码结构则修改为：

![image-20200513103910045.png][25]

​		ChartComponent所有子类draw()行为的业务逻辑都是实现目标组件完整绘制，而不是只绘制组件的一部分。因此，客户类ChartDrawer在绘制目标组件时，就不需要关心或了解具体的组件子类型。修改后的代码没有违反Liskov替换原则。

​		此外，在图2.11中添加新的图表类型饼状图Pie，也不会对ChartDrawer带来任何影响。当ChartDrawer类的drawChart()行为收到的方法参数为Pie子类型的实例时，也能正确地实现绘制逻辑。

​		虽然遵循Liskov替换原则设计的代码方案能够给代码稳定性、可扩展性等带来好处；工程师在实际使用该规则时，仍需注意：

1. 在继承关系中，父类与子类之间是强约束关联。即，子类只能实现（或继承）父类的定义（域或行为），而不能更改；父类定义（域或行为）的变化会迫使所有子类跟随变化。
2. Liskov替换原则限制了子类重写父类行为的逻辑，降低了代码灵活性。

## 六、总结

- 任何一个面向对象设计原则都是从局部提高代码质量，而不是从软件架构的全局

- 独立运用任何一个面向对象设计原则，都无法保证整体代码方案的优化

- 本质上，软件设计活动是不同技术方案分析、比较和折中的过程


  [1]: https://yxlyz.net/usr/uploads/2020/05/3048098829.png
  [2]: https://yxlyz.net/usr/uploads/2020/05/2817496414.png
  [3]: https://yxlyz.net/usr/uploads/2020/05/1437168169.png
  [4]: https://yxlyz.net/usr/uploads/2020/05/832761637.png
  [5]: https://yxlyz.net/usr/uploads/2020/05/2041833336.png
  [6]: https://yxlyz.net/usr/uploads/2020/05/2359302113.png
  [7]: https://yxlyz.net/usr/uploads/2020/05/3505797948.png
  [8]: https://yxlyz.net/usr/uploads/2020/05/3001155084.png
  [9]: https://yxlyz.net/usr/uploads/2020/05/183990686.png
  [10]: https://yxlyz.net/usr/uploads/2020/05/2942822626.png
  [11]: https://yxlyz.net/usr/uploads/2020/05/4270639770.png
  [12]: https://yxlyz.net/usr/uploads/2020/05/2691814274.png
  [13]: https://yxlyz.net/usr/uploads/2020/05/1255504503.png
  [14]: https://yxlyz.net/usr/uploads/2020/05/1965045858.png
  [15]: https://yxlyz.net/usr/uploads/2020/05/3709593788.png
  [16]: https://yxlyz.net/usr/uploads/2020/05/3033065838.png
  [17]: https://yxlyz.net/usr/uploads/2020/05/3767007406.png
  [18]: https://yxlyz.net/usr/uploads/2020/05/3042852873.png
  [19]: https://yxlyz.net/usr/uploads/2020/05/2903354407.png
  [20]: https://yxlyz.net/usr/uploads/2020/05/2877280606.png
  [21]: https://yxlyz.net/usr/uploads/2020/05/2000988877.png
  [22]: https://yxlyz.net/usr/uploads/2020/05/3057530575.png
  [23]: https://yxlyz.net/usr/uploads/2020/05/2961699169.png
  [24]: https://yxlyz.net/usr/uploads/2020/05/1976910393.png
  [25]: https://yxlyz.net/usr/uploads/2020/05/2932182748.png
(String), /images/bg.jpg(String), 原创(String), 1(Integer), 总结了面向对象设计的几大原则，单一职责原则、“开/闭”原则、接口隔离原则、依赖倒置原则、Liskov替换原则(String), true(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2020-11-07 19:52:14.939(Timestamp), 2020-11-07 19:52:14.939(Timestamp), 81(Long), 2(Long)
2020-11-07 19:52:15.196 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.save    : <==    Updates: 1
2020-11-07 19:52:15.251 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 19:52:15.252 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 67(Long), 54(Long)
2020-11-07 19:52:15.255 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 19:52:15.274  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 19:52:15.304  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=保存成功！}, 1]}
2020-11-07 19:52:15.313 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:52:15.313 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:52:15.320 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:52:15.325 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 19:52:15.325 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 19:52:15.366 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 19:52:15.367 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:52:15.367 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:52:15.376 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:52:15.377  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:52:20.362  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 19:52:20.366 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:52:20.367 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:52:20.368 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:52:20.371 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 19:52:20.372 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 19:52:20.374 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 19:52:20.375 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:52:20.376 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:52:20.378 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:52:20.379  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:52:23.042  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 19:52:23.047 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 19:52:23.048 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 19:52:23.049 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 19:52:23.050 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 19:52:23.051 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 19:52:23.057 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findAll             : <==      Total: 1
2020-11-07 19:52:23.058 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 19:52:23.059 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 19:52:23.062 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 1
2020-11-07 19:52:23.062 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 19:52:23.063 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 19:52:23.064 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 1
2020-11-07 19:52:23.065 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 19:52:23.065 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 19:52:23.066 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 0
2020-11-07 19:52:23.067  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 19:52:23.458  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:52:23.459 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:52:23.459 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:52:23.461 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 1
2020-11-07 19:52:23.462  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:54:32.264  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 19:54:32.274 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:54:32.276 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:54:32.281 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:54:32.292 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 19:54:32.293 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 19:54:32.303 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 19:54:32.306 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:54:32.306 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:54:32.314 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:54:32.315  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:54:39.577  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 19:54:39.591 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 19:54:39.592 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 19:54:39.594 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 19:54:39.594 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 19:54:39.595 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 19:54:39.597 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : <==      Total: 1
2020-11-07 19:54:39.597 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 19:54:39.598 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 19:54:39.601 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 1
2020-11-07 19:54:39.602 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 19:54:39.602 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 19:54:39.603 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 1
2020-11-07 19:54:39.604 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 19:54:39.604 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 19:54:39.605 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 0
2020-11-07 19:54:39.606  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 19:54:40.456  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:54:40.457 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:54:40.458 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:54:40.459 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 1
2020-11-07 19:54:40.460  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:55:22.479  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/67/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[67, {}]}
2020-11-07 19:55:22.481 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:55:22.481 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:55:22.485 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:55:22.486 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 19:55:22.487 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 19:55:22.490 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 19:55:22.491 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 19:55:22.492 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 67(Long)
2020-11-07 19:55:22.496 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 19:55:22.498 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:55:22.499 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 19:55:22.501 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 19:55:22.502 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 19:55:22.502 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 19:55:22.503 DEBUG 5708 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 19:55:22.504  INFO 5708 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 19:55:27.374  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[Blog(id=67, title=面向对象的设计原则, content=# 面向对象程序设计原则

## 一、 单一职责原则（SRP）

> 单一职责面向对象设计原则强调：一个类或模块应仅有一个引起其变化的因素（职责）。

- 通俗地讲，一个类或模块应只承担一个（或一种类型的）业务职责

- 当类承担的业务职责较多时，该类中任何职责需求的变化都会引起静态实现的变化，和导致其代码不稳定

- 无论是向目标类添加新的代码，或修改已有的代码，都是对原有代码设计的破坏，导致程序开发者花费巨大成本进行代码修复

![image-20200513100330978.png][1]

图2.1 多个业务行为的Patron类

​		例如，COS系统中客户角色具有的业务行为有：登录系统，支付订单，查看菜单等，如图2.1。如果将所有的业务行为实现在客户类Patron中，当这些业务行为中的任何一个需求发生变化时，如支付或登录行为需求发生变化，都需要修改Patron类。即，影响Patron类变化的因素多于1个时，会导致Patron类的代码变得不稳定。

![image-20200513100701169.png][2]

图2.1中Patron类的代码框架

​		按照单一职责原则设计Patron类时，可以将登录系统、支付订单等业务职责分别单独地封装在其他类中，从而减少Patron类的业务职责。如图2.2，将登录行为封装在Employee中，支付订单行为封装在PayOrder中。

![image-20200513100830202.png][3]

图2.2 遵守“单一职责”原则设计的Patron类

> 此时，Patron继承Employee和依赖PayOrder，其类的代码框架如下：

![image-20200513100920607.png][4]

- 符合“单一职责”设计原则的图2.2的设计方案减少了影响Patron变化的因素，使其代码更加稳定。

- 工程师在使用“单一职责”原则设计类时，也会产生如下问题：
  1. 设计类数量的增加。如果一个庞大业务系统的所有类按单一职责设计，则有可能导致设计类数量的“爆炸（Explosion）”。此外，设计类数量的增加也会使设计方案复杂度增大。
  2. 类封装特性的破坏。由于数据域封装在目标（实体）类中，如果从目标类中将含有数据域访问逻辑的业务行为分离出去，则势必造成外部代码访问目标类私有域的问题，而最终破坏目标类的封装特性。
  3. 其他问题。完全教条式地运用“单一职责”设计类时，也可能会降低代码的内聚或增加代码的耦合。同时，类职责没有明确的定义，可以是具体业务功能或行为，也可以是抽象逻辑；因此，其边界是模糊的，难以清晰地划定单一职责。

## 二、“开/闭”原则（OCP）

> “开/闭”原则要求：类或模块的代码“对扩展是开放的”（Open for Extension）、“对修改是关闭的”（Close for Modification）。

- 当软件需求发生变化时，目标类或模块的代码可以通过代码扩展，很容易地实现新的需求；而不是修改已有类或模块的代码。

- 因为，软件代码业务逻辑充满了耦合，当一处代码修改时，将会引发已有代码逻辑变化，产生逻辑错误或制造出新的代码缺陷。

![image-20200513101128901.png][5]

图2.3 PayOrder类可扩展性设计

​		COS系统需求提到的订单支付方式是工资抵扣或现金；在图2.2中，支付订单行为的实现封装在PayOrder类中。如果只考虑这两种支付行为，工程师一般会在PayOrder类中使用分支结构直接实现支付业务逻辑。这种代码结构存在的问题有：

1. 如果COS支付需求发生变化，则必须修改PayOrder已有的分支结构才能满足新需求；
2. 由于Patron依赖于PayOrder，则PayOrder代码的变化会直接影响到依赖者Patron。要解决上面的问题，需要重新设计PayOrder类结构，具体方案见图2.3。



​     在图2.3中，将PayOrder泛化为一个接口或抽象类，其定义抽象的支付行为check()；现金支付订单方式的业务逻辑由子类PayByCash实现，工资抵扣支付订单方式的业务逻辑由子类PayByPRDS实现。代码示例如下。

![image-20200513101255795.png][6]

PayOrder类结构

![image-20200513101328094.png][7]

PayByCash类结构

![image-20200513101400533.png][8]

PayByPRDS类结构
​		那么，在图2.3的类设计方案中，当支付行为需求发生变化时，可以定义PayOrder新的子类实现新需求，而不需要修改已有的类（或接口）PayOrder、PayByCash、PayByPRDS等。

​		例如，COS系统升级时，新需求要添加电子银行支付订单方式。那么，工程师可以直接定义PayOrder的子类PayByEBank来实现该需求，如图2.4。

![image-20200513101440296.png][9]

图2.4 添加电子银行支付后的PayOrder类结构设计

​		在图2.4中，PayByEBank子类的添加并不会影响PayByCash、PayByPRDS等已有的类（或接口），且实现了新支付方式的扩展。

![image-20200513101526173.png][10]

PayByBank类结构

> 那么，PayByEBank类的添加对Patron（客户）类是否会产生影响？

- 这种依赖关系不受具体实现类型的影响。因此，PayByEBank类的添加也没有影响到客户类Patron。

- 从可扩展性和代码稳定性角度看，图2.3中PayOrder类的设计方案要优于图2.2，符合“开/闭”原则的设计思想。

- 实施“开/闭”原则设计代码时，工程师可以使用抽象、继承、组合等面向对象技术获得代码灵活性、可重用性、可扩展性等方面的好处。但也应看到，“开/闭”原则对代码还有以下的影响：

1. 代码可读性降低。由于使用了抽象，代码设计逻辑与业务需求逻辑相比，会产生变化，抽象代码层隐藏了具体业务细节，大大降低了源码的可读性。
2. 程序测试成本增加。同样地，使用抽象设计会使测试人员无法静态确定具体对象的引用类型，必须等到程序运行时才能确定目标对象的具体类型。因此，代码缺陷可能会滞后到程序运行后才被发现；又或者，程序出现错误后，只有通过动态调试的方法才能有效地定位缺陷。最终，它们都会导致测试成本的增加。



## 三、接口隔离原则（ISP）

> 接口隔离原则指出：如果某个接口的行为不是内聚的，就应该按照业务分组，并将分组后的业务行为通过隔离的接口单独定义。

- 接口的行为要向调用它的客户端提供业务服务；对于不同的业务分组，调用它的客户端是相互独立的；

- 因此，接口提供的服务（分组）也应该是相互独立的。



![image-20200513101804644.png][11]

图2.5 打印配送单和发送配送指令行为定义在IDeliver接口中

​		例如，在COS系统需求中，餐厅员工（Cafeteria Staff）和配餐员（Meal Deliverer）都有打印配送单（Print Delivery Instructions）的行为；而且，餐厅员工还有发送配送指令（Issue Delivery Request）的行为。如果将打印配送单行为和发送配送指令行为强行定义在接口IDeliver中，如图2.5，将会产生如下问题：

1. 子类（或实现类）可能会继承（或实现）冗余行为。配餐员MealDeliverer作为IDeliver的实现类，需要实现issueDeliveryQuest()方法；然而，在COS的需求中，配餐员不具有该行为。
2. 子类（或实现类）的客户端受到不相干的业务行为干扰。假设餐厅员工CafeteriaStaff想要改变issueDeliveryQuest()的行为定义，比如修改方法名称；那么，则要修改接口IDeliver。而IDeliver接口的变化会导致实现类MealDeliverer变化，最终影响到调用MealDeliverer的所有客户端。

​		要解决上面的问题，工程师可以按照接口隔离原则提供的建议将接口中的方法进行业务分组。由于打印打印配送单和发送配送指令是不同的业务行为，两者之间的内聚度很弱，分离它们可以降低相互影响。

​		    因此，将图2.5中的IDeliver接口行为printDeliveryInstruction()和issueDeliveryQuest()分别定义在的接口IPrintDelivery和IIssueDelivery中，用于实现行为的隔离；如图2.6所示。

![image-20200513101923338.png][12]

图2.6 使用“接口隔离”原则设计打印配送单和发送配送指令行为

​		IIssueDelivery接口定义了issueDeliveryQuest()行为，IPrintDelivery接口定义了printDeliveryInstruction()行为，彼此独立，互不影响。CafeteriaStaff类实现IIssueDelivery、IPrintDelivery接口，MealDeliverer实现IPrintDelivery接口。

​		可以看到，MealDeliverer只实现了自身需要的业务行为printDeliveryInstruction()，不用实现冗余行为issueDeliveryQuest()，保证了代码逻辑与需求的一致性。此外，IIssueDelivery接口定义的变化只对其实现类CafeteriaStaff产生影响，而不会对MealDeliverer造成任何影响。

​		图2.6中类图代码框架如下。

![image-20200513102011752.png][13]

IIssueDelivery接口

![image-20200513102023766.png][14]

IPrintDelivery接口

  在Java编程语言中，IPrintDelivery接口可以定义printDeliveryInstruction()行为的默认实现，CafeteriaStaff、MealDeliverer根据需求选择重写或使用接口默认。以CafeteriaStaff为例，代码结构如下。

![image-20200513102057438.png][15]

CafeteriaStaff实现类

## 四、依赖倒置原则（DIP）

依赖倒置面向对象设计原则建议：

1. 高层模块不应依赖于低层模块，二者都应该依赖于抽象；
2. 抽象不应依赖于细节，细节应依赖于抽象。



在分层的软件架构中，业务逻辑实现的模块被称为高层模块，数据或服务支持模块是底层模块，如图2.7

![image-20200513103158318.png][16]

图2.7 高层模块与低层模块的依赖关系
​		图2.7中，业务层依赖于数据或服务层；即，高层模块依赖低层模块。当低层模块发生变化时，高层模块则不可避免地受到影响。特别地，当目标系统分层较多时，最低层模块代码的变化，会影响到所有的（含有直接依赖或间接依赖）高层模块。

​		为了减少依赖或依赖传递对高层模块的影响，要使高层模块依赖于稳定的抽象。那么，将低层模块向高层模块提供服务定义为抽象，高层模块依赖于抽象；抽象是稳定的，抽象具体实现的变化不会影响到高层模块，如图2.8。

![image-20200513103249839.png][17]

图2.8 按照“依赖倒置”原则设计模块依赖关系示意

​		相较于图2.7中的高层模块直接依赖于低层模块实现，图2.8中的高层模块依赖于底层模块的抽象；低层模块实现也同时依赖于抽象的定义（接口实现或类继承是一种强约束依赖关系，实现类或子类均依赖接口或父类的方法定义）。当低层实现变化时，由于低层模块的抽象隔离了变化，高层模块感知不到这种变化，也就不会受到该变化的影响。

​		举个例子：在COS系统中，客户（Patron）支付订单的业务依赖于支付类（PayOrder）；如果PayOrder是支付服务的实现类，则形成了高层代码Patron直接依赖于低层实现PayOrder的逻辑关系，如图2.9。

![image-20200513103325290.png][18]

图2.9 Patron直接依赖于PayOrder实现

​		由于PayOrder是支付服务的实现，当支付服务需求发生变化时，则需要修改PayOrder已有代码，或重新定义实现新需求的子类。无论哪种方式，客户端Patron都会感知到支付服务的变化，并受到影响。假设，图2.9中的PayOrder类的check()方法实现了工资抵扣支付订单行为。那么，要实现电子银行支付订单行为的新需求，则解决方案会是以下两种中的一个：

1. 修改PayOrder类，添加电子银行支付订单服务行为；修改客户端Patron支付逻辑，使得Patron可以使用PayOrder新添加的电子银行支付行为；
2. 继承PayOrder，添加电子银行支付订单行为子类；修改Patron支付逻辑，使得Patron可以依赖新添加的电子银行支付行为子类。

以上两种解决方案都无法避免对客户端Patron代码的修改。即，低层模块实现的变化直接影响了高层模块。

​		按照“依赖倒置”原则的建议重新设计Patron与PayOrder之间的依赖关系，将低层模块提供的服务进行抽象，封装为抽象类或接口；使高层模块依赖于低层模块的抽象类（或接口）；低层模块的实现类继承（或实现）抽象类（或接口）；如图2.10所示。

![image-20200513103419518.png][19]

图2.10按照“依赖倒置”原则重新设计Patron与PayOrder之间的依赖关系

>  图2.10的类图结构与图2.3、图2.4的类图结构一致，示例代码可参见2.2节。

​      由于将图2.10中的PayOrder设计为抽象类（或接口），Patron对PayOrder的依赖关系就变得稳定了。子类PayByPRDS实现了工资抵扣支付订单服务，PayByEBank实现了电子银行支付订单服务；实现类的变化不会影响到客户端Patron。因此，图2.10的设计类图不仅能保证代码稳定性，也具有良好的可扩展性。



“依赖倒置”原则提供的代码设计建议可以很好地实现代码解耦。“依赖倒置”原则所体现的设计思维，在不同材料中有不同的名称，如“好莱坞”原则（Hollywood Principle）、回调机制（Callback Mechnism）等。

在使用依赖倒置原则时，工程师需要注意以下问题：

1. **增加了代码复杂度**。依赖倒置的设计方式无疑会增加接口或抽象类的数量，使得软件代码结构变得抽象或复杂。
2. **更适合应对需求变化**。由于将依赖关系指向抽象，抽象能够隔离调用者与被调用者的实现，使得二者的变化不会相互影响，在一定程度上保证了代码稳定性。依赖倒置的代码能够通过稳定的依赖关系将新需求加入，或将原需求变化所带来的影响降低；因此，其更适合应对有需求变化的代码设计。

## 五、Liskov替换原则（LSP）

> 对于静态类型的面对象编程语言，如Java、C#，继承是多态技术实现的主要方式。通过继承，子类可以重写父类定义的方法，使得父类（或接口）定义的对象引用可以指向不同的子类实例，形成同一个行为的调用表现出多态特征。
>
> Liskov替换原则（有的资料翻译成“里氏”替换原则）建议：子类型对象必须能够完全替换掉它们的父类型对象，而不需要改变父类型的任何属性。
>
> Liskov替换原则是美国计算机科学家Barbara Liskov（女，曾于2008年获得图灵奖）于1987年在期刊ACM SIGPLAN Notices发表的标题为“Data Abstraction and Hierarchy”的文章中所提出的形式化原则。其原文中的表述为：
>
> 对于类型S的对象o1，存在类型T的对象o2，如果能使T编写的程序P的行为在o1替换o2后保持不变，则S是T的子类型（If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T,the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T）。

​		Liskov替换原则提出了如何规范地使用继承。一旦违反该规则，则有可能会导致程序表达错误。例如，在COS系统中，工程师需要实现统计图表的绘制功能，图表组件类型有：柱状图（Bar）、线状图（Line）等。工程师设计了图表组件父类ChartComponent，并定义组件绘制行为draw()；子类Bar继承ChartComponent和实现绘制柱状图行为，Line继承ChartComponent和实现绘制线状图行为；柱状图Bar额外定义了方法fill()，用于图形填充行为的实现；使用组件对象进行图表绘制的客户类是ChartDrawer；如图2.11。

![image-20200513103700208.png][20]

图2.11 COS图表绘制类结构

​		由于不同的图表组件绘制方式不同；如，绘制柱状图不仅绘制柱形，还需对图形进行填充，而绘制线状图则不需要填充；ChartDrawer代码结构可以是：

![image-20200513103722228.png][21]

ChartComponent抽象类代码结构如下：

![image-20200513103733026.png][22]

  Bar和Line作为ChartComponent的子类，分别实现柱状图、线状图绘制，以Bar为例，其代码结构如下：

![image-20200513103741842.png][23]

​		从上面的代码中可以看到，ChartDrawer在绘制不同类型图表组件时，需要知道组件的子类型，然后才能对该组件进行绘制操作；这违反了Liskov替换原则。因为，Liskov替换原则建议：对于客户端程序ChartDrawer来说，drawChart()绘制行为使用的父类ChartComponent定义的对象是可以被其子类Bar或Line定义的对象完全替换，而不需要提供额外的子类信息。

- 违反Liskov替换原则的代码具有以下缺陷：
  1. 可扩展性差。如果需要在图2.11中添加新的图表类型，比如饼状图Pie，则必须修改ChartDrawer类代码，才能完成组件子类型的扩展。而修改已有代码将会导致一系列后果，详细见本章2.2“开/闭”原则。
  2. 引入程序逻辑错误。ChartDrawer类的行为drawChart()绘制的是ChartComponent类型的图表组件；增加的新组件仍然是ChartComponent类型，但是drawChart()原有代码却无法完成新组件对象的绘制，其逻辑是错误的。

​		仔细观察上面的代码，学习者会发现违反Liskov替换原则的主要原因是：Bar子类在实现父类ChartComponent的draw()行为时，更改了原有的业务定义。父类ChartComponent定义的抽象行为draw()是统计图表组件的完整绘制逻辑，而Bar子类将统计图表组件的绘制分成了两个行为逻辑：绘制图形draw()和填充图形fill()。即，Bar子类更改了父类ChartComponent定义的绘制行为逻辑。

​		要解决Bar子类违反Liskov替换原则的问题，只需要保证该子类业务行为逻辑与父类保持一致即可。也就是，Bar子类的绘制行为draw()应包含图形填充行为fill()的逻辑。同样是图2.11类结构，Bar子类绘制行为的实现代码可以更改为：

![image-20200513103902635.png][24]

那么，客户类ChartDrawer的代码结构则修改为：

![image-20200513103910045.png][25]

​		ChartComponent所有子类draw()行为的业务逻辑都是实现目标组件完整绘制，而不是只绘制组件的一部分。因此，客户类ChartDrawer在绘制目标组件时，就不需要关心或了解具体的组件子类型。修改后的代码没有违反Liskov替换原则。

​		此外，在图2.11中添加新的图表类型饼状图Pie，也不会对ChartDrawer带来任何影响。当ChartDrawer类的drawChart()行为收到的方法参数为Pie子类型的实例时，也能正确地实现绘制逻辑。

​		虽然遵循Liskov替换原则设计的代码方案能够给代码稳定性、可扩展性等带来好处；工程师在实际使用该规则时，仍需注意：

1. 在继承关系中，父类与子类之间是强约束关联。即，子类只能实现（或继承）父类的定义（域或行为），而不能更改；父类定义（域或行为）的变化会迫使所有子类跟随变化。
2. Liskov替换原则限制了子类重写父类行为的逻辑，降低了代码灵活性。

## 六、总结

- 任何一个面向对象设计原则都是从局部提高代码质量，而不是从软件架构的全局

- 独立运用任何一个面向对象设计原则，都无法保证整体代码方案的优化

- 本质上，软件设计活动是不同技术方案分析、比较和折中的过程


  [1]: https://yxlyz.net/usr/uploads/2020/05/3048098829.png
  [2]: https://yxlyz.net/usr/uploads/2020/05/2817496414.png
  [3]: https://yxlyz.net/usr/uploads/2020/05/1437168169.png
  [4]: https://yxlyz.net/usr/uploads/2020/05/832761637.png
  [5]: https://yxlyz.net/usr/uploads/2020/05/2041833336.png
  [6]: https://yxlyz.net/usr/uploads/2020/05/2359302113.png
  [7]: https://yxlyz.net/usr/uploads/2020/05/3505797948.png
  [8]: https://yxlyz.net/usr/uploads/2020/05/3001155084.png
  [9]: https://yxlyz.net/usr/uploads/2020/05/183990686.png
  [10]: https://yxlyz.net/usr/uploads/2020/05/2942822626.png
  [11]: https://yxlyz.net/usr/uploads/2020/05/4270639770.png
  [12]: https://yxlyz.net/usr/uploads/2020/05/2691814274.png
  [13]: https://yxlyz.net/usr/uploads/2020/05/1255504503.png
  [14]: https://yxlyz.net/usr/uploads/2020/05/1965045858.png
  [15]: https://yxlyz.net/usr/uploads/2020/05/3709593788.png
  [16]: https://yxlyz.net/usr/uploads/2020/05/3033065838.png
  [17]: https://yxlyz.net/usr/uploads/2020/05/3767007406.png
  [18]: https://yxlyz.net/usr/uploads/2020/05/3042852873.png
  [19]: https://yxlyz.net/usr/uploads/2020/05/2903354407.png
  [20]: https://yxlyz.net/usr/uploads/2020/05/2877280606.png
  [21]: https://yxlyz.net/usr/uploads/2020/05/2000988877.png
  [22]: https://yxlyz.net/usr/uploads/2020/05/3057530575.png
  [23]: https://yxlyz.net/usr/uploads/2020/05/2961699169.png
  [24]: https://yxlyz.net/usr/uploads/2020/05/1976910393.png
  [25]: https://yxlyz.net/usr/uploads/2020/05/2932182748.png
, firstPicture=/images/bg.jpg, flag=原创, views=null, appreciation=true, shareStatement=false, commentabled=false, published=true, recommend=true, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=54, description=总结了面向对象设计的几大原则，单一职责原则、“开/闭”原则、接口隔离原则、依赖倒置原则、Liskov替换原则, type=Type(id=81, name=null, blogs=[]), user=null, tags=[], comments=[]), {}, org.apache.catalina.session.StandardSessionFacade@555ab3bd]}
2020-11-07 19:55:27.378 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 19:55:27.379 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 81(Long)
2020-11-07 19:55:27.381 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 19:55:27.383 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 19:55:27.384 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 19:55:27.386 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 19:55:27.388 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 19:55:27.389 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 67(Long)
2020-11-07 19:55:27.391 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 19:55:27.399 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 19:55:27.400 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 面向对象的设计原则(String), # 面向对象程序设计原则

## 一、 单一职责原则（SRP）

> 单一职责面向对象设计原则强调：一个类或模块应仅有一个引起其变化的因素（职责）。

- 通俗地讲，一个类或模块应只承担一个（或一种类型的）业务职责

- 当类承担的业务职责较多时，该类中任何职责需求的变化都会引起静态实现的变化，和导致其代码不稳定

- 无论是向目标类添加新的代码，或修改已有的代码，都是对原有代码设计的破坏，导致程序开发者花费巨大成本进行代码修复

![image-20200513100330978.png][1]

图2.1 多个业务行为的Patron类

​		例如，COS系统中客户角色具有的业务行为有：登录系统，支付订单，查看菜单等，如图2.1。如果将所有的业务行为实现在客户类Patron中，当这些业务行为中的任何一个需求发生变化时，如支付或登录行为需求发生变化，都需要修改Patron类。即，影响Patron类变化的因素多于1个时，会导致Patron类的代码变得不稳定。

![image-20200513100701169.png][2]

图2.1中Patron类的代码框架

​		按照单一职责原则设计Patron类时，可以将登录系统、支付订单等业务职责分别单独地封装在其他类中，从而减少Patron类的业务职责。如图2.2，将登录行为封装在Employee中，支付订单行为封装在PayOrder中。

![image-20200513100830202.png][3]

图2.2 遵守“单一职责”原则设计的Patron类

> 此时，Patron继承Employee和依赖PayOrder，其类的代码框架如下：

![image-20200513100920607.png][4]

- 符合“单一职责”设计原则的图2.2的设计方案减少了影响Patron变化的因素，使其代码更加稳定。

- 工程师在使用“单一职责”原则设计类时，也会产生如下问题：
  1. 设计类数量的增加。如果一个庞大业务系统的所有类按单一职责设计，则有可能导致设计类数量的“爆炸（Explosion）”。此外，设计类数量的增加也会使设计方案复杂度增大。
  2. 类封装特性的破坏。由于数据域封装在目标（实体）类中，如果从目标类中将含有数据域访问逻辑的业务行为分离出去，则势必造成外部代码访问目标类私有域的问题，而最终破坏目标类的封装特性。
  3. 其他问题。完全教条式地运用“单一职责”设计类时，也可能会降低代码的内聚或增加代码的耦合。同时，类职责没有明确的定义，可以是具体业务功能或行为，也可以是抽象逻辑；因此，其边界是模糊的，难以清晰地划定单一职责。

## 二、“开/闭”原则（OCP）

> “开/闭”原则要求：类或模块的代码“对扩展是开放的”（Open for Extension）、“对修改是关闭的”（Close for Modification）。

- 当软件需求发生变化时，目标类或模块的代码可以通过代码扩展，很容易地实现新的需求；而不是修改已有类或模块的代码。

- 因为，软件代码业务逻辑充满了耦合，当一处代码修改时，将会引发已有代码逻辑变化，产生逻辑错误或制造出新的代码缺陷。

![image-20200513101128901.png][5]

图2.3 PayOrder类可扩展性设计

​		COS系统需求提到的订单支付方式是工资抵扣或现金；在图2.2中，支付订单行为的实现封装在PayOrder类中。如果只考虑这两种支付行为，工程师一般会在PayOrder类中使用分支结构直接实现支付业务逻辑。这种代码结构存在的问题有：

1. 如果COS支付需求发生变化，则必须修改PayOrder已有的分支结构才能满足新需求；
2. 由于Patron依赖于PayOrder，则PayOrder代码的变化会直接影响到依赖者Patron。要解决上面的问题，需要重新设计PayOrder类结构，具体方案见图2.3。



​     在图2.3中，将PayOrder泛化为一个接口或抽象类，其定义抽象的支付行为check()；现金支付订单方式的业务逻辑由子类PayByCash实现，工资抵扣支付订单方式的业务逻辑由子类PayByPRDS实现。代码示例如下。

![image-20200513101255795.png][6]

PayOrder类结构

![image-20200513101328094.png][7]

PayByCash类结构

![image-20200513101400533.png][8]

PayByPRDS类结构
​		那么，在图2.3的类设计方案中，当支付行为需求发生变化时，可以定义PayOrder新的子类实现新需求，而不需要修改已有的类（或接口）PayOrder、PayByCash、PayByPRDS等。

​		例如，COS系统升级时，新需求要添加电子银行支付订单方式。那么，工程师可以直接定义PayOrder的子类PayByEBank来实现该需求，如图2.4。

![image-20200513101440296.png][9]

图2.4 添加电子银行支付后的PayOrder类结构设计

​		在图2.4中，PayByEBank子类的添加并不会影响PayByCash、PayByPRDS等已有的类（或接口），且实现了新支付方式的扩展。

![image-20200513101526173.png][10]

PayByBank类结构

> 那么，PayByEBank类的添加对Patron（客户）类是否会产生影响？

- 这种依赖关系不受具体实现类型的影响。因此，PayByEBank类的添加也没有影响到客户类Patron。

- 从可扩展性和代码稳定性角度看，图2.3中PayOrder类的设计方案要优于图2.2，符合“开/闭”原则的设计思想。

- 实施“开/闭”原则设计代码时，工程师可以使用抽象、继承、组合等面向对象技术获得代码灵活性、可重用性、可扩展性等方面的好处。但也应看到，“开/闭”原则对代码还有以下的影响：

1. 代码可读性降低。由于使用了抽象，代码设计逻辑与业务需求逻辑相比，会产生变化，抽象代码层隐藏了具体业务细节，大大降低了源码的可读性。
2. 程序测试成本增加。同样地，使用抽象设计会使测试人员无法静态确定具体对象的引用类型，必须等到程序运行时才能确定目标对象的具体类型。因此，代码缺陷可能会滞后到程序运行后才被发现；又或者，程序出现错误后，只有通过动态调试的方法才能有效地定位缺陷。最终，它们都会导致测试成本的增加。



## 三、接口隔离原则（ISP）

> 接口隔离原则指出：如果某个接口的行为不是内聚的，就应该按照业务分组，并将分组后的业务行为通过隔离的接口单独定义。

- 接口的行为要向调用它的客户端提供业务服务；对于不同的业务分组，调用它的客户端是相互独立的；

- 因此，接口提供的服务（分组）也应该是相互独立的。



![image-20200513101804644.png][11]

图2.5 打印配送单和发送配送指令行为定义在IDeliver接口中

​		例如，在COS系统需求中，餐厅员工（Cafeteria Staff）和配餐员（Meal Deliverer）都有打印配送单（Print Delivery Instructions）的行为；而且，餐厅员工还有发送配送指令（Issue Delivery Request）的行为。如果将打印配送单行为和发送配送指令行为强行定义在接口IDeliver中，如图2.5，将会产生如下问题：

1. 子类（或实现类）可能会继承（或实现）冗余行为。配餐员MealDeliverer作为IDeliver的实现类，需要实现issueDeliveryQuest()方法；然而，在COS的需求中，配餐员不具有该行为。
2. 子类（或实现类）的客户端受到不相干的业务行为干扰。假设餐厅员工CafeteriaStaff想要改变issueDeliveryQuest()的行为定义，比如修改方法名称；那么，则要修改接口IDeliver。而IDeliver接口的变化会导致实现类MealDeliverer变化，最终影响到调用MealDeliverer的所有客户端。

​		要解决上面的问题，工程师可以按照接口隔离原则提供的建议将接口中的方法进行业务分组。由于打印打印配送单和发送配送指令是不同的业务行为，两者之间的内聚度很弱，分离它们可以降低相互影响。

​		    因此，将图2.5中的IDeliver接口行为printDeliveryInstruction()和issueDeliveryQuest()分别定义在的接口IPrintDelivery和IIssueDelivery中，用于实现行为的隔离；如图2.6所示。

![image-20200513101923338.png][12]

图2.6 使用“接口隔离”原则设计打印配送单和发送配送指令行为

​		IIssueDelivery接口定义了issueDeliveryQuest()行为，IPrintDelivery接口定义了printDeliveryInstruction()行为，彼此独立，互不影响。CafeteriaStaff类实现IIssueDelivery、IPrintDelivery接口，MealDeliverer实现IPrintDelivery接口。

​		可以看到，MealDeliverer只实现了自身需要的业务行为printDeliveryInstruction()，不用实现冗余行为issueDeliveryQuest()，保证了代码逻辑与需求的一致性。此外，IIssueDelivery接口定义的变化只对其实现类CafeteriaStaff产生影响，而不会对MealDeliverer造成任何影响。

​		图2.6中类图代码框架如下。

![image-20200513102011752.png][13]

IIssueDelivery接口

![image-20200513102023766.png][14]

IPrintDelivery接口

  在Java编程语言中，IPrintDelivery接口可以定义printDeliveryInstruction()行为的默认实现，CafeteriaStaff、MealDeliverer根据需求选择重写或使用接口默认。以CafeteriaStaff为例，代码结构如下。

![image-20200513102057438.png][15]

CafeteriaStaff实现类

## 四、依赖倒置原则（DIP）

依赖倒置面向对象设计原则建议：

1. 高层模块不应依赖于低层模块，二者都应该依赖于抽象；
2. 抽象不应依赖于细节，细节应依赖于抽象。



在分层的软件架构中，业务逻辑实现的模块被称为高层模块，数据或服务支持模块是底层模块，如图2.7

![image-20200513103158318.png][16]

图2.7 高层模块与低层模块的依赖关系
​		图2.7中，业务层依赖于数据或服务层；即，高层模块依赖低层模块。当低层模块发生变化时，高层模块则不可避免地受到影响。特别地，当目标系统分层较多时，最低层模块代码的变化，会影响到所有的（含有直接依赖或间接依赖）高层模块。

​		为了减少依赖或依赖传递对高层模块的影响，要使高层模块依赖于稳定的抽象。那么，将低层模块向高层模块提供服务定义为抽象，高层模块依赖于抽象；抽象是稳定的，抽象具体实现的变化不会影响到高层模块，如图2.8。

![image-20200513103249839.png][17]

图2.8 按照“依赖倒置”原则设计模块依赖关系示意

​		相较于图2.7中的高层模块直接依赖于低层模块实现，图2.8中的高层模块依赖于底层模块的抽象；低层模块实现也同时依赖于抽象的定义（接口实现或类继承是一种强约束依赖关系，实现类或子类均依赖接口或父类的方法定义）。当低层实现变化时，由于低层模块的抽象隔离了变化，高层模块感知不到这种变化，也就不会受到该变化的影响。

​		举个例子：在COS系统中，客户（Patron）支付订单的业务依赖于支付类（PayOrder）；如果PayOrder是支付服务的实现类，则形成了高层代码Patron直接依赖于低层实现PayOrder的逻辑关系，如图2.9。

![image-20200513103325290.png][18]

图2.9 Patron直接依赖于PayOrder实现

​		由于PayOrder是支付服务的实现，当支付服务需求发生变化时，则需要修改PayOrder已有代码，或重新定义实现新需求的子类。无论哪种方式，客户端Patron都会感知到支付服务的变化，并受到影响。假设，图2.9中的PayOrder类的check()方法实现了工资抵扣支付订单行为。那么，要实现电子银行支付订单行为的新需求，则解决方案会是以下两种中的一个：

1. 修改PayOrder类，添加电子银行支付订单服务行为；修改客户端Patron支付逻辑，使得Patron可以使用PayOrder新添加的电子银行支付行为；
2. 继承PayOrder，添加电子银行支付订单行为子类；修改Patron支付逻辑，使得Patron可以依赖新添加的电子银行支付行为子类。

以上两种解决方案都无法避免对客户端Patron代码的修改。即，低层模块实现的变化直接影响了高层模块。

​		按照“依赖倒置”原则的建议重新设计Patron与PayOrder之间的依赖关系，将低层模块提供的服务进行抽象，封装为抽象类或接口；使高层模块依赖于低层模块的抽象类（或接口）；低层模块的实现类继承（或实现）抽象类（或接口）；如图2.10所示。

![image-20200513103419518.png][19]

图2.10按照“依赖倒置”原则重新设计Patron与PayOrder之间的依赖关系

>  图2.10的类图结构与图2.3、图2.4的类图结构一致，示例代码可参见2.2节。

​      由于将图2.10中的PayOrder设计为抽象类（或接口），Patron对PayOrder的依赖关系就变得稳定了。子类PayByPRDS实现了工资抵扣支付订单服务，PayByEBank实现了电子银行支付订单服务；实现类的变化不会影响到客户端Patron。因此，图2.10的设计类图不仅能保证代码稳定性，也具有良好的可扩展性。



“依赖倒置”原则提供的代码设计建议可以很好地实现代码解耦。“依赖倒置”原则所体现的设计思维，在不同材料中有不同的名称，如“好莱坞”原则（Hollywood Principle）、回调机制（Callback Mechnism）等。

在使用依赖倒置原则时，工程师需要注意以下问题：

1. **增加了代码复杂度**。依赖倒置的设计方式无疑会增加接口或抽象类的数量，使得软件代码结构变得抽象或复杂。
2. **更适合应对需求变化**。由于将依赖关系指向抽象，抽象能够隔离调用者与被调用者的实现，使得二者的变化不会相互影响，在一定程度上保证了代码稳定性。依赖倒置的代码能够通过稳定的依赖关系将新需求加入，或将原需求变化所带来的影响降低；因此，其更适合应对有需求变化的代码设计。

## 五、Liskov替换原则（LSP）

> 对于静态类型的面对象编程语言，如Java、C#，继承是多态技术实现的主要方式。通过继承，子类可以重写父类定义的方法，使得父类（或接口）定义的对象引用可以指向不同的子类实例，形成同一个行为的调用表现出多态特征。
>
> Liskov替换原则（有的资料翻译成“里氏”替换原则）建议：子类型对象必须能够完全替换掉它们的父类型对象，而不需要改变父类型的任何属性。
>
> Liskov替换原则是美国计算机科学家Barbara Liskov（女，曾于2008年获得图灵奖）于1987年在期刊ACM SIGPLAN Notices发表的标题为“Data Abstraction and Hierarchy”的文章中所提出的形式化原则。其原文中的表述为：
>
> 对于类型S的对象o1，存在类型T的对象o2，如果能使T编写的程序P的行为在o1替换o2后保持不变，则S是T的子类型（If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T,the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T）。

​		Liskov替换原则提出了如何规范地使用继承。一旦违反该规则，则有可能会导致程序表达错误。例如，在COS系统中，工程师需要实现统计图表的绘制功能，图表组件类型有：柱状图（Bar）、线状图（Line）等。工程师设计了图表组件父类ChartComponent，并定义组件绘制行为draw()；子类Bar继承ChartComponent和实现绘制柱状图行为，Line继承ChartComponent和实现绘制线状图行为；柱状图Bar额外定义了方法fill()，用于图形填充行为的实现；使用组件对象进行图表绘制的客户类是ChartDrawer；如图2.11。

![image-20200513103700208.png][20]

图2.11 COS图表绘制类结构

​		由于不同的图表组件绘制方式不同；如，绘制柱状图不仅绘制柱形，还需对图形进行填充，而绘制线状图则不需要填充；ChartDrawer代码结构可以是：

![image-20200513103722228.png][21]

ChartComponent抽象类代码结构如下：

![image-20200513103733026.png][22]

  Bar和Line作为ChartComponent的子类，分别实现柱状图、线状图绘制，以Bar为例，其代码结构如下：

![image-20200513103741842.png][23]

​		从上面的代码中可以看到，ChartDrawer在绘制不同类型图表组件时，需要知道组件的子类型，然后才能对该组件进行绘制操作；这违反了Liskov替换原则。因为，Liskov替换原则建议：对于客户端程序ChartDrawer来说，drawChart()绘制行为使用的父类ChartComponent定义的对象是可以被其子类Bar或Line定义的对象完全替换，而不需要提供额外的子类信息。

- 违反Liskov替换原则的代码具有以下缺陷：
  1. 可扩展性差。如果需要在图2.11中添加新的图表类型，比如饼状图Pie，则必须修改ChartDrawer类代码，才能完成组件子类型的扩展。而修改已有代码将会导致一系列后果，详细见本章2.2“开/闭”原则。
  2. 引入程序逻辑错误。ChartDrawer类的行为drawChart()绘制的是ChartComponent类型的图表组件；增加的新组件仍然是ChartComponent类型，但是drawChart()原有代码却无法完成新组件对象的绘制，其逻辑是错误的。

​		仔细观察上面的代码，学习者会发现违反Liskov替换原则的主要原因是：Bar子类在实现父类ChartComponent的draw()行为时，更改了原有的业务定义。父类ChartComponent定义的抽象行为draw()是统计图表组件的完整绘制逻辑，而Bar子类将统计图表组件的绘制分成了两个行为逻辑：绘制图形draw()和填充图形fill()。即，Bar子类更改了父类ChartComponent定义的绘制行为逻辑。

​		要解决Bar子类违反Liskov替换原则的问题，只需要保证该子类业务行为逻辑与父类保持一致即可。也就是，Bar子类的绘制行为draw()应包含图形填充行为fill()的逻辑。同样是图2.11类结构，Bar子类绘制行为的实现代码可以更改为：

![image-20200513103902635.png][24]

那么，客户类ChartDrawer的代码结构则修改为：

![image-20200513103910045.png][25]

​		ChartComponent所有子类draw()行为的业务逻辑都是实现目标组件完整绘制，而不是只绘制组件的一部分。因此，客户类ChartDrawer在绘制目标组件时，就不需要关心或了解具体的组件子类型。修改后的代码没有违反Liskov替换原则。

​		此外，在图2.11中添加新的图表类型饼状图Pie，也不会对ChartDrawer带来任何影响。当ChartDrawer类的drawChart()行为收到的方法参数为Pie子类型的实例时，也能正确地实现绘制逻辑。

​		虽然遵循Liskov替换原则设计的代码方案能够给代码稳定性、可扩展性等带来好处；工程师在实际使用该规则时，仍需注意：

1. 在继承关系中，父类与子类之间是强约束关联。即，子类只能实现（或继承）父类的定义（域或行为），而不能更改；父类定义（域或行为）的变化会迫使所有子类跟随变化。
2. Liskov替换原则限制了子类重写父类行为的逻辑，降低了代码灵活性。

## 六、总结

- 任何一个面向对象设计原则都是从局部提高代码质量，而不是从软件架构的全局

- 独立运用任何一个面向对象设计原则，都无法保证整体代码方案的优化

- 本质上，软件设计活动是不同技术方案分析、比较和折中的过程


  [1]: https://yxlyz.net/usr/uploads/2020/05/3048098829.png
  [2]: https://yxlyz.net/usr/uploads/2020/05/2817496414.png
  [3]: https://yxlyz.net/usr/uploads/2020/05/1437168169.png
  [4]: https://yxlyz.net/usr/uploads/2020/05/832761637.png
  [5]: https://yxlyz.net/usr/uploads/2020/05/2041833336.png
  [6]: https://yxlyz.net/usr/uploads/2020/05/2359302113.png
  [7]: https://yxlyz.net/usr/uploads/2020/05/3505797948.png
  [8]: https://yxlyz.net/usr/uploads/2020/05/3001155084.png
  [9]: https://yxlyz.net/usr/uploads/2020/05/183990686.png
  [10]: https://yxlyz.net/usr/uploads/2020/05/2942822626.png
  [11]: https://yxlyz.net/usr/uploads/2020/05/4270639770.png
  [12]: https://yxlyz.net/usr/uploads/2020/05/2691814274.png
  [13]: https://yxlyz.net/usr/uploads/2020/05/1255504503.png
  [14]: https://yxlyz.net/usr/uploads/2020/05/1965045858.png
  [15]: https://yxlyz.net/usr/uploads/2020/05/3709593788.png
  [16]: https://yxlyz.net/usr/uploads/2020/05/3033065838.png
  [17]: https://yxlyz.net/usr/uploads/2020/05/3767007406.png
  [18]: https://yxlyz.net/usr/uploads/2020/05/3042852873.png
  [19]: https://yxlyz.net/usr/uploads/2020/05/2903354407.png
  [20]: https://yxlyz.net/usr/uploads/2020/05/2877280606.png
  [21]: https://yxlyz.net/usr/uploads/2020/05/2000988877.png
  [22]: https://yxlyz.net/usr/uploads/2020/05/3057530575.png
  [23]: https://yxlyz.net/usr/uploads/2020/05/2961699169.png
  [24]: https://yxlyz.net/usr/uploads/2020/05/1976910393.png
  [25]: https://yxlyz.net/usr/uploads/2020/05/2932182748.png
(String), /images/bg.jpg(String), 总结了面向对象设计的几大原则，单一职责原则、“开/闭”原则、接口隔离原则、依赖倒置原则、Liskov替换原则(String), 原创(String), 1(Integer), true(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2020-11-07 19:52:14.939(Timestamp), 2020-11-07 19:55:27.398(Timestamp), 81(Long), 2(Long), 67(Long)
2020-11-07 19:55:27.404 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 19:55:27.405 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 19:55:27.405 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 67(Long)
2020-11-07 19:55:27.406 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 1
2020-11-07 19:55:27.406 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 19:55:27.407 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 67(Long), 54(Long)
2020-11-07 19:55:27.423 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 19:55:27.426  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 19:55:27.435  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 19:55:27.441 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:55:27.442 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:55:27.443 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:55:27.444 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 19:55:27.444 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 19:55:27.445 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 19:55:27.446 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:55:27.446 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:55:27.447 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:55:27.448  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:55:34.398  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 19:55:34.410 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 19:55:34.412 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 19:55:34.417 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 19:55:34.418 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 19:55:34.419 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 19:55:34.426 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findAll             : <==      Total: 1
2020-11-07 19:55:34.428 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 19:55:34.429 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 19:55:34.432 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 1
2020-11-07 19:55:34.433 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 19:55:34.434 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 19:55:34.436 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 1
2020-11-07 19:55:34.437 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 19:55:34.437 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 19:55:34.439 DEBUG 5708 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 0
2020-11-07 19:55:34.440  INFO 5708 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 19:55:34.913  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 19:55:34.913 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 19:55:34.913 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 19:55:34.914 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 1
2020-11-07 19:55:34.915  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 19:56:06.775  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/67/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[67, {}]}
2020-11-07 19:56:06.779 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:56:06.781 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:56:06.786 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:56:06.788 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 19:56:06.789 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 19:56:06.794 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 19:56:06.795 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 19:56:06.796 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 67(Long)
2020-11-07 19:56:06.802 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 19:56:06.802 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:56:06.803 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 19:56:06.804 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 19:56:06.806 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 19:56:06.806 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 19:56:06.808 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 19:56:06.808  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 19:56:11.407  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[Blog(id=67, title=面向对象的设计原则, content=# 面向对象程序设计原则

## 一、 单一职责原则（SRP）

> 单一职责面向对象设计原则强调：一个类或模块应仅有一个引起其变化的因素（职责）。

- 通俗地讲，一个类或模块应只承担一个（或一种类型的）业务职责

- 当类承担的业务职责较多时，该类中任何职责需求的变化都会引起静态实现的变化，和导致其代码不稳定

- 无论是向目标类添加新的代码，或修改已有的代码，都是对原有代码设计的破坏，导致程序开发者花费巨大成本进行代码修复

![image-20200513100330978.png][1]

图2.1 多个业务行为的Patron类

​		例如，COS系统中客户角色具有的业务行为有：登录系统，支付订单，查看菜单等，如图2.1。如果将所有的业务行为实现在客户类Patron中，当这些业务行为中的任何一个需求发生变化时，如支付或登录行为需求发生变化，都需要修改Patron类。即，影响Patron类变化的因素多于1个时，会导致Patron类的代码变得不稳定。

![image-20200513100701169.png][2]

图2.1中Patron类的代码框架

​		按照单一职责原则设计Patron类时，可以将登录系统、支付订单等业务职责分别单独地封装在其他类中，从而减少Patron类的业务职责。如图2.2，将登录行为封装在Employee中，支付订单行为封装在PayOrder中。

![image-20200513100830202.png][3]

图2.2 遵守“单一职责”原则设计的Patron类

> 此时，Patron继承Employee和依赖PayOrder，其类的代码框架如下：

![image-20200513100920607.png][4]

- 符合“单一职责”设计原则的图2.2的设计方案减少了影响Patron变化的因素，使其代码更加稳定。

- 工程师在使用“单一职责”原则设计类时，也会产生如下问题：
  1. 设计类数量的增加。如果一个庞大业务系统的所有类按单一职责设计，则有可能导致设计类数量的“爆炸（Explosion）”。此外，设计类数量的增加也会使设计方案复杂度增大。
  2. 类封装特性的破坏。由于数据域封装在目标（实体）类中，如果从目标类中将含有数据域访问逻辑的业务行为分离出去，则势必造成外部代码访问目标类私有域的问题，而最终破坏目标类的封装特性。
  3. 其他问题。完全教条式地运用“单一职责”设计类时，也可能会降低代码的内聚或增加代码的耦合。同时，类职责没有明确的定义，可以是具体业务功能或行为，也可以是抽象逻辑；因此，其边界是模糊的，难以清晰地划定单一职责。

## 二、“开/闭”原则（OCP）

> “开/闭”原则要求：类或模块的代码“对扩展是开放的”（Open for Extension）、“对修改是关闭的”（Close for Modification）。

- 当软件需求发生变化时，目标类或模块的代码可以通过代码扩展，很容易地实现新的需求；而不是修改已有类或模块的代码。

- 因为，软件代码业务逻辑充满了耦合，当一处代码修改时，将会引发已有代码逻辑变化，产生逻辑错误或制造出新的代码缺陷。

![image-20200513101128901.png][5]

图2.3 PayOrder类可扩展性设计

​		COS系统需求提到的订单支付方式是工资抵扣或现金；在图2.2中，支付订单行为的实现封装在PayOrder类中。如果只考虑这两种支付行为，工程师一般会在PayOrder类中使用分支结构直接实现支付业务逻辑。这种代码结构存在的问题有：

1. 如果COS支付需求发生变化，则必须修改PayOrder已有的分支结构才能满足新需求；
2. 由于Patron依赖于PayOrder，则PayOrder代码的变化会直接影响到依赖者Patron。要解决上面的问题，需要重新设计PayOrder类结构，具体方案见图2.3。



​     在图2.3中，将PayOrder泛化为一个接口或抽象类，其定义抽象的支付行为check()；现金支付订单方式的业务逻辑由子类PayByCash实现，工资抵扣支付订单方式的业务逻辑由子类PayByPRDS实现。代码示例如下。

![image-20200513101255795.png][6]

PayOrder类结构

![image-20200513101328094.png][7]

PayByCash类结构

![image-20200513101400533.png][8]

PayByPRDS类结构
​		那么，在图2.3的类设计方案中，当支付行为需求发生变化时，可以定义PayOrder新的子类实现新需求，而不需要修改已有的类（或接口）PayOrder、PayByCash、PayByPRDS等。

​		例如，COS系统升级时，新需求要添加电子银行支付订单方式。那么，工程师可以直接定义PayOrder的子类PayByEBank来实现该需求，如图2.4。

![image-20200513101440296.png][9]

图2.4 添加电子银行支付后的PayOrder类结构设计

​		在图2.4中，PayByEBank子类的添加并不会影响PayByCash、PayByPRDS等已有的类（或接口），且实现了新支付方式的扩展。

![image-20200513101526173.png][10]

PayByBank类结构

> 那么，PayByEBank类的添加对Patron（客户）类是否会产生影响？

- 这种依赖关系不受具体实现类型的影响。因此，PayByEBank类的添加也没有影响到客户类Patron。

- 从可扩展性和代码稳定性角度看，图2.3中PayOrder类的设计方案要优于图2.2，符合“开/闭”原则的设计思想。

- 实施“开/闭”原则设计代码时，工程师可以使用抽象、继承、组合等面向对象技术获得代码灵活性、可重用性、可扩展性等方面的好处。但也应看到，“开/闭”原则对代码还有以下的影响：

1. 代码可读性降低。由于使用了抽象，代码设计逻辑与业务需求逻辑相比，会产生变化，抽象代码层隐藏了具体业务细节，大大降低了源码的可读性。
2. 程序测试成本增加。同样地，使用抽象设计会使测试人员无法静态确定具体对象的引用类型，必须等到程序运行时才能确定目标对象的具体类型。因此，代码缺陷可能会滞后到程序运行后才被发现；又或者，程序出现错误后，只有通过动态调试的方法才能有效地定位缺陷。最终，它们都会导致测试成本的增加。



## 三、接口隔离原则（ISP）

> 接口隔离原则指出：如果某个接口的行为不是内聚的，就应该按照业务分组，并将分组后的业务行为通过隔离的接口单独定义。

- 接口的行为要向调用它的客户端提供业务服务；对于不同的业务分组，调用它的客户端是相互独立的；

- 因此，接口提供的服务（分组）也应该是相互独立的。



![image-20200513101804644.png][11]

图2.5 打印配送单和发送配送指令行为定义在IDeliver接口中

​		例如，在COS系统需求中，餐厅员工（Cafeteria Staff）和配餐员（Meal Deliverer）都有打印配送单（Print Delivery Instructions）的行为；而且，餐厅员工还有发送配送指令（Issue Delivery Request）的行为。如果将打印配送单行为和发送配送指令行为强行定义在接口IDeliver中，如图2.5，将会产生如下问题：

1. 子类（或实现类）可能会继承（或实现）冗余行为。配餐员MealDeliverer作为IDeliver的实现类，需要实现issueDeliveryQuest()方法；然而，在COS的需求中，配餐员不具有该行为。
2. 子类（或实现类）的客户端受到不相干的业务行为干扰。假设餐厅员工CafeteriaStaff想要改变issueDeliveryQuest()的行为定义，比如修改方法名称；那么，则要修改接口IDeliver。而IDeliver接口的变化会导致实现类MealDeliverer变化，最终影响到调用MealDeliverer的所有客户端。

​		要解决上面的问题，工程师可以按照接口隔离原则提供的建议将接口中的方法进行业务分组。由于打印打印配送单和发送配送指令是不同的业务行为，两者之间的内聚度很弱，分离它们可以降低相互影响。

​		    因此，将图2.5中的IDeliver接口行为printDeliveryInstruction()和issueDeliveryQuest()分别定义在的接口IPrintDelivery和IIssueDelivery中，用于实现行为的隔离；如图2.6所示。

![image-20200513101923338.png][12]

图2.6 使用“接口隔离”原则设计打印配送单和发送配送指令行为

​		IIssueDelivery接口定义了issueDeliveryQuest()行为，IPrintDelivery接口定义了printDeliveryInstruction()行为，彼此独立，互不影响。CafeteriaStaff类实现IIssueDelivery、IPrintDelivery接口，MealDeliverer实现IPrintDelivery接口。

​		可以看到，MealDeliverer只实现了自身需要的业务行为printDeliveryInstruction()，不用实现冗余行为issueDeliveryQuest()，保证了代码逻辑与需求的一致性。此外，IIssueDelivery接口定义的变化只对其实现类CafeteriaStaff产生影响，而不会对MealDeliverer造成任何影响。

​		图2.6中类图代码框架如下。

![image-20200513102011752.png][13]

IIssueDelivery接口

![image-20200513102023766.png][14]

IPrintDelivery接口

  在Java编程语言中，IPrintDelivery接口可以定义printDeliveryInstruction()行为的默认实现，CafeteriaStaff、MealDeliverer根据需求选择重写或使用接口默认。以CafeteriaStaff为例，代码结构如下。

![image-20200513102057438.png][15]

CafeteriaStaff实现类

## 四、依赖倒置原则（DIP）

依赖倒置面向对象设计原则建议：

1. 高层模块不应依赖于低层模块，二者都应该依赖于抽象；
2. 抽象不应依赖于细节，细节应依赖于抽象。



在分层的软件架构中，业务逻辑实现的模块被称为高层模块，数据或服务支持模块是底层模块，如图2.7

![image-20200513103158318.png][16]

图2.7 高层模块与低层模块的依赖关系
​		图2.7中，业务层依赖于数据或服务层；即，高层模块依赖低层模块。当低层模块发生变化时，高层模块则不可避免地受到影响。特别地，当目标系统分层较多时，最低层模块代码的变化，会影响到所有的（含有直接依赖或间接依赖）高层模块。

​		为了减少依赖或依赖传递对高层模块的影响，要使高层模块依赖于稳定的抽象。那么，将低层模块向高层模块提供服务定义为抽象，高层模块依赖于抽象；抽象是稳定的，抽象具体实现的变化不会影响到高层模块，如图2.8。

![image-20200513103249839.png][17]

图2.8 按照“依赖倒置”原则设计模块依赖关系示意

​		相较于图2.7中的高层模块直接依赖于低层模块实现，图2.8中的高层模块依赖于底层模块的抽象；低层模块实现也同时依赖于抽象的定义（接口实现或类继承是一种强约束依赖关系，实现类或子类均依赖接口或父类的方法定义）。当低层实现变化时，由于低层模块的抽象隔离了变化，高层模块感知不到这种变化，也就不会受到该变化的影响。

​		举个例子：在COS系统中，客户（Patron）支付订单的业务依赖于支付类（PayOrder）；如果PayOrder是支付服务的实现类，则形成了高层代码Patron直接依赖于低层实现PayOrder的逻辑关系，如图2.9。

![image-20200513103325290.png][18]

图2.9 Patron直接依赖于PayOrder实现

​		由于PayOrder是支付服务的实现，当支付服务需求发生变化时，则需要修改PayOrder已有代码，或重新定义实现新需求的子类。无论哪种方式，客户端Patron都会感知到支付服务的变化，并受到影响。假设，图2.9中的PayOrder类的check()方法实现了工资抵扣支付订单行为。那么，要实现电子银行支付订单行为的新需求，则解决方案会是以下两种中的一个：

1. 修改PayOrder类，添加电子银行支付订单服务行为；修改客户端Patron支付逻辑，使得Patron可以使用PayOrder新添加的电子银行支付行为；
2. 继承PayOrder，添加电子银行支付订单行为子类；修改Patron支付逻辑，使得Patron可以依赖新添加的电子银行支付行为子类。

以上两种解决方案都无法避免对客户端Patron代码的修改。即，低层模块实现的变化直接影响了高层模块。

​		按照“依赖倒置”原则的建议重新设计Patron与PayOrder之间的依赖关系，将低层模块提供的服务进行抽象，封装为抽象类或接口；使高层模块依赖于低层模块的抽象类（或接口）；低层模块的实现类继承（或实现）抽象类（或接口）；如图2.10所示。

![image-20200513103419518.png][19]

图2.10按照“依赖倒置”原则重新设计Patron与PayOrder之间的依赖关系

>  图2.10的类图结构与图2.3、图2.4的类图结构一致，示例代码可参见2.2节。

​      由于将图2.10中的PayOrder设计为抽象类（或接口），Patron对PayOrder的依赖关系就变得稳定了。子类PayByPRDS实现了工资抵扣支付订单服务，PayByEBank实现了电子银行支付订单服务；实现类的变化不会影响到客户端Patron。因此，图2.10的设计类图不仅能保证代码稳定性，也具有良好的可扩展性。



“依赖倒置”原则提供的代码设计建议可以很好地实现代码解耦。“依赖倒置”原则所体现的设计思维，在不同材料中有不同的名称，如“好莱坞”原则（Hollywood Principle）、回调机制（Callback Mechnism）等。

在使用依赖倒置原则时，工程师需要注意以下问题：

1. **增加了代码复杂度**。依赖倒置的设计方式无疑会增加接口或抽象类的数量，使得软件代码结构变得抽象或复杂。
2. **更适合应对需求变化**。由于将依赖关系指向抽象，抽象能够隔离调用者与被调用者的实现，使得二者的变化不会相互影响，在一定程度上保证了代码稳定性。依赖倒置的代码能够通过稳定的依赖关系将新需求加入，或将原需求变化所带来的影响降低；因此，其更适合应对有需求变化的代码设计。

## 五、Liskov替换原则（LSP）

> 对于静态类型的面对象编程语言，如Java、C#，继承是多态技术实现的主要方式。通过继承，子类可以重写父类定义的方法，使得父类（或接口）定义的对象引用可以指向不同的子类实例，形成同一个行为的调用表现出多态特征。
>
> Liskov替换原则（有的资料翻译成“里氏”替换原则）建议：子类型对象必须能够完全替换掉它们的父类型对象，而不需要改变父类型的任何属性。
>
> Liskov替换原则是美国计算机科学家Barbara Liskov（女，曾于2008年获得图灵奖）于1987年在期刊ACM SIGPLAN Notices发表的标题为“Data Abstraction and Hierarchy”的文章中所提出的形式化原则。其原文中的表述为：
>
> 对于类型S的对象o1，存在类型T的对象o2，如果能使T编写的程序P的行为在o1替换o2后保持不变，则S是T的子类型（If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T,the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T）。

​		Liskov替换原则提出了如何规范地使用继承。一旦违反该规则，则有可能会导致程序表达错误。例如，在COS系统中，工程师需要实现统计图表的绘制功能，图表组件类型有：柱状图（Bar）、线状图（Line）等。工程师设计了图表组件父类ChartComponent，并定义组件绘制行为draw()；子类Bar继承ChartComponent和实现绘制柱状图行为，Line继承ChartComponent和实现绘制线状图行为；柱状图Bar额外定义了方法fill()，用于图形填充行为的实现；使用组件对象进行图表绘制的客户类是ChartDrawer；如图2.11。

![image-20200513103700208.png][20]

图2.11 COS图表绘制类结构

​		由于不同的图表组件绘制方式不同；如，绘制柱状图不仅绘制柱形，还需对图形进行填充，而绘制线状图则不需要填充；ChartDrawer代码结构可以是：

![image-20200513103722228.png][21]

ChartComponent抽象类代码结构如下：

![image-20200513103733026.png][22]

  Bar和Line作为ChartComponent的子类，分别实现柱状图、线状图绘制，以Bar为例，其代码结构如下：

![image-20200513103741842.png][23]

​		从上面的代码中可以看到，ChartDrawer在绘制不同类型图表组件时，需要知道组件的子类型，然后才能对该组件进行绘制操作；这违反了Liskov替换原则。因为，Liskov替换原则建议：对于客户端程序ChartDrawer来说，drawChart()绘制行为使用的父类ChartComponent定义的对象是可以被其子类Bar或Line定义的对象完全替换，而不需要提供额外的子类信息。

- 违反Liskov替换原则的代码具有以下缺陷：
  1. 可扩展性差。如果需要在图2.11中添加新的图表类型，比如饼状图Pie，则必须修改ChartDrawer类代码，才能完成组件子类型的扩展。而修改已有代码将会导致一系列后果，详细见本章2.2“开/闭”原则。
  2. 引入程序逻辑错误。ChartDrawer类的行为drawChart()绘制的是ChartComponent类型的图表组件；增加的新组件仍然是ChartComponent类型，但是drawChart()原有代码却无法完成新组件对象的绘制，其逻辑是错误的。

​		仔细观察上面的代码，学习者会发现违反Liskov替换原则的主要原因是：Bar子类在实现父类ChartComponent的draw()行为时，更改了原有的业务定义。父类ChartComponent定义的抽象行为draw()是统计图表组件的完整绘制逻辑，而Bar子类将统计图表组件的绘制分成了两个行为逻辑：绘制图形draw()和填充图形fill()。即，Bar子类更改了父类ChartComponent定义的绘制行为逻辑。

​		要解决Bar子类违反Liskov替换原则的问题，只需要保证该子类业务行为逻辑与父类保持一致即可。也就是，Bar子类的绘制行为draw()应包含图形填充行为fill()的逻辑。同样是图2.11类结构，Bar子类绘制行为的实现代码可以更改为：

![image-20200513103902635.png][24]

那么，客户类ChartDrawer的代码结构则修改为：

![image-20200513103910045.png][25]

​		ChartComponent所有子类draw()行为的业务逻辑都是实现目标组件完整绘制，而不是只绘制组件的一部分。因此，客户类ChartDrawer在绘制目标组件时，就不需要关心或了解具体的组件子类型。修改后的代码没有违反Liskov替换原则。

​		此外，在图2.11中添加新的图表类型饼状图Pie，也不会对ChartDrawer带来任何影响。当ChartDrawer类的drawChart()行为收到的方法参数为Pie子类型的实例时，也能正确地实现绘制逻辑。

​		虽然遵循Liskov替换原则设计的代码方案能够给代码稳定性、可扩展性等带来好处；工程师在实际使用该规则时，仍需注意：

1. 在继承关系中，父类与子类之间是强约束关联。即，子类只能实现（或继承）父类的定义（域或行为），而不能更改；父类定义（域或行为）的变化会迫使所有子类跟随变化。
2. Liskov替换原则限制了子类重写父类行为的逻辑，降低了代码灵活性。

## 六、总结

- 任何一个面向对象设计原则都是从局部提高代码质量，而不是从软件架构的全局

- 独立运用任何一个面向对象设计原则，都无法保证整体代码方案的优化

- 本质上，软件设计活动是不同技术方案分析、比较和折中的过程


  [1]: https://yxlyz.net/usr/uploads/2020/05/3048098829.png
  [2]: https://yxlyz.net/usr/uploads/2020/05/2817496414.png
  [3]: https://yxlyz.net/usr/uploads/2020/05/1437168169.png
  [4]: https://yxlyz.net/usr/uploads/2020/05/832761637.png
  [5]: https://yxlyz.net/usr/uploads/2020/05/2041833336.png
  [6]: https://yxlyz.net/usr/uploads/2020/05/2359302113.png
  [7]: https://yxlyz.net/usr/uploads/2020/05/3505797948.png
  [8]: https://yxlyz.net/usr/uploads/2020/05/3001155084.png
  [9]: https://yxlyz.net/usr/uploads/2020/05/183990686.png
  [10]: https://yxlyz.net/usr/uploads/2020/05/2942822626.png
  [11]: https://yxlyz.net/usr/uploads/2020/05/4270639770.png
  [12]: https://yxlyz.net/usr/uploads/2020/05/2691814274.png
  [13]: https://yxlyz.net/usr/uploads/2020/05/1255504503.png
  [14]: https://yxlyz.net/usr/uploads/2020/05/1965045858.png
  [15]: https://yxlyz.net/usr/uploads/2020/05/3709593788.png
  [16]: https://yxlyz.net/usr/uploads/2020/05/3033065838.png
  [17]: https://yxlyz.net/usr/uploads/2020/05/3767007406.png
  [18]: https://yxlyz.net/usr/uploads/2020/05/3042852873.png
  [19]: https://yxlyz.net/usr/uploads/2020/05/2903354407.png
  [20]: https://yxlyz.net/usr/uploads/2020/05/2877280606.png
  [21]: https://yxlyz.net/usr/uploads/2020/05/2000988877.png
  [22]: https://yxlyz.net/usr/uploads/2020/05/3057530575.png
  [23]: https://yxlyz.net/usr/uploads/2020/05/2961699169.png
  [24]: https://yxlyz.net/usr/uploads/2020/05/1976910393.png
  [25]: https://yxlyz.net/usr/uploads/2020/05/2932182748.png
, firstPicture=/images/bg.jpg, flag=原创, views=null, appreciation=true, shareStatement=false, commentabled=false, published=false, recommend=true, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=54, description=总结了面向对象设计的几大原则，单一职责原则、“开/闭”原则、接口隔离原则、依赖倒置原则、Liskov替换原则, type=Type(id=81, name=null, blogs=[]), user=null, tags=[], comments=[]), {}, org.apache.catalina.session.StandardSessionFacade@555ab3bd]}
2020-11-07 19:56:11.409 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 19:56:11.409 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 81(Long)
2020-11-07 19:56:11.411 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 19:56:11.412 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 19:56:11.413 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 19:56:11.414 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 19:56:11.416 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 19:56:11.416 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 67(Long)
2020-11-07 19:56:11.418 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 19:56:11.420 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 19:56:11.422 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 面向对象的设计原则(String), # 面向对象程序设计原则

## 一、 单一职责原则（SRP）

> 单一职责面向对象设计原则强调：一个类或模块应仅有一个引起其变化的因素（职责）。

- 通俗地讲，一个类或模块应只承担一个（或一种类型的）业务职责

- 当类承担的业务职责较多时，该类中任何职责需求的变化都会引起静态实现的变化，和导致其代码不稳定

- 无论是向目标类添加新的代码，或修改已有的代码，都是对原有代码设计的破坏，导致程序开发者花费巨大成本进行代码修复

![image-20200513100330978.png][1]

图2.1 多个业务行为的Patron类

​		例如，COS系统中客户角色具有的业务行为有：登录系统，支付订单，查看菜单等，如图2.1。如果将所有的业务行为实现在客户类Patron中，当这些业务行为中的任何一个需求发生变化时，如支付或登录行为需求发生变化，都需要修改Patron类。即，影响Patron类变化的因素多于1个时，会导致Patron类的代码变得不稳定。

![image-20200513100701169.png][2]

图2.1中Patron类的代码框架

​		按照单一职责原则设计Patron类时，可以将登录系统、支付订单等业务职责分别单独地封装在其他类中，从而减少Patron类的业务职责。如图2.2，将登录行为封装在Employee中，支付订单行为封装在PayOrder中。

![image-20200513100830202.png][3]

图2.2 遵守“单一职责”原则设计的Patron类

> 此时，Patron继承Employee和依赖PayOrder，其类的代码框架如下：

![image-20200513100920607.png][4]

- 符合“单一职责”设计原则的图2.2的设计方案减少了影响Patron变化的因素，使其代码更加稳定。

- 工程师在使用“单一职责”原则设计类时，也会产生如下问题：
  1. 设计类数量的增加。如果一个庞大业务系统的所有类按单一职责设计，则有可能导致设计类数量的“爆炸（Explosion）”。此外，设计类数量的增加也会使设计方案复杂度增大。
  2. 类封装特性的破坏。由于数据域封装在目标（实体）类中，如果从目标类中将含有数据域访问逻辑的业务行为分离出去，则势必造成外部代码访问目标类私有域的问题，而最终破坏目标类的封装特性。
  3. 其他问题。完全教条式地运用“单一职责”设计类时，也可能会降低代码的内聚或增加代码的耦合。同时，类职责没有明确的定义，可以是具体业务功能或行为，也可以是抽象逻辑；因此，其边界是模糊的，难以清晰地划定单一职责。

## 二、“开/闭”原则（OCP）

> “开/闭”原则要求：类或模块的代码“对扩展是开放的”（Open for Extension）、“对修改是关闭的”（Close for Modification）。

- 当软件需求发生变化时，目标类或模块的代码可以通过代码扩展，很容易地实现新的需求；而不是修改已有类或模块的代码。

- 因为，软件代码业务逻辑充满了耦合，当一处代码修改时，将会引发已有代码逻辑变化，产生逻辑错误或制造出新的代码缺陷。

![image-20200513101128901.png][5]

图2.3 PayOrder类可扩展性设计

​		COS系统需求提到的订单支付方式是工资抵扣或现金；在图2.2中，支付订单行为的实现封装在PayOrder类中。如果只考虑这两种支付行为，工程师一般会在PayOrder类中使用分支结构直接实现支付业务逻辑。这种代码结构存在的问题有：

1. 如果COS支付需求发生变化，则必须修改PayOrder已有的分支结构才能满足新需求；
2. 由于Patron依赖于PayOrder，则PayOrder代码的变化会直接影响到依赖者Patron。要解决上面的问题，需要重新设计PayOrder类结构，具体方案见图2.3。



​     在图2.3中，将PayOrder泛化为一个接口或抽象类，其定义抽象的支付行为check()；现金支付订单方式的业务逻辑由子类PayByCash实现，工资抵扣支付订单方式的业务逻辑由子类PayByPRDS实现。代码示例如下。

![image-20200513101255795.png][6]

PayOrder类结构

![image-20200513101328094.png][7]

PayByCash类结构

![image-20200513101400533.png][8]

PayByPRDS类结构
​		那么，在图2.3的类设计方案中，当支付行为需求发生变化时，可以定义PayOrder新的子类实现新需求，而不需要修改已有的类（或接口）PayOrder、PayByCash、PayByPRDS等。

​		例如，COS系统升级时，新需求要添加电子银行支付订单方式。那么，工程师可以直接定义PayOrder的子类PayByEBank来实现该需求，如图2.4。

![image-20200513101440296.png][9]

图2.4 添加电子银行支付后的PayOrder类结构设计

​		在图2.4中，PayByEBank子类的添加并不会影响PayByCash、PayByPRDS等已有的类（或接口），且实现了新支付方式的扩展。

![image-20200513101526173.png][10]

PayByBank类结构

> 那么，PayByEBank类的添加对Patron（客户）类是否会产生影响？

- 这种依赖关系不受具体实现类型的影响。因此，PayByEBank类的添加也没有影响到客户类Patron。

- 从可扩展性和代码稳定性角度看，图2.3中PayOrder类的设计方案要优于图2.2，符合“开/闭”原则的设计思想。

- 实施“开/闭”原则设计代码时，工程师可以使用抽象、继承、组合等面向对象技术获得代码灵活性、可重用性、可扩展性等方面的好处。但也应看到，“开/闭”原则对代码还有以下的影响：

1. 代码可读性降低。由于使用了抽象，代码设计逻辑与业务需求逻辑相比，会产生变化，抽象代码层隐藏了具体业务细节，大大降低了源码的可读性。
2. 程序测试成本增加。同样地，使用抽象设计会使测试人员无法静态确定具体对象的引用类型，必须等到程序运行时才能确定目标对象的具体类型。因此，代码缺陷可能会滞后到程序运行后才被发现；又或者，程序出现错误后，只有通过动态调试的方法才能有效地定位缺陷。最终，它们都会导致测试成本的增加。



## 三、接口隔离原则（ISP）

> 接口隔离原则指出：如果某个接口的行为不是内聚的，就应该按照业务分组，并将分组后的业务行为通过隔离的接口单独定义。

- 接口的行为要向调用它的客户端提供业务服务；对于不同的业务分组，调用它的客户端是相互独立的；

- 因此，接口提供的服务（分组）也应该是相互独立的。



![image-20200513101804644.png][11]

图2.5 打印配送单和发送配送指令行为定义在IDeliver接口中

​		例如，在COS系统需求中，餐厅员工（Cafeteria Staff）和配餐员（Meal Deliverer）都有打印配送单（Print Delivery Instructions）的行为；而且，餐厅员工还有发送配送指令（Issue Delivery Request）的行为。如果将打印配送单行为和发送配送指令行为强行定义在接口IDeliver中，如图2.5，将会产生如下问题：

1. 子类（或实现类）可能会继承（或实现）冗余行为。配餐员MealDeliverer作为IDeliver的实现类，需要实现issueDeliveryQuest()方法；然而，在COS的需求中，配餐员不具有该行为。
2. 子类（或实现类）的客户端受到不相干的业务行为干扰。假设餐厅员工CafeteriaStaff想要改变issueDeliveryQuest()的行为定义，比如修改方法名称；那么，则要修改接口IDeliver。而IDeliver接口的变化会导致实现类MealDeliverer变化，最终影响到调用MealDeliverer的所有客户端。

​		要解决上面的问题，工程师可以按照接口隔离原则提供的建议将接口中的方法进行业务分组。由于打印打印配送单和发送配送指令是不同的业务行为，两者之间的内聚度很弱，分离它们可以降低相互影响。

​		    因此，将图2.5中的IDeliver接口行为printDeliveryInstruction()和issueDeliveryQuest()分别定义在的接口IPrintDelivery和IIssueDelivery中，用于实现行为的隔离；如图2.6所示。

![image-20200513101923338.png][12]

图2.6 使用“接口隔离”原则设计打印配送单和发送配送指令行为

​		IIssueDelivery接口定义了issueDeliveryQuest()行为，IPrintDelivery接口定义了printDeliveryInstruction()行为，彼此独立，互不影响。CafeteriaStaff类实现IIssueDelivery、IPrintDelivery接口，MealDeliverer实现IPrintDelivery接口。

​		可以看到，MealDeliverer只实现了自身需要的业务行为printDeliveryInstruction()，不用实现冗余行为issueDeliveryQuest()，保证了代码逻辑与需求的一致性。此外，IIssueDelivery接口定义的变化只对其实现类CafeteriaStaff产生影响，而不会对MealDeliverer造成任何影响。

​		图2.6中类图代码框架如下。

![image-20200513102011752.png][13]

IIssueDelivery接口

![image-20200513102023766.png][14]

IPrintDelivery接口

  在Java编程语言中，IPrintDelivery接口可以定义printDeliveryInstruction()行为的默认实现，CafeteriaStaff、MealDeliverer根据需求选择重写或使用接口默认。以CafeteriaStaff为例，代码结构如下。

![image-20200513102057438.png][15]

CafeteriaStaff实现类

## 四、依赖倒置原则（DIP）

依赖倒置面向对象设计原则建议：

1. 高层模块不应依赖于低层模块，二者都应该依赖于抽象；
2. 抽象不应依赖于细节，细节应依赖于抽象。



在分层的软件架构中，业务逻辑实现的模块被称为高层模块，数据或服务支持模块是底层模块，如图2.7

![image-20200513103158318.png][16]

图2.7 高层模块与低层模块的依赖关系
​		图2.7中，业务层依赖于数据或服务层；即，高层模块依赖低层模块。当低层模块发生变化时，高层模块则不可避免地受到影响。特别地，当目标系统分层较多时，最低层模块代码的变化，会影响到所有的（含有直接依赖或间接依赖）高层模块。

​		为了减少依赖或依赖传递对高层模块的影响，要使高层模块依赖于稳定的抽象。那么，将低层模块向高层模块提供服务定义为抽象，高层模块依赖于抽象；抽象是稳定的，抽象具体实现的变化不会影响到高层模块，如图2.8。

![image-20200513103249839.png][17]

图2.8 按照“依赖倒置”原则设计模块依赖关系示意

​		相较于图2.7中的高层模块直接依赖于低层模块实现，图2.8中的高层模块依赖于底层模块的抽象；低层模块实现也同时依赖于抽象的定义（接口实现或类继承是一种强约束依赖关系，实现类或子类均依赖接口或父类的方法定义）。当低层实现变化时，由于低层模块的抽象隔离了变化，高层模块感知不到这种变化，也就不会受到该变化的影响。

​		举个例子：在COS系统中，客户（Patron）支付订单的业务依赖于支付类（PayOrder）；如果PayOrder是支付服务的实现类，则形成了高层代码Patron直接依赖于低层实现PayOrder的逻辑关系，如图2.9。

![image-20200513103325290.png][18]

图2.9 Patron直接依赖于PayOrder实现

​		由于PayOrder是支付服务的实现，当支付服务需求发生变化时，则需要修改PayOrder已有代码，或重新定义实现新需求的子类。无论哪种方式，客户端Patron都会感知到支付服务的变化，并受到影响。假设，图2.9中的PayOrder类的check()方法实现了工资抵扣支付订单行为。那么，要实现电子银行支付订单行为的新需求，则解决方案会是以下两种中的一个：

1. 修改PayOrder类，添加电子银行支付订单服务行为；修改客户端Patron支付逻辑，使得Patron可以使用PayOrder新添加的电子银行支付行为；
2. 继承PayOrder，添加电子银行支付订单行为子类；修改Patron支付逻辑，使得Patron可以依赖新添加的电子银行支付行为子类。

以上两种解决方案都无法避免对客户端Patron代码的修改。即，低层模块实现的变化直接影响了高层模块。

​		按照“依赖倒置”原则的建议重新设计Patron与PayOrder之间的依赖关系，将低层模块提供的服务进行抽象，封装为抽象类或接口；使高层模块依赖于低层模块的抽象类（或接口）；低层模块的实现类继承（或实现）抽象类（或接口）；如图2.10所示。

![image-20200513103419518.png][19]

图2.10按照“依赖倒置”原则重新设计Patron与PayOrder之间的依赖关系

>  图2.10的类图结构与图2.3、图2.4的类图结构一致，示例代码可参见2.2节。

​      由于将图2.10中的PayOrder设计为抽象类（或接口），Patron对PayOrder的依赖关系就变得稳定了。子类PayByPRDS实现了工资抵扣支付订单服务，PayByEBank实现了电子银行支付订单服务；实现类的变化不会影响到客户端Patron。因此，图2.10的设计类图不仅能保证代码稳定性，也具有良好的可扩展性。



“依赖倒置”原则提供的代码设计建议可以很好地实现代码解耦。“依赖倒置”原则所体现的设计思维，在不同材料中有不同的名称，如“好莱坞”原则（Hollywood Principle）、回调机制（Callback Mechnism）等。

在使用依赖倒置原则时，工程师需要注意以下问题：

1. **增加了代码复杂度**。依赖倒置的设计方式无疑会增加接口或抽象类的数量，使得软件代码结构变得抽象或复杂。
2. **更适合应对需求变化**。由于将依赖关系指向抽象，抽象能够隔离调用者与被调用者的实现，使得二者的变化不会相互影响，在一定程度上保证了代码稳定性。依赖倒置的代码能够通过稳定的依赖关系将新需求加入，或将原需求变化所带来的影响降低；因此，其更适合应对有需求变化的代码设计。

## 五、Liskov替换原则（LSP）

> 对于静态类型的面对象编程语言，如Java、C#，继承是多态技术实现的主要方式。通过继承，子类可以重写父类定义的方法，使得父类（或接口）定义的对象引用可以指向不同的子类实例，形成同一个行为的调用表现出多态特征。
>
> Liskov替换原则（有的资料翻译成“里氏”替换原则）建议：子类型对象必须能够完全替换掉它们的父类型对象，而不需要改变父类型的任何属性。
>
> Liskov替换原则是美国计算机科学家Barbara Liskov（女，曾于2008年获得图灵奖）于1987年在期刊ACM SIGPLAN Notices发表的标题为“Data Abstraction and Hierarchy”的文章中所提出的形式化原则。其原文中的表述为：
>
> 对于类型S的对象o1，存在类型T的对象o2，如果能使T编写的程序P的行为在o1替换o2后保持不变，则S是T的子类型（If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T,the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T）。

​		Liskov替换原则提出了如何规范地使用继承。一旦违反该规则，则有可能会导致程序表达错误。例如，在COS系统中，工程师需要实现统计图表的绘制功能，图表组件类型有：柱状图（Bar）、线状图（Line）等。工程师设计了图表组件父类ChartComponent，并定义组件绘制行为draw()；子类Bar继承ChartComponent和实现绘制柱状图行为，Line继承ChartComponent和实现绘制线状图行为；柱状图Bar额外定义了方法fill()，用于图形填充行为的实现；使用组件对象进行图表绘制的客户类是ChartDrawer；如图2.11。

![image-20200513103700208.png][20]

图2.11 COS图表绘制类结构

​		由于不同的图表组件绘制方式不同；如，绘制柱状图不仅绘制柱形，还需对图形进行填充，而绘制线状图则不需要填充；ChartDrawer代码结构可以是：

![image-20200513103722228.png][21]

ChartComponent抽象类代码结构如下：

![image-20200513103733026.png][22]

  Bar和Line作为ChartComponent的子类，分别实现柱状图、线状图绘制，以Bar为例，其代码结构如下：

![image-20200513103741842.png][23]

​		从上面的代码中可以看到，ChartDrawer在绘制不同类型图表组件时，需要知道组件的子类型，然后才能对该组件进行绘制操作；这违反了Liskov替换原则。因为，Liskov替换原则建议：对于客户端程序ChartDrawer来说，drawChart()绘制行为使用的父类ChartComponent定义的对象是可以被其子类Bar或Line定义的对象完全替换，而不需要提供额外的子类信息。

- 违反Liskov替换原则的代码具有以下缺陷：
  1. 可扩展性差。如果需要在图2.11中添加新的图表类型，比如饼状图Pie，则必须修改ChartDrawer类代码，才能完成组件子类型的扩展。而修改已有代码将会导致一系列后果，详细见本章2.2“开/闭”原则。
  2. 引入程序逻辑错误。ChartDrawer类的行为drawChart()绘制的是ChartComponent类型的图表组件；增加的新组件仍然是ChartComponent类型，但是drawChart()原有代码却无法完成新组件对象的绘制，其逻辑是错误的。

​		仔细观察上面的代码，学习者会发现违反Liskov替换原则的主要原因是：Bar子类在实现父类ChartComponent的draw()行为时，更改了原有的业务定义。父类ChartComponent定义的抽象行为draw()是统计图表组件的完整绘制逻辑，而Bar子类将统计图表组件的绘制分成了两个行为逻辑：绘制图形draw()和填充图形fill()。即，Bar子类更改了父类ChartComponent定义的绘制行为逻辑。

​		要解决Bar子类违反Liskov替换原则的问题，只需要保证该子类业务行为逻辑与父类保持一致即可。也就是，Bar子类的绘制行为draw()应包含图形填充行为fill()的逻辑。同样是图2.11类结构，Bar子类绘制行为的实现代码可以更改为：

![image-20200513103902635.png][24]

那么，客户类ChartDrawer的代码结构则修改为：

![image-20200513103910045.png][25]

​		ChartComponent所有子类draw()行为的业务逻辑都是实现目标组件完整绘制，而不是只绘制组件的一部分。因此，客户类ChartDrawer在绘制目标组件时，就不需要关心或了解具体的组件子类型。修改后的代码没有违反Liskov替换原则。

​		此外，在图2.11中添加新的图表类型饼状图Pie，也不会对ChartDrawer带来任何影响。当ChartDrawer类的drawChart()行为收到的方法参数为Pie子类型的实例时，也能正确地实现绘制逻辑。

​		虽然遵循Liskov替换原则设计的代码方案能够给代码稳定性、可扩展性等带来好处；工程师在实际使用该规则时，仍需注意：

1. 在继承关系中，父类与子类之间是强约束关联。即，子类只能实现（或继承）父类的定义（域或行为），而不能更改；父类定义（域或行为）的变化会迫使所有子类跟随变化。
2. Liskov替换原则限制了子类重写父类行为的逻辑，降低了代码灵活性。

## 六、总结

- 任何一个面向对象设计原则都是从局部提高代码质量，而不是从软件架构的全局

- 独立运用任何一个面向对象设计原则，都无法保证整体代码方案的优化

- 本质上，软件设计活动是不同技术方案分析、比较和折中的过程


  [1]: https://yxlyz.net/usr/uploads/2020/05/3048098829.png
  [2]: https://yxlyz.net/usr/uploads/2020/05/2817496414.png
  [3]: https://yxlyz.net/usr/uploads/2020/05/1437168169.png
  [4]: https://yxlyz.net/usr/uploads/2020/05/832761637.png
  [5]: https://yxlyz.net/usr/uploads/2020/05/2041833336.png
  [6]: https://yxlyz.net/usr/uploads/2020/05/2359302113.png
  [7]: https://yxlyz.net/usr/uploads/2020/05/3505797948.png
  [8]: https://yxlyz.net/usr/uploads/2020/05/3001155084.png
  [9]: https://yxlyz.net/usr/uploads/2020/05/183990686.png
  [10]: https://yxlyz.net/usr/uploads/2020/05/2942822626.png
  [11]: https://yxlyz.net/usr/uploads/2020/05/4270639770.png
  [12]: https://yxlyz.net/usr/uploads/2020/05/2691814274.png
  [13]: https://yxlyz.net/usr/uploads/2020/05/1255504503.png
  [14]: https://yxlyz.net/usr/uploads/2020/05/1965045858.png
  [15]: https://yxlyz.net/usr/uploads/2020/05/3709593788.png
  [16]: https://yxlyz.net/usr/uploads/2020/05/3033065838.png
  [17]: https://yxlyz.net/usr/uploads/2020/05/3767007406.png
  [18]: https://yxlyz.net/usr/uploads/2020/05/3042852873.png
  [19]: https://yxlyz.net/usr/uploads/2020/05/2903354407.png
  [20]: https://yxlyz.net/usr/uploads/2020/05/2877280606.png
  [21]: https://yxlyz.net/usr/uploads/2020/05/2000988877.png
  [22]: https://yxlyz.net/usr/uploads/2020/05/3057530575.png
  [23]: https://yxlyz.net/usr/uploads/2020/05/2961699169.png
  [24]: https://yxlyz.net/usr/uploads/2020/05/1976910393.png
  [25]: https://yxlyz.net/usr/uploads/2020/05/2932182748.png
(String), /images/bg.jpg(String), 总结了面向对象设计的几大原则，单一职责原则、“开/闭”原则、接口隔离原则、依赖倒置原则、Liskov替换原则(String), 原创(String), 1(Integer), true(Boolean), false(Boolean), false(Boolean), false(Boolean), true(Boolean), 2020-11-07 19:52:14.939(Timestamp), 2020-11-07 19:56:11.42(Timestamp), 81(Long), 2(Long), 67(Long)
2020-11-07 19:56:11.425 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 19:56:11.425 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 19:56:11.426 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 67(Long)
2020-11-07 19:56:11.427 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 1
2020-11-07 19:56:11.428 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 19:56:11.428 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 67(Long), 54(Long)
2020-11-07 19:56:11.431 DEBUG 5708 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 19:56:11.433  INFO 5708 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 19:56:11.453  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 19:56:11.457 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:56:11.457 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:56:11.459 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:56:11.460 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 19:56:11.460 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 19:56:11.462 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 19:56:11.463 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:56:11.463 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:56:11.465 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:56:11.465  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:56:41.296  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/67/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[67, {}]}
2020-11-07 19:56:41.298 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:56:41.299 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:56:41.301 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:56:41.302 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 19:56:41.302 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 19:56:41.304 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 19:56:41.305 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 19:56:41.306 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 67(Long)
2020-11-07 19:56:41.311 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 19:56:41.312 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:56:41.312 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 19:56:41.314 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 19:56:41.315 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 19:56:41.315 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 19:56:41.316 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 19:56:41.317  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 19:56:47.017  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[Blog(id=67, title=面向对象的设计原则, content=# 面向对象程序设计原则

## 一、 单一职责原则（SRP）

> 单一职责面向对象设计原则强调：一个类或模块应仅有一个引起其变化的因素（职责）。

- 通俗地讲，一个类或模块应只承担一个（或一种类型的）业务职责

- 当类承担的业务职责较多时，该类中任何职责需求的变化都会引起静态实现的变化，和导致其代码不稳定

- 无论是向目标类添加新的代码，或修改已有的代码，都是对原有代码设计的破坏，导致程序开发者花费巨大成本进行代码修复

![image-20200513100330978.png][1]

图2.1 多个业务行为的Patron类

​		例如，COS系统中客户角色具有的业务行为有：登录系统，支付订单，查看菜单等，如图2.1。如果将所有的业务行为实现在客户类Patron中，当这些业务行为中的任何一个需求发生变化时，如支付或登录行为需求发生变化，都需要修改Patron类。即，影响Patron类变化的因素多于1个时，会导致Patron类的代码变得不稳定。

![image-20200513100701169.png][2]

图2.1中Patron类的代码框架

​		按照单一职责原则设计Patron类时，可以将登录系统、支付订单等业务职责分别单独地封装在其他类中，从而减少Patron类的业务职责。如图2.2，将登录行为封装在Employee中，支付订单行为封装在PayOrder中。

![image-20200513100830202.png][3]

图2.2 遵守“单一职责”原则设计的Patron类

> 此时，Patron继承Employee和依赖PayOrder，其类的代码框架如下：

![image-20200513100920607.png][4]

- 符合“单一职责”设计原则的图2.2的设计方案减少了影响Patron变化的因素，使其代码更加稳定。

- 工程师在使用“单一职责”原则设计类时，也会产生如下问题：
  1. 设计类数量的增加。如果一个庞大业务系统的所有类按单一职责设计，则有可能导致设计类数量的“爆炸（Explosion）”。此外，设计类数量的增加也会使设计方案复杂度增大。
  2. 类封装特性的破坏。由于数据域封装在目标（实体）类中，如果从目标类中将含有数据域访问逻辑的业务行为分离出去，则势必造成外部代码访问目标类私有域的问题，而最终破坏目标类的封装特性。
  3. 其他问题。完全教条式地运用“单一职责”设计类时，也可能会降低代码的内聚或增加代码的耦合。同时，类职责没有明确的定义，可以是具体业务功能或行为，也可以是抽象逻辑；因此，其边界是模糊的，难以清晰地划定单一职责。

## 二、“开/闭”原则（OCP）

> “开/闭”原则要求：类或模块的代码“对扩展是开放的”（Open for Extension）、“对修改是关闭的”（Close for Modification）。

- 当软件需求发生变化时，目标类或模块的代码可以通过代码扩展，很容易地实现新的需求；而不是修改已有类或模块的代码。

- 因为，软件代码业务逻辑充满了耦合，当一处代码修改时，将会引发已有代码逻辑变化，产生逻辑错误或制造出新的代码缺陷。

![image-20200513101128901.png][5]

图2.3 PayOrder类可扩展性设计

​		COS系统需求提到的订单支付方式是工资抵扣或现金；在图2.2中，支付订单行为的实现封装在PayOrder类中。如果只考虑这两种支付行为，工程师一般会在PayOrder类中使用分支结构直接实现支付业务逻辑。这种代码结构存在的问题有：

1. 如果COS支付需求发生变化，则必须修改PayOrder已有的分支结构才能满足新需求；
2. 由于Patron依赖于PayOrder，则PayOrder代码的变化会直接影响到依赖者Patron。要解决上面的问题，需要重新设计PayOrder类结构，具体方案见图2.3。



​     在图2.3中，将PayOrder泛化为一个接口或抽象类，其定义抽象的支付行为check()；现金支付订单方式的业务逻辑由子类PayByCash实现，工资抵扣支付订单方式的业务逻辑由子类PayByPRDS实现。代码示例如下。

![image-20200513101255795.png][6]

PayOrder类结构

![image-20200513101328094.png][7]

PayByCash类结构

![image-20200513101400533.png][8]

PayByPRDS类结构
​		那么，在图2.3的类设计方案中，当支付行为需求发生变化时，可以定义PayOrder新的子类实现新需求，而不需要修改已有的类（或接口）PayOrder、PayByCash、PayByPRDS等。

​		例如，COS系统升级时，新需求要添加电子银行支付订单方式。那么，工程师可以直接定义PayOrder的子类PayByEBank来实现该需求，如图2.4。

![image-20200513101440296.png][9]

图2.4 添加电子银行支付后的PayOrder类结构设计

​		在图2.4中，PayByEBank子类的添加并不会影响PayByCash、PayByPRDS等已有的类（或接口），且实现了新支付方式的扩展。

![image-20200513101526173.png][10]

PayByBank类结构

> 那么，PayByEBank类的添加对Patron（客户）类是否会产生影响？

- 这种依赖关系不受具体实现类型的影响。因此，PayByEBank类的添加也没有影响到客户类Patron。

- 从可扩展性和代码稳定性角度看，图2.3中PayOrder类的设计方案要优于图2.2，符合“开/闭”原则的设计思想。

- 实施“开/闭”原则设计代码时，工程师可以使用抽象、继承、组合等面向对象技术获得代码灵活性、可重用性、可扩展性等方面的好处。但也应看到，“开/闭”原则对代码还有以下的影响：

1. 代码可读性降低。由于使用了抽象，代码设计逻辑与业务需求逻辑相比，会产生变化，抽象代码层隐藏了具体业务细节，大大降低了源码的可读性。
2. 程序测试成本增加。同样地，使用抽象设计会使测试人员无法静态确定具体对象的引用类型，必须等到程序运行时才能确定目标对象的具体类型。因此，代码缺陷可能会滞后到程序运行后才被发现；又或者，程序出现错误后，只有通过动态调试的方法才能有效地定位缺陷。最终，它们都会导致测试成本的增加。



## 三、接口隔离原则（ISP）

> 接口隔离原则指出：如果某个接口的行为不是内聚的，就应该按照业务分组，并将分组后的业务行为通过隔离的接口单独定义。

- 接口的行为要向调用它的客户端提供业务服务；对于不同的业务分组，调用它的客户端是相互独立的；

- 因此，接口提供的服务（分组）也应该是相互独立的。



![image-20200513101804644.png][11]

图2.5 打印配送单和发送配送指令行为定义在IDeliver接口中

​		例如，在COS系统需求中，餐厅员工（Cafeteria Staff）和配餐员（Meal Deliverer）都有打印配送单（Print Delivery Instructions）的行为；而且，餐厅员工还有发送配送指令（Issue Delivery Request）的行为。如果将打印配送单行为和发送配送指令行为强行定义在接口IDeliver中，如图2.5，将会产生如下问题：

1. 子类（或实现类）可能会继承（或实现）冗余行为。配餐员MealDeliverer作为IDeliver的实现类，需要实现issueDeliveryQuest()方法；然而，在COS的需求中，配餐员不具有该行为。
2. 子类（或实现类）的客户端受到不相干的业务行为干扰。假设餐厅员工CafeteriaStaff想要改变issueDeliveryQuest()的行为定义，比如修改方法名称；那么，则要修改接口IDeliver。而IDeliver接口的变化会导致实现类MealDeliverer变化，最终影响到调用MealDeliverer的所有客户端。

​		要解决上面的问题，工程师可以按照接口隔离原则提供的建议将接口中的方法进行业务分组。由于打印打印配送单和发送配送指令是不同的业务行为，两者之间的内聚度很弱，分离它们可以降低相互影响。

​		    因此，将图2.5中的IDeliver接口行为printDeliveryInstruction()和issueDeliveryQuest()分别定义在的接口IPrintDelivery和IIssueDelivery中，用于实现行为的隔离；如图2.6所示。

![image-20200513101923338.png][12]

图2.6 使用“接口隔离”原则设计打印配送单和发送配送指令行为

​		IIssueDelivery接口定义了issueDeliveryQuest()行为，IPrintDelivery接口定义了printDeliveryInstruction()行为，彼此独立，互不影响。CafeteriaStaff类实现IIssueDelivery、IPrintDelivery接口，MealDeliverer实现IPrintDelivery接口。

​		可以看到，MealDeliverer只实现了自身需要的业务行为printDeliveryInstruction()，不用实现冗余行为issueDeliveryQuest()，保证了代码逻辑与需求的一致性。此外，IIssueDelivery接口定义的变化只对其实现类CafeteriaStaff产生影响，而不会对MealDeliverer造成任何影响。

​		图2.6中类图代码框架如下。

![image-20200513102011752.png][13]

IIssueDelivery接口

![image-20200513102023766.png][14]

IPrintDelivery接口

  在Java编程语言中，IPrintDelivery接口可以定义printDeliveryInstruction()行为的默认实现，CafeteriaStaff、MealDeliverer根据需求选择重写或使用接口默认。以CafeteriaStaff为例，代码结构如下。

![image-20200513102057438.png][15]

CafeteriaStaff实现类

## 四、依赖倒置原则（DIP）

依赖倒置面向对象设计原则建议：

1. 高层模块不应依赖于低层模块，二者都应该依赖于抽象；
2. 抽象不应依赖于细节，细节应依赖于抽象。



在分层的软件架构中，业务逻辑实现的模块被称为高层模块，数据或服务支持模块是底层模块，如图2.7

![image-20200513103158318.png][16]

图2.7 高层模块与低层模块的依赖关系
​		图2.7中，业务层依赖于数据或服务层；即，高层模块依赖低层模块。当低层模块发生变化时，高层模块则不可避免地受到影响。特别地，当目标系统分层较多时，最低层模块代码的变化，会影响到所有的（含有直接依赖或间接依赖）高层模块。

​		为了减少依赖或依赖传递对高层模块的影响，要使高层模块依赖于稳定的抽象。那么，将低层模块向高层模块提供服务定义为抽象，高层模块依赖于抽象；抽象是稳定的，抽象具体实现的变化不会影响到高层模块，如图2.8。

![image-20200513103249839.png][17]

图2.8 按照“依赖倒置”原则设计模块依赖关系示意

​		相较于图2.7中的高层模块直接依赖于低层模块实现，图2.8中的高层模块依赖于底层模块的抽象；低层模块实现也同时依赖于抽象的定义（接口实现或类继承是一种强约束依赖关系，实现类或子类均依赖接口或父类的方法定义）。当低层实现变化时，由于低层模块的抽象隔离了变化，高层模块感知不到这种变化，也就不会受到该变化的影响。

​		举个例子：在COS系统中，客户（Patron）支付订单的业务依赖于支付类（PayOrder）；如果PayOrder是支付服务的实现类，则形成了高层代码Patron直接依赖于低层实现PayOrder的逻辑关系，如图2.9。

![image-20200513103325290.png][18]

图2.9 Patron直接依赖于PayOrder实现

​		由于PayOrder是支付服务的实现，当支付服务需求发生变化时，则需要修改PayOrder已有代码，或重新定义实现新需求的子类。无论哪种方式，客户端Patron都会感知到支付服务的变化，并受到影响。假设，图2.9中的PayOrder类的check()方法实现了工资抵扣支付订单行为。那么，要实现电子银行支付订单行为的新需求，则解决方案会是以下两种中的一个：

1. 修改PayOrder类，添加电子银行支付订单服务行为；修改客户端Patron支付逻辑，使得Patron可以使用PayOrder新添加的电子银行支付行为；
2. 继承PayOrder，添加电子银行支付订单行为子类；修改Patron支付逻辑，使得Patron可以依赖新添加的电子银行支付行为子类。

以上两种解决方案都无法避免对客户端Patron代码的修改。即，低层模块实现的变化直接影响了高层模块。

​		按照“依赖倒置”原则的建议重新设计Patron与PayOrder之间的依赖关系，将低层模块提供的服务进行抽象，封装为抽象类或接口；使高层模块依赖于低层模块的抽象类（或接口）；低层模块的实现类继承（或实现）抽象类（或接口）；如图2.10所示。

![image-20200513103419518.png][19]

图2.10按照“依赖倒置”原则重新设计Patron与PayOrder之间的依赖关系

>  图2.10的类图结构与图2.3、图2.4的类图结构一致，示例代码可参见2.2节。

​      由于将图2.10中的PayOrder设计为抽象类（或接口），Patron对PayOrder的依赖关系就变得稳定了。子类PayByPRDS实现了工资抵扣支付订单服务，PayByEBank实现了电子银行支付订单服务；实现类的变化不会影响到客户端Patron。因此，图2.10的设计类图不仅能保证代码稳定性，也具有良好的可扩展性。



“依赖倒置”原则提供的代码设计建议可以很好地实现代码解耦。“依赖倒置”原则所体现的设计思维，在不同材料中有不同的名称，如“好莱坞”原则（Hollywood Principle）、回调机制（Callback Mechnism）等。

在使用依赖倒置原则时，工程师需要注意以下问题：

1. **增加了代码复杂度**。依赖倒置的设计方式无疑会增加接口或抽象类的数量，使得软件代码结构变得抽象或复杂。
2. **更适合应对需求变化**。由于将依赖关系指向抽象，抽象能够隔离调用者与被调用者的实现，使得二者的变化不会相互影响，在一定程度上保证了代码稳定性。依赖倒置的代码能够通过稳定的依赖关系将新需求加入，或将原需求变化所带来的影响降低；因此，其更适合应对有需求变化的代码设计。

## 五、Liskov替换原则（LSP）

> 对于静态类型的面对象编程语言，如Java、C#，继承是多态技术实现的主要方式。通过继承，子类可以重写父类定义的方法，使得父类（或接口）定义的对象引用可以指向不同的子类实例，形成同一个行为的调用表现出多态特征。
>
> Liskov替换原则（有的资料翻译成“里氏”替换原则）建议：子类型对象必须能够完全替换掉它们的父类型对象，而不需要改变父类型的任何属性。
>
> Liskov替换原则是美国计算机科学家Barbara Liskov（女，曾于2008年获得图灵奖）于1987年在期刊ACM SIGPLAN Notices发表的标题为“Data Abstraction and Hierarchy”的文章中所提出的形式化原则。其原文中的表述为：
>
> 对于类型S的对象o1，存在类型T的对象o2，如果能使T编写的程序P的行为在o1替换o2后保持不变，则S是T的子类型（If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T,the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T）。

​		Liskov替换原则提出了如何规范地使用继承。一旦违反该规则，则有可能会导致程序表达错误。例如，在COS系统中，工程师需要实现统计图表的绘制功能，图表组件类型有：柱状图（Bar）、线状图（Line）等。工程师设计了图表组件父类ChartComponent，并定义组件绘制行为draw()；子类Bar继承ChartComponent和实现绘制柱状图行为，Line继承ChartComponent和实现绘制线状图行为；柱状图Bar额外定义了方法fill()，用于图形填充行为的实现；使用组件对象进行图表绘制的客户类是ChartDrawer；如图2.11。

![image-20200513103700208.png][20]

图2.11 COS图表绘制类结构

​		由于不同的图表组件绘制方式不同；如，绘制柱状图不仅绘制柱形，还需对图形进行填充，而绘制线状图则不需要填充；ChartDrawer代码结构可以是：

![image-20200513103722228.png][21]

ChartComponent抽象类代码结构如下：

![image-20200513103733026.png][22]

  Bar和Line作为ChartComponent的子类，分别实现柱状图、线状图绘制，以Bar为例，其代码结构如下：

![image-20200513103741842.png][23]

​		从上面的代码中可以看到，ChartDrawer在绘制不同类型图表组件时，需要知道组件的子类型，然后才能对该组件进行绘制操作；这违反了Liskov替换原则。因为，Liskov替换原则建议：对于客户端程序ChartDrawer来说，drawChart()绘制行为使用的父类ChartComponent定义的对象是可以被其子类Bar或Line定义的对象完全替换，而不需要提供额外的子类信息。

- 违反Liskov替换原则的代码具有以下缺陷：
  1. 可扩展性差。如果需要在图2.11中添加新的图表类型，比如饼状图Pie，则必须修改ChartDrawer类代码，才能完成组件子类型的扩展。而修改已有代码将会导致一系列后果，详细见本章2.2“开/闭”原则。
  2. 引入程序逻辑错误。ChartDrawer类的行为drawChart()绘制的是ChartComponent类型的图表组件；增加的新组件仍然是ChartComponent类型，但是drawChart()原有代码却无法完成新组件对象的绘制，其逻辑是错误的。

​		仔细观察上面的代码，学习者会发现违反Liskov替换原则的主要原因是：Bar子类在实现父类ChartComponent的draw()行为时，更改了原有的业务定义。父类ChartComponent定义的抽象行为draw()是统计图表组件的完整绘制逻辑，而Bar子类将统计图表组件的绘制分成了两个行为逻辑：绘制图形draw()和填充图形fill()。即，Bar子类更改了父类ChartComponent定义的绘制行为逻辑。

​		要解决Bar子类违反Liskov替换原则的问题，只需要保证该子类业务行为逻辑与父类保持一致即可。也就是，Bar子类的绘制行为draw()应包含图形填充行为fill()的逻辑。同样是图2.11类结构，Bar子类绘制行为的实现代码可以更改为：

![image-20200513103902635.png][24]

那么，客户类ChartDrawer的代码结构则修改为：

![image-20200513103910045.png][25]

​		ChartComponent所有子类draw()行为的业务逻辑都是实现目标组件完整绘制，而不是只绘制组件的一部分。因此，客户类ChartDrawer在绘制目标组件时，就不需要关心或了解具体的组件子类型。修改后的代码没有违反Liskov替换原则。

​		此外，在图2.11中添加新的图表类型饼状图Pie，也不会对ChartDrawer带来任何影响。当ChartDrawer类的drawChart()行为收到的方法参数为Pie子类型的实例时，也能正确地实现绘制逻辑。

​		虽然遵循Liskov替换原则设计的代码方案能够给代码稳定性、可扩展性等带来好处；工程师在实际使用该规则时，仍需注意：

1. 在继承关系中，父类与子类之间是强约束关联。即，子类只能实现（或继承）父类的定义（域或行为），而不能更改；父类定义（域或行为）的变化会迫使所有子类跟随变化。
2. Liskov替换原则限制了子类重写父类行为的逻辑，降低了代码灵活性。

## 六、总结

- 任何一个面向对象设计原则都是从局部提高代码质量，而不是从软件架构的全局

- 独立运用任何一个面向对象设计原则，都无法保证整体代码方案的优化

- 本质上，软件设计活动是不同技术方案分析、比较和折中的过程


  [1]: https://yxlyz.net/usr/uploads/2020/05/3048098829.png
  [2]: https://yxlyz.net/usr/uploads/2020/05/2817496414.png
  [3]: https://yxlyz.net/usr/uploads/2020/05/1437168169.png
  [4]: https://yxlyz.net/usr/uploads/2020/05/832761637.png
  [5]: https://yxlyz.net/usr/uploads/2020/05/2041833336.png
  [6]: https://yxlyz.net/usr/uploads/2020/05/2359302113.png
  [7]: https://yxlyz.net/usr/uploads/2020/05/3505797948.png
  [8]: https://yxlyz.net/usr/uploads/2020/05/3001155084.png
  [9]: https://yxlyz.net/usr/uploads/2020/05/183990686.png
  [10]: https://yxlyz.net/usr/uploads/2020/05/2942822626.png
  [11]: https://yxlyz.net/usr/uploads/2020/05/4270639770.png
  [12]: https://yxlyz.net/usr/uploads/2020/05/2691814274.png
  [13]: https://yxlyz.net/usr/uploads/2020/05/1255504503.png
  [14]: https://yxlyz.net/usr/uploads/2020/05/1965045858.png
  [15]: https://yxlyz.net/usr/uploads/2020/05/3709593788.png
  [16]: https://yxlyz.net/usr/uploads/2020/05/3033065838.png
  [17]: https://yxlyz.net/usr/uploads/2020/05/3767007406.png
  [18]: https://yxlyz.net/usr/uploads/2020/05/3042852873.png
  [19]: https://yxlyz.net/usr/uploads/2020/05/2903354407.png
  [20]: https://yxlyz.net/usr/uploads/2020/05/2877280606.png
  [21]: https://yxlyz.net/usr/uploads/2020/05/2000988877.png
  [22]: https://yxlyz.net/usr/uploads/2020/05/3057530575.png
  [23]: https://yxlyz.net/usr/uploads/2020/05/2961699169.png
  [24]: https://yxlyz.net/usr/uploads/2020/05/1976910393.png
  [25]: https://yxlyz.net/usr/uploads/2020/05/2932182748.png
, firstPicture=/images/bg.jpg, flag=原创, views=null, appreciation=true, shareStatement=false, commentabled=false, published=true, recommend=true, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=54, description=总结了面向对象设计的几大原则，单一职责原则、“开/闭”原则、接口隔离原则、依赖倒置原则、Liskov替换原则, type=Type(id=81, name=null, blogs=[]), user=null, tags=[], comments=[]), {}, org.apache.catalina.session.StandardSessionFacade@555ab3bd]}
2020-11-07 19:56:47.023 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 19:56:47.024 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 81(Long)
2020-11-07 19:56:47.026 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 19:56:47.028 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 19:56:47.029 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 19:56:47.030 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 19:56:47.033 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 19:56:47.034 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 67(Long)
2020-11-07 19:56:47.038 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 19:56:47.042 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 19:56:47.045 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 面向对象的设计原则(String), # 面向对象程序设计原则

## 一、 单一职责原则（SRP）

> 单一职责面向对象设计原则强调：一个类或模块应仅有一个引起其变化的因素（职责）。

- 通俗地讲，一个类或模块应只承担一个（或一种类型的）业务职责

- 当类承担的业务职责较多时，该类中任何职责需求的变化都会引起静态实现的变化，和导致其代码不稳定

- 无论是向目标类添加新的代码，或修改已有的代码，都是对原有代码设计的破坏，导致程序开发者花费巨大成本进行代码修复

![image-20200513100330978.png][1]

图2.1 多个业务行为的Patron类

​		例如，COS系统中客户角色具有的业务行为有：登录系统，支付订单，查看菜单等，如图2.1。如果将所有的业务行为实现在客户类Patron中，当这些业务行为中的任何一个需求发生变化时，如支付或登录行为需求发生变化，都需要修改Patron类。即，影响Patron类变化的因素多于1个时，会导致Patron类的代码变得不稳定。

![image-20200513100701169.png][2]

图2.1中Patron类的代码框架

​		按照单一职责原则设计Patron类时，可以将登录系统、支付订单等业务职责分别单独地封装在其他类中，从而减少Patron类的业务职责。如图2.2，将登录行为封装在Employee中，支付订单行为封装在PayOrder中。

![image-20200513100830202.png][3]

图2.2 遵守“单一职责”原则设计的Patron类

> 此时，Patron继承Employee和依赖PayOrder，其类的代码框架如下：

![image-20200513100920607.png][4]

- 符合“单一职责”设计原则的图2.2的设计方案减少了影响Patron变化的因素，使其代码更加稳定。

- 工程师在使用“单一职责”原则设计类时，也会产生如下问题：
  1. 设计类数量的增加。如果一个庞大业务系统的所有类按单一职责设计，则有可能导致设计类数量的“爆炸（Explosion）”。此外，设计类数量的增加也会使设计方案复杂度增大。
  2. 类封装特性的破坏。由于数据域封装在目标（实体）类中，如果从目标类中将含有数据域访问逻辑的业务行为分离出去，则势必造成外部代码访问目标类私有域的问题，而最终破坏目标类的封装特性。
  3. 其他问题。完全教条式地运用“单一职责”设计类时，也可能会降低代码的内聚或增加代码的耦合。同时，类职责没有明确的定义，可以是具体业务功能或行为，也可以是抽象逻辑；因此，其边界是模糊的，难以清晰地划定单一职责。

## 二、“开/闭”原则（OCP）

> “开/闭”原则要求：类或模块的代码“对扩展是开放的”（Open for Extension）、“对修改是关闭的”（Close for Modification）。

- 当软件需求发生变化时，目标类或模块的代码可以通过代码扩展，很容易地实现新的需求；而不是修改已有类或模块的代码。

- 因为，软件代码业务逻辑充满了耦合，当一处代码修改时，将会引发已有代码逻辑变化，产生逻辑错误或制造出新的代码缺陷。

![image-20200513101128901.png][5]

图2.3 PayOrder类可扩展性设计

​		COS系统需求提到的订单支付方式是工资抵扣或现金；在图2.2中，支付订单行为的实现封装在PayOrder类中。如果只考虑这两种支付行为，工程师一般会在PayOrder类中使用分支结构直接实现支付业务逻辑。这种代码结构存在的问题有：

1. 如果COS支付需求发生变化，则必须修改PayOrder已有的分支结构才能满足新需求；
2. 由于Patron依赖于PayOrder，则PayOrder代码的变化会直接影响到依赖者Patron。要解决上面的问题，需要重新设计PayOrder类结构，具体方案见图2.3。



​     在图2.3中，将PayOrder泛化为一个接口或抽象类，其定义抽象的支付行为check()；现金支付订单方式的业务逻辑由子类PayByCash实现，工资抵扣支付订单方式的业务逻辑由子类PayByPRDS实现。代码示例如下。

![image-20200513101255795.png][6]

PayOrder类结构

![image-20200513101328094.png][7]

PayByCash类结构

![image-20200513101400533.png][8]

PayByPRDS类结构
​		那么，在图2.3的类设计方案中，当支付行为需求发生变化时，可以定义PayOrder新的子类实现新需求，而不需要修改已有的类（或接口）PayOrder、PayByCash、PayByPRDS等。

​		例如，COS系统升级时，新需求要添加电子银行支付订单方式。那么，工程师可以直接定义PayOrder的子类PayByEBank来实现该需求，如图2.4。

![image-20200513101440296.png][9]

图2.4 添加电子银行支付后的PayOrder类结构设计

​		在图2.4中，PayByEBank子类的添加并不会影响PayByCash、PayByPRDS等已有的类（或接口），且实现了新支付方式的扩展。

![image-20200513101526173.png][10]

PayByBank类结构

> 那么，PayByEBank类的添加对Patron（客户）类是否会产生影响？

- 这种依赖关系不受具体实现类型的影响。因此，PayByEBank类的添加也没有影响到客户类Patron。

- 从可扩展性和代码稳定性角度看，图2.3中PayOrder类的设计方案要优于图2.2，符合“开/闭”原则的设计思想。

- 实施“开/闭”原则设计代码时，工程师可以使用抽象、继承、组合等面向对象技术获得代码灵活性、可重用性、可扩展性等方面的好处。但也应看到，“开/闭”原则对代码还有以下的影响：

1. 代码可读性降低。由于使用了抽象，代码设计逻辑与业务需求逻辑相比，会产生变化，抽象代码层隐藏了具体业务细节，大大降低了源码的可读性。
2. 程序测试成本增加。同样地，使用抽象设计会使测试人员无法静态确定具体对象的引用类型，必须等到程序运行时才能确定目标对象的具体类型。因此，代码缺陷可能会滞后到程序运行后才被发现；又或者，程序出现错误后，只有通过动态调试的方法才能有效地定位缺陷。最终，它们都会导致测试成本的增加。



## 三、接口隔离原则（ISP）

> 接口隔离原则指出：如果某个接口的行为不是内聚的，就应该按照业务分组，并将分组后的业务行为通过隔离的接口单独定义。

- 接口的行为要向调用它的客户端提供业务服务；对于不同的业务分组，调用它的客户端是相互独立的；

- 因此，接口提供的服务（分组）也应该是相互独立的。



![image-20200513101804644.png][11]

图2.5 打印配送单和发送配送指令行为定义在IDeliver接口中

​		例如，在COS系统需求中，餐厅员工（Cafeteria Staff）和配餐员（Meal Deliverer）都有打印配送单（Print Delivery Instructions）的行为；而且，餐厅员工还有发送配送指令（Issue Delivery Request）的行为。如果将打印配送单行为和发送配送指令行为强行定义在接口IDeliver中，如图2.5，将会产生如下问题：

1. 子类（或实现类）可能会继承（或实现）冗余行为。配餐员MealDeliverer作为IDeliver的实现类，需要实现issueDeliveryQuest()方法；然而，在COS的需求中，配餐员不具有该行为。
2. 子类（或实现类）的客户端受到不相干的业务行为干扰。假设餐厅员工CafeteriaStaff想要改变issueDeliveryQuest()的行为定义，比如修改方法名称；那么，则要修改接口IDeliver。而IDeliver接口的变化会导致实现类MealDeliverer变化，最终影响到调用MealDeliverer的所有客户端。

​		要解决上面的问题，工程师可以按照接口隔离原则提供的建议将接口中的方法进行业务分组。由于打印打印配送单和发送配送指令是不同的业务行为，两者之间的内聚度很弱，分离它们可以降低相互影响。

​		    因此，将图2.5中的IDeliver接口行为printDeliveryInstruction()和issueDeliveryQuest()分别定义在的接口IPrintDelivery和IIssueDelivery中，用于实现行为的隔离；如图2.6所示。

![image-20200513101923338.png][12]

图2.6 使用“接口隔离”原则设计打印配送单和发送配送指令行为

​		IIssueDelivery接口定义了issueDeliveryQuest()行为，IPrintDelivery接口定义了printDeliveryInstruction()行为，彼此独立，互不影响。CafeteriaStaff类实现IIssueDelivery、IPrintDelivery接口，MealDeliverer实现IPrintDelivery接口。

​		可以看到，MealDeliverer只实现了自身需要的业务行为printDeliveryInstruction()，不用实现冗余行为issueDeliveryQuest()，保证了代码逻辑与需求的一致性。此外，IIssueDelivery接口定义的变化只对其实现类CafeteriaStaff产生影响，而不会对MealDeliverer造成任何影响。

​		图2.6中类图代码框架如下。

![image-20200513102011752.png][13]

IIssueDelivery接口

![image-20200513102023766.png][14]

IPrintDelivery接口

  在Java编程语言中，IPrintDelivery接口可以定义printDeliveryInstruction()行为的默认实现，CafeteriaStaff、MealDeliverer根据需求选择重写或使用接口默认。以CafeteriaStaff为例，代码结构如下。

![image-20200513102057438.png][15]

CafeteriaStaff实现类

## 四、依赖倒置原则（DIP）

依赖倒置面向对象设计原则建议：

1. 高层模块不应依赖于低层模块，二者都应该依赖于抽象；
2. 抽象不应依赖于细节，细节应依赖于抽象。



在分层的软件架构中，业务逻辑实现的模块被称为高层模块，数据或服务支持模块是底层模块，如图2.7

![image-20200513103158318.png][16]

图2.7 高层模块与低层模块的依赖关系
​		图2.7中，业务层依赖于数据或服务层；即，高层模块依赖低层模块。当低层模块发生变化时，高层模块则不可避免地受到影响。特别地，当目标系统分层较多时，最低层模块代码的变化，会影响到所有的（含有直接依赖或间接依赖）高层模块。

​		为了减少依赖或依赖传递对高层模块的影响，要使高层模块依赖于稳定的抽象。那么，将低层模块向高层模块提供服务定义为抽象，高层模块依赖于抽象；抽象是稳定的，抽象具体实现的变化不会影响到高层模块，如图2.8。

![image-20200513103249839.png][17]

图2.8 按照“依赖倒置”原则设计模块依赖关系示意

​		相较于图2.7中的高层模块直接依赖于低层模块实现，图2.8中的高层模块依赖于底层模块的抽象；低层模块实现也同时依赖于抽象的定义（接口实现或类继承是一种强约束依赖关系，实现类或子类均依赖接口或父类的方法定义）。当低层实现变化时，由于低层模块的抽象隔离了变化，高层模块感知不到这种变化，也就不会受到该变化的影响。

​		举个例子：在COS系统中，客户（Patron）支付订单的业务依赖于支付类（PayOrder）；如果PayOrder是支付服务的实现类，则形成了高层代码Patron直接依赖于低层实现PayOrder的逻辑关系，如图2.9。

![image-20200513103325290.png][18]

图2.9 Patron直接依赖于PayOrder实现

​		由于PayOrder是支付服务的实现，当支付服务需求发生变化时，则需要修改PayOrder已有代码，或重新定义实现新需求的子类。无论哪种方式，客户端Patron都会感知到支付服务的变化，并受到影响。假设，图2.9中的PayOrder类的check()方法实现了工资抵扣支付订单行为。那么，要实现电子银行支付订单行为的新需求，则解决方案会是以下两种中的一个：

1. 修改PayOrder类，添加电子银行支付订单服务行为；修改客户端Patron支付逻辑，使得Patron可以使用PayOrder新添加的电子银行支付行为；
2. 继承PayOrder，添加电子银行支付订单行为子类；修改Patron支付逻辑，使得Patron可以依赖新添加的电子银行支付行为子类。

以上两种解决方案都无法避免对客户端Patron代码的修改。即，低层模块实现的变化直接影响了高层模块。

​		按照“依赖倒置”原则的建议重新设计Patron与PayOrder之间的依赖关系，将低层模块提供的服务进行抽象，封装为抽象类或接口；使高层模块依赖于低层模块的抽象类（或接口）；低层模块的实现类继承（或实现）抽象类（或接口）；如图2.10所示。

![image-20200513103419518.png][19]

图2.10按照“依赖倒置”原则重新设计Patron与PayOrder之间的依赖关系

>  图2.10的类图结构与图2.3、图2.4的类图结构一致，示例代码可参见2.2节。

​      由于将图2.10中的PayOrder设计为抽象类（或接口），Patron对PayOrder的依赖关系就变得稳定了。子类PayByPRDS实现了工资抵扣支付订单服务，PayByEBank实现了电子银行支付订单服务；实现类的变化不会影响到客户端Patron。因此，图2.10的设计类图不仅能保证代码稳定性，也具有良好的可扩展性。



“依赖倒置”原则提供的代码设计建议可以很好地实现代码解耦。“依赖倒置”原则所体现的设计思维，在不同材料中有不同的名称，如“好莱坞”原则（Hollywood Principle）、回调机制（Callback Mechnism）等。

在使用依赖倒置原则时，工程师需要注意以下问题：

1. **增加了代码复杂度**。依赖倒置的设计方式无疑会增加接口或抽象类的数量，使得软件代码结构变得抽象或复杂。
2. **更适合应对需求变化**。由于将依赖关系指向抽象，抽象能够隔离调用者与被调用者的实现，使得二者的变化不会相互影响，在一定程度上保证了代码稳定性。依赖倒置的代码能够通过稳定的依赖关系将新需求加入，或将原需求变化所带来的影响降低；因此，其更适合应对有需求变化的代码设计。

## 五、Liskov替换原则（LSP）

> 对于静态类型的面对象编程语言，如Java、C#，继承是多态技术实现的主要方式。通过继承，子类可以重写父类定义的方法，使得父类（或接口）定义的对象引用可以指向不同的子类实例，形成同一个行为的调用表现出多态特征。
>
> Liskov替换原则（有的资料翻译成“里氏”替换原则）建议：子类型对象必须能够完全替换掉它们的父类型对象，而不需要改变父类型的任何属性。
>
> Liskov替换原则是美国计算机科学家Barbara Liskov（女，曾于2008年获得图灵奖）于1987年在期刊ACM SIGPLAN Notices发表的标题为“Data Abstraction and Hierarchy”的文章中所提出的形式化原则。其原文中的表述为：
>
> 对于类型S的对象o1，存在类型T的对象o2，如果能使T编写的程序P的行为在o1替换o2后保持不变，则S是T的子类型（If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T,the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T）。

​		Liskov替换原则提出了如何规范地使用继承。一旦违反该规则，则有可能会导致程序表达错误。例如，在COS系统中，工程师需要实现统计图表的绘制功能，图表组件类型有：柱状图（Bar）、线状图（Line）等。工程师设计了图表组件父类ChartComponent，并定义组件绘制行为draw()；子类Bar继承ChartComponent和实现绘制柱状图行为，Line继承ChartComponent和实现绘制线状图行为；柱状图Bar额外定义了方法fill()，用于图形填充行为的实现；使用组件对象进行图表绘制的客户类是ChartDrawer；如图2.11。

![image-20200513103700208.png][20]

图2.11 COS图表绘制类结构

​		由于不同的图表组件绘制方式不同；如，绘制柱状图不仅绘制柱形，还需对图形进行填充，而绘制线状图则不需要填充；ChartDrawer代码结构可以是：

![image-20200513103722228.png][21]

ChartComponent抽象类代码结构如下：

![image-20200513103733026.png][22]

  Bar和Line作为ChartComponent的子类，分别实现柱状图、线状图绘制，以Bar为例，其代码结构如下：

![image-20200513103741842.png][23]

​		从上面的代码中可以看到，ChartDrawer在绘制不同类型图表组件时，需要知道组件的子类型，然后才能对该组件进行绘制操作；这违反了Liskov替换原则。因为，Liskov替换原则建议：对于客户端程序ChartDrawer来说，drawChart()绘制行为使用的父类ChartComponent定义的对象是可以被其子类Bar或Line定义的对象完全替换，而不需要提供额外的子类信息。

- 违反Liskov替换原则的代码具有以下缺陷：
  1. 可扩展性差。如果需要在图2.11中添加新的图表类型，比如饼状图Pie，则必须修改ChartDrawer类代码，才能完成组件子类型的扩展。而修改已有代码将会导致一系列后果，详细见本章2.2“开/闭”原则。
  2. 引入程序逻辑错误。ChartDrawer类的行为drawChart()绘制的是ChartComponent类型的图表组件；增加的新组件仍然是ChartComponent类型，但是drawChart()原有代码却无法完成新组件对象的绘制，其逻辑是错误的。

​		仔细观察上面的代码，学习者会发现违反Liskov替换原则的主要原因是：Bar子类在实现父类ChartComponent的draw()行为时，更改了原有的业务定义。父类ChartComponent定义的抽象行为draw()是统计图表组件的完整绘制逻辑，而Bar子类将统计图表组件的绘制分成了两个行为逻辑：绘制图形draw()和填充图形fill()。即，Bar子类更改了父类ChartComponent定义的绘制行为逻辑。

​		要解决Bar子类违反Liskov替换原则的问题，只需要保证该子类业务行为逻辑与父类保持一致即可。也就是，Bar子类的绘制行为draw()应包含图形填充行为fill()的逻辑。同样是图2.11类结构，Bar子类绘制行为的实现代码可以更改为：

![image-20200513103902635.png][24]

那么，客户类ChartDrawer的代码结构则修改为：

![image-20200513103910045.png][25]

​		ChartComponent所有子类draw()行为的业务逻辑都是实现目标组件完整绘制，而不是只绘制组件的一部分。因此，客户类ChartDrawer在绘制目标组件时，就不需要关心或了解具体的组件子类型。修改后的代码没有违反Liskov替换原则。

​		此外，在图2.11中添加新的图表类型饼状图Pie，也不会对ChartDrawer带来任何影响。当ChartDrawer类的drawChart()行为收到的方法参数为Pie子类型的实例时，也能正确地实现绘制逻辑。

​		虽然遵循Liskov替换原则设计的代码方案能够给代码稳定性、可扩展性等带来好处；工程师在实际使用该规则时，仍需注意：

1. 在继承关系中，父类与子类之间是强约束关联。即，子类只能实现（或继承）父类的定义（域或行为），而不能更改；父类定义（域或行为）的变化会迫使所有子类跟随变化。
2. Liskov替换原则限制了子类重写父类行为的逻辑，降低了代码灵活性。

## 六、总结

- 任何一个面向对象设计原则都是从局部提高代码质量，而不是从软件架构的全局

- 独立运用任何一个面向对象设计原则，都无法保证整体代码方案的优化

- 本质上，软件设计活动是不同技术方案分析、比较和折中的过程


  [1]: https://yxlyz.net/usr/uploads/2020/05/3048098829.png
  [2]: https://yxlyz.net/usr/uploads/2020/05/2817496414.png
  [3]: https://yxlyz.net/usr/uploads/2020/05/1437168169.png
  [4]: https://yxlyz.net/usr/uploads/2020/05/832761637.png
  [5]: https://yxlyz.net/usr/uploads/2020/05/2041833336.png
  [6]: https://yxlyz.net/usr/uploads/2020/05/2359302113.png
  [7]: https://yxlyz.net/usr/uploads/2020/05/3505797948.png
  [8]: https://yxlyz.net/usr/uploads/2020/05/3001155084.png
  [9]: https://yxlyz.net/usr/uploads/2020/05/183990686.png
  [10]: https://yxlyz.net/usr/uploads/2020/05/2942822626.png
  [11]: https://yxlyz.net/usr/uploads/2020/05/4270639770.png
  [12]: https://yxlyz.net/usr/uploads/2020/05/2691814274.png
  [13]: https://yxlyz.net/usr/uploads/2020/05/1255504503.png
  [14]: https://yxlyz.net/usr/uploads/2020/05/1965045858.png
  [15]: https://yxlyz.net/usr/uploads/2020/05/3709593788.png
  [16]: https://yxlyz.net/usr/uploads/2020/05/3033065838.png
  [17]: https://yxlyz.net/usr/uploads/2020/05/3767007406.png
  [18]: https://yxlyz.net/usr/uploads/2020/05/3042852873.png
  [19]: https://yxlyz.net/usr/uploads/2020/05/2903354407.png
  [20]: https://yxlyz.net/usr/uploads/2020/05/2877280606.png
  [21]: https://yxlyz.net/usr/uploads/2020/05/2000988877.png
  [22]: https://yxlyz.net/usr/uploads/2020/05/3057530575.png
  [23]: https://yxlyz.net/usr/uploads/2020/05/2961699169.png
  [24]: https://yxlyz.net/usr/uploads/2020/05/1976910393.png
  [25]: https://yxlyz.net/usr/uploads/2020/05/2932182748.png
(String), /images/bg.jpg(String), 总结了面向对象设计的几大原则，单一职责原则、“开/闭”原则、接口隔离原则、依赖倒置原则、Liskov替换原则(String), 原创(String), 1(Integer), true(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2020-11-07 19:52:14.939(Timestamp), 2020-11-07 19:56:47.041(Timestamp), 81(Long), 2(Long), 67(Long)
2020-11-07 19:56:47.049 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 19:56:47.049 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 19:56:47.049 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 67(Long)
2020-11-07 19:56:47.051 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 1
2020-11-07 19:56:47.051 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 19:56:47.052 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 67(Long), 54(Long)
2020-11-07 19:56:47.055 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 19:56:47.058  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 19:56:47.064  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 19:56:47.065 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:56:47.066 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:56:47.068 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:56:47.070 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 19:56:47.070 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 19:56:47.072 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 19:56:47.073 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:56:47.073 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:56:47.075 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:56:47.075  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:59:46.831  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 19:59:46.834 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 19:59:46.835 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 19:59:46.835 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 19:59:46.836 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 19:59:46.837 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 19:59:46.838 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 19:59:46.838 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:59:46.839 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:59:46.839 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:59:46.840  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 19:59:55.162  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/67/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[67, {}]}
2020-11-07 19:59:55.163 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 19:59:55.164 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 19:59:55.164 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 19:59:55.165 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 19:59:55.165 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 19:59:55.166 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 19:59:55.167 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 19:59:55.167 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 67(Long)
2020-11-07 19:59:55.169 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 19:59:55.170 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 19:59:55.170 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 19:59:55.171 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 19:59:55.172 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 19:59:55.173 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 19:59:55.173 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 19:59:55.174  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:00:36.094  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:00:36.097 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:00:36.097 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:00:36.098 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:00:36.100 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:00:36.100 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:00:36.103 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 20:00:36.103 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:00:36.104 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:00:36.106 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:00:36.107  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:00:37.917  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.toAddBlog', args参数：[{}]}
2020-11-07 20:00:37.920 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:00:37.921 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:00:37.926 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:00:37.929 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:00:37.930 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:00:37.933 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:00:37.934  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:01:06.387  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[Blog(id=null, title=测试, content=测试, firstPicture=/images/bg.jpg, flag=原创, views=null, appreciation=true, shareStatement=false, commentabled=false, published=true, recommend=true, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=43,44, description=博客描述测试, type=Type(id=84, name=null, blogs=[]), user=null, tags=[], comments=[]), {}, org.apache.catalina.session.StandardSessionFacade@555ab3bd]}
2020-11-07 20:01:06.388 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:01:06.389 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 20:01:06.390 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:01:06.392 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:01:06.393 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:01:06.397 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:01:06.399 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.save    : ==>  Preparing: insert into t_blog(id,title,content,first_picture,flag,views,description,appreciation,share_statement, commentabled,published,recommend,create_time,update_time,type_id,user_id) values (?,?, ?,?,?,?,?,?,?, ?,?,?,?,?,?,?);
2020-11-07 20:01:06.401 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.save    : ==> Parameters: null, 测试(String), 测试(String), /images/bg.jpg(String), 原创(String), 1(Integer), 博客描述测试(String), true(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:01:06.399(Timestamp), 2020-11-07 20:01:06.399(Timestamp), 84(Long), 2(Long)
2020-11-07 20:01:06.403 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.save    : <==    Updates: 1
2020-11-07 20:01:06.404 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:01:06.404 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 43(Long)
2020-11-07 20:01:06.408 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:01:06.408 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:01:06.409 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 44(Long)
2020-11-07 20:01:06.412 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:01:06.420  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:01:06.444  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=保存成功！}, 1]}
2020-11-07 20:01:06.446 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:01:06.446 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:01:06.448 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:01:06.450 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:01:06.450 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:01:06.455 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:01:06.457 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:01:06.457 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:01:06.458 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:01:06.459  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:04:43.364  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:04:43.382 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:04:43.383 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:04:43.386 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:04:43.392 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:04:43.392 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:04:43.396 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:04:43.397 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:04:43.397 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:04:43.399 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:04:43.399  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:04:46.373  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/68/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[68, {}]}
2020-11-07 20:04:46.374 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:04:46.374 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:04:46.376 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:04:46.377 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:04:46.377 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:04:46.378 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:04:46.379 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:04:46.379 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 68(Long)
2020-11-07 20:04:46.381 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:04:46.382 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:04:46.382 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 68(Long)
2020-11-07 20:04:46.383 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:04:46.385 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:04:46.385 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:04:46.386 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:04:46.387  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:04:51.027  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[Blog(id=68, title=测试, content=测试, firstPicture=/images/bg.jpg, flag=原创, views=null, appreciation=true, shareStatement=false, commentabled=false, published=true, recommend=true, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=43,44, description=博客描述测试, type=Type(id=84, name=null, blogs=[]), user=null, tags=[], comments=[]), {}, org.apache.catalina.session.StandardSessionFacade@555ab3bd]}
2020-11-07 20:04:51.029 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:04:51.029 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 20:04:51.030 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:04:51.032 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:04:51.033 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:04:51.034 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:04:51.036 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:04:51.036 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 68(Long)
2020-11-07 20:04:51.038 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:04:51.041 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:04:51.041 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 测试(String), 测试(String), /images/bg.jpg(String), 博客描述测试(String), 原创(String), 1(Integer), true(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:01:06.399(Timestamp), 2020-11-07 20:04:51.04(Timestamp), 84(Long), 2(Long), 68(Long)
2020-11-07 20:04:51.043 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:04:51.044 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:04:51.044 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 68(Long)
2020-11-07 20:04:51.046 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:04:51.047 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:04:51.048 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 43(Long)
2020-11-07 20:04:51.054 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:04:51.054 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:04:51.055 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 44(Long)
2020-11-07 20:04:51.056 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:04:51.058  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:04:51.066  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:04:51.068 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:04:51.068 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:04:51.069 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:04:51.071 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:04:51.072 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:04:51.073 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:04:51.074 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:04:51.074 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:04:51.076 DEBUG 5708 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:04:51.077  INFO 5708 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:05:14.140  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 20:05:14.143 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 20:05:14.143 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 20:05:14.144 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 20:05:14.145 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 20:05:14.145 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 20:05:14.150 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : <==      Total: 2
2020-11-07 20:05:14.151 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 20:05:14.151 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 20:05:14.153 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 2
2020-11-07 20:05:14.154 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 20:05:14.154 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 20:05:14.156 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 3
2020-11-07 20:05:14.157 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 20:05:14.157 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 20:05:14.158 DEBUG 5708 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 0
2020-11-07 20:05:14.158  INFO 5708 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 20:05:15.038  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:05:15.039 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:05:15.039 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:05:15.040 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:05:15.041  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:09:59.999  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 20:10:00.035 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 20:10:00.038 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 20:10:00.040 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 20:10:00.042 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 20:10:00.043 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 20:10:00.048 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findAll             : <==      Total: 2
2020-11-07 20:10:00.050 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 20:10:00.050 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 20:10:00.052 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 2
2020-11-07 20:10:00.053 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 20:10:00.054 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 20:10:00.056 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 3
2020-11-07 20:10:00.057 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 20:10:00.058 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 20:10:00.059 DEBUG 5708 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 1
2020-11-07 20:10:00.060  INFO 5708 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 20:10:00.555  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:10:00.555 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:10:00.555 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:10:00.556 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:10:00.556  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:10:10.773  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/68/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[68, {}]}
2020-11-07 20:10:10.774 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:10:10.775 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:10:10.776 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:10:10.777 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:10:10.777 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:10:10.779 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:10:10.779 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:10:10.779 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 68(Long)
2020-11-07 20:10:10.781 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:10:10.781 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:10:10.782 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 68(Long)
2020-11-07 20:10:10.783 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:10:10.784 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:10:10.785 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:10:10.786 DEBUG 5708 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:10:10.786  INFO 5708 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:10:22.566  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[Blog(id=68, title=测试, content=测试, firstPicture=/images/bg.jpg, flag=原创, views=null, appreciation=false, shareStatement=false, commentabled=false, published=true, recommend=true, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=43,44, description=博客描述测试, type=Type(id=84, name=null, blogs=[]), user=null, tags=[], comments=[]), {}, org.apache.catalina.session.StandardSessionFacade@555ab3bd]}
2020-11-07 20:10:22.567 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:10:22.568 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 20:10:22.569 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:10:22.571 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:10:22.572 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:10:22.574 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:10:22.577 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:10:22.577 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 68(Long)
2020-11-07 20:10:22.578 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:10:22.581 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:10:22.582 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 测试(String), 测试(String), /images/bg.jpg(String), 博客描述测试(String), 原创(String), 1(Integer), false(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:01:06.399(Timestamp), 2020-11-07 20:10:22.58(Timestamp), 84(Long), 2(Long), 68(Long)
2020-11-07 20:10:22.584 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:10:22.584 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:10:22.584 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 68(Long)
2020-11-07 20:10:22.585 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:10:22.586 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:10:22.586 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 43(Long)
2020-11-07 20:10:22.587 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:10:22.588 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:10:22.588 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 44(Long)
2020-11-07 20:10:22.589 DEBUG 5708 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:10:22.591  INFO 5708 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:10:22.599  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:10:22.600 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:10:22.601 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:10:22.602 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:10:22.603 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:10:22.603 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:10:22.605 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:10:22.606 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:10:22.606 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:10:22.607 DEBUG 5708 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:10:22.608  INFO 5708 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:10:35.391  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/68/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[68, {}]}
2020-11-07 20:10:35.393 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:10:35.393 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:10:35.395 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:10:35.396 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:10:35.396 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:10:35.398 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:10:35.399 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:10:35.399 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 68(Long)
2020-11-07 20:10:35.401 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:10:35.402 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:10:35.403 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 68(Long)
2020-11-07 20:10:35.404 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:10:35.405 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:10:35.405 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:10:35.406 DEBUG 5708 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:10:35.407  INFO 5708 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:11:51.192  INFO 3336 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 3336 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 20:11:51.201 DEBUG 3336 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 20:11:51.202  INFO 3336 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 20:11:53.063  INFO 3336 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 20:11:53.076  INFO 3336 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 20:11:53.076  INFO 3336 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 20:11:53.211  INFO 3336 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 20:11:53.211  INFO 3336 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1895 ms
2020-11-07 20:11:54.086  INFO 3336 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 20:11:54.285  INFO 3336 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 20:11:54.581  INFO 3336 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 20:11:54.592  INFO 3336 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 4.47 seconds (JVM running for 5.569)
2020-11-07 20:11:59.996  INFO 3336 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 20:11:59.996  INFO 3336 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 20:12:00.013  INFO 3336 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2020-11-07 20:12:01.577  INFO 3336 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@484c8414, {}]}
2020-11-07 20:12:01.598  INFO 3336 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 20:12:01.813  INFO 3336 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 20:12:01.857 DEBUG 3336 --- [http-nio-8080-exec-2] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 20:12:01.894 DEBUG 3336 --- [http-nio-8080-exec-2] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 20:12:01.928 DEBUG 3336 --- [http-nio-8080-exec-2] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 20:12:01.942  INFO 3336 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 20:12:05.343  INFO 3336 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:12:05.403 DEBUG 3336 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: select count(0) from (select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published,b.commentabled,b.share_statement t.id typeid, t.name typename from t_blog b INNER JOIN t_type t ON b.type_id = t.id order by b.update_time desc) tmp_count
2020-11-07 20:12:05.404 DEBUG 3336 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:12:05.530 ERROR 3336 --- [http-nio-8080-exec-5] c.s.p.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs,Exception e : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.id typeid, t.name typename
        from t_blog b
        INNER JOIN t_type t
  ' at line 2
### The error may exist in file [D:\myblog-mybatis\target\classes\mapper\BlogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(0) from (select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published,b.commentabled,b.share_statement                t.id typeid, t.name typename         from t_blog b         INNER JOIN t_type t         ON b.type_id = t.id         order by b.update_time desc) tmp_count
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.id typeid, t.name typename
        from t_blog b
        INNER JOIN t_type t
  ' at line 2
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.id typeid, t.name typename
        from t_blog b
        INNER JOIN t_type t
  ' at line 2
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239) ~[spring-jdbc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72) ~[spring-jdbc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88) ~[mybatis-spring-2.0.5.jar:2.0.5]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440) ~[mybatis-spring-2.0.5.jar:2.0.5]
	at com.sun.proxy.$Proxy68.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.5.jar:2.0.5]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.5.jar:3.5.5]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.5.jar:3.5.5]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152) ~[mybatis-3.5.5.jar:3.5.5]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85) ~[mybatis-3.5.5.jar:3.5.5]
	at com.sun.proxy.$Proxy71.getAllBlog(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy72.getAllBlog(Unknown Source) ~[na:na]
	at com.simplem.personal_blog.service.impl.BlogServiceImpl.getAllBlog(BlogServiceImpl.java:56) ~[classes/:na]
	at com.simplem.personal_blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$bc7ca80b.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.simplem.personal_blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b595e8c0.getAllBlog(<generated>) ~[classes/:na]
	at com.simplem.personal_blog.controller.admin.BlogController.showBlog(BlogController.java:54) ~[classes/:na]
	at com.simplem.personal_blog.controller.admin.BlogController$$FastClassBySpringCGLIB$$2cae6882.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.simplem.personal_blog.controller.admin.BlogController$$EnhancerBySpringCGLIB$$9605c1d9.showBlog(<generated>) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626) [tomcat-embed-core-9.0.38.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733) [tomcat-embed-core-9.0.38.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.id typeid, t.name typename
        from t_blog b
        INNER JOIN t_type t
  ' at line 2
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.5.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.5.jar:3.5.5]
	at com.sun.proxy.$Proxy99.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.5.jar:3.5.5]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.5.jar:3.5.5]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.5.jar:3.5.5]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.5.jar:3.5.5]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.5.jar:3.5.5]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.5.jar:3.5.5]
	at com.github.pagehelper.util.ExecutorUtil.executeAutoCount(ExecutorUtil.java:138) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageInterceptor.count(PageInterceptor.java:150) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:97) ~[pagehelper-5.1.10.jar:na]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.5.jar:3.5.5]
	at com.sun.proxy.$Proxy97.query(Unknown Source) ~[na:na]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.5.jar:3.5.5]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.5.jar:3.5.5]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.5.jar:2.0.5]
	... 90 common frames omitted

2020-11-07 20:13:06.601  INFO 3796 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 3796 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 20:13:06.607 DEBUG 3796 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 20:13:06.608  INFO 3796 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 20:13:08.599  INFO 3796 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 20:13:08.612  INFO 3796 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 20:13:08.612  INFO 3796 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 20:13:08.747  INFO 3796 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 20:13:08.747  INFO 3796 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1986 ms
2020-11-07 20:13:09.612  INFO 3796 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 20:13:09.934  INFO 3796 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 20:13:10.986  INFO 3796 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 20:13:11.000  INFO 3796 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 5.4 seconds (JVM running for 6.687)
2020-11-07 20:13:15.684  INFO 3796 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 20:13:15.685  INFO 3796 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 20:13:15.706  INFO 3796 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 20 ms
2020-11-07 20:13:15.745 ERROR 3796 --- [http-nio-8080-exec-1] c.s.p.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/login,Exception e : {}

org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:213) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:422) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:110) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:59) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:396) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626) [tomcat-embed-core-9.0.38.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733) [tomcat-embed-core-9.0.38.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.38.jar:9.0.38]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]

2020-11-07 20:13:18.827  INFO 3796 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 20:13:18.883  INFO 3796 --- [http-nio-8080-exec-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 20:13:19.129  INFO 3796 --- [http-nio-8080-exec-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 20:13:19.188 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 20:13:19.218 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 20:13:19.252 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 20:13:19.257 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 20:13:19.259 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 20:13:19.265 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : <==      Total: 2
2020-11-07 20:13:19.271 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 20:13:19.271 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 20:13:19.275 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 2
2020-11-07 20:13:19.282 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 20:13:19.283 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 20:13:19.288 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 3
2020-11-07 20:13:19.289 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 20:13:19.289 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 20:13:19.290 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 0
2020-11-07 20:13:19.291  INFO 3796 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 20:13:19.945  INFO 3796 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:13:19.947 DEBUG 3796 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:13:19.948 DEBUG 3796 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:13:19.951 DEBUG 3796 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:13:19.952  INFO 3796 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:13:31.805  INFO 3796 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@4fd36c32, {}]}
2020-11-07 20:13:31.870 DEBUG 3796 --- [http-nio-8080-exec-10] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 20:13:31.871 DEBUG 3796 --- [http-nio-8080-exec-10] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 20:13:31.874 DEBUG 3796 --- [http-nio-8080-exec-10] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 20:13:31.880  INFO 3796 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 20:13:33.396  INFO 3796 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:13:33.439 DEBUG 3796 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:13:33.446 DEBUG 3796 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:13:33.457 DEBUG 3796 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:13:33.469 DEBUG 3796 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:13:33.470 DEBUG 3796 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:13:33.477 DEBUG 3796 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:13:33.479 DEBUG 3796 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:13:33.480 DEBUG 3796 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:13:33.484 DEBUG 3796 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:13:33.485  INFO 3796 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:13:35.800  INFO 3796 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/68/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[68, {}]}
2020-11-07 20:13:35.802 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:13:35.803 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:13:35.806 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:13:35.808 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:13:35.809 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:13:35.813 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:13:35.814 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:13:35.815 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 68(Long)
2020-11-07 20:13:35.819 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:13:35.821 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:13:35.822 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 68(Long)
2020-11-07 20:13:35.826 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:13:35.866 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:13:35.867 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:13:35.871 DEBUG 3796 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:13:35.871  INFO 3796 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:13:40.184  INFO 3796 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[Blog(id=68, title=测试, content=测试, firstPicture=/images/bg.jpg, flag=原创, views=null, appreciation=true, shareStatement=false, commentabled=false, published=true, recommend=true, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=43,44, description=博客描述测试, type=Type(id=84, name=null, blogs=[]), user=null, tags=[], comments=[]), {}, org.apache.catalina.session.StandardSessionFacade@4fd36c32]}
2020-11-07 20:13:40.187 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:13:40.190 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 20:13:40.197 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:13:40.207 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:13:40.208 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:13:40.209 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:13:40.214 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:13:40.215 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 68(Long)
2020-11-07 20:13:40.217 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:13:40.223 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:13:40.228 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 测试(String), 测试(String), /images/bg.jpg(String), 博客描述测试(String), 原创(String), 1(Integer), true(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:01:06.399(Timestamp), 2020-11-07 20:13:40.222(Timestamp), 84(Long), 2(Long), 68(Long)
2020-11-07 20:13:40.230 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:13:40.231 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:13:40.231 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 68(Long)
2020-11-07 20:13:40.232 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:13:40.233 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:13:40.234 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 43(Long)
2020-11-07 20:13:40.239 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:13:40.240 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:13:40.241 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 44(Long)
2020-11-07 20:13:40.243 DEBUG 3796 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:13:40.247  INFO 3796 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:13:40.291  INFO 3796 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:13:40.293 DEBUG 3796 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:13:40.293 DEBUG 3796 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:13:40.294 DEBUG 3796 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:13:40.300 DEBUG 3796 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:13:40.301 DEBUG 3796 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:13:40.306 DEBUG 3796 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:13:40.308 DEBUG 3796 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:13:40.308 DEBUG 3796 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:13:40.311 DEBUG 3796 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:13:40.311  INFO 3796 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:13:41.839  INFO 3796 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/68/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[68, {}]}
2020-11-07 20:13:41.842 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:13:41.844 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:13:41.850 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:13:41.854 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:13:41.855 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:13:41.861 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:13:41.863 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:13:41.865 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 68(Long)
2020-11-07 20:13:41.881 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:13:41.885 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:13:41.890 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 68(Long)
2020-11-07 20:13:41.896 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:13:41.900 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:13:41.902 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:13:41.905 DEBUG 3796 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:13:41.906  INFO 3796 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:14:01.299  INFO 3796 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[Blog(id=68, title=测试, content=测试, firstPicture=/images/bg.jpg, flag=原创, views=null, appreciation=true, shareStatement=false, commentabled=false, published=true, recommend=true, createTime=null, updateTime=null, typeId=null, userId=null, tagIds=43,44, description=博客描述测试, type=Type(id=84, name=null, blogs=[]), user=null, tags=[], comments=[]), {}, org.apache.catalina.session.StandardSessionFacade@4fd36c32]}
2020-11-07 20:14:01.307 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:14:01.309 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 20:14:01.313 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:14:01.315 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:14:01.316 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:14:01.318 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:14:01.322 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:14:01.323 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 68(Long)
2020-11-07 20:14:01.324 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:14:01.326 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:14:01.328 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 测试(String), 测试(String), /images/bg.jpg(String), 博客描述测试(String), 原创(String), 1(Integer), true(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:01:06.399(Timestamp), 2020-11-07 20:14:01.326(Timestamp), 84(Long), 2(Long), 68(Long)
2020-11-07 20:14:01.333 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:14:01.334 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:14:01.334 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 68(Long)
2020-11-07 20:14:01.335 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:14:01.336 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:14:01.336 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 43(Long)
2020-11-07 20:14:01.347 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:14:01.347 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:14:01.348 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 44(Long)
2020-11-07 20:14:01.349 DEBUG 3796 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:14:01.352  INFO 3796 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:14:01.360  INFO 3796 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:14:01.362 DEBUG 3796 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:14:01.363 DEBUG 3796 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:14:01.365 DEBUG 3796 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:14:01.366 DEBUG 3796 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:14:01.367 DEBUG 3796 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:14:01.370 DEBUG 3796 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:14:01.370 DEBUG 3796 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:14:01.371 DEBUG 3796 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:14:01.373 DEBUG 3796 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:14:01.373  INFO 3796 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:17:26.844  INFO 8012 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 8012 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 20:17:26.860 DEBUG 8012 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 20:17:26.864  INFO 8012 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 20:17:31.120  INFO 8012 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 20:17:31.136  INFO 8012 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 20:17:31.137  INFO 8012 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 20:17:31.275  INFO 8012 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 20:17:31.275  INFO 8012 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4169 ms
2020-11-07 20:17:32.327  INFO 8012 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 20:17:32.539  INFO 8012 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 20:17:32.821  INFO 8012 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 20:17:32.832  INFO 8012 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 7.269 seconds (JVM running for 8.233)
2020-11-07 20:17:56.161  INFO 8012 --- [http-nio-8080-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 20:17:56.162  INFO 8012 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 20:17:56.185  INFO 8012 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 22 ms
2020-11-07 20:17:58.332  INFO 8012 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@561ef9ad, {}]}
2020-11-07 20:17:58.349  INFO 8012 --- [http-nio-8080-exec-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 20:17:58.546  INFO 8012 --- [http-nio-8080-exec-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 20:17:58.599 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 20:17:58.633 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 20:17:58.673 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 20:17:58.685  INFO 8012 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 20:18:05.753  INFO 8012 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:18:05.886 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:18:05.886 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:18:05.890 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:18:05.897 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:18:05.898 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:18:05.904 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:18:05.906 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:18:05.907 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:18:05.912 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:18:05.912  INFO 8012 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:18:07.470  INFO 8012 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/68/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[68, {}]}
2020-11-07 20:18:07.472 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:18:07.474 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:18:07.480 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:18:07.488 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:18:07.489 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:18:07.493 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:18:07.495 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:18:07.495 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 68(Long)
2020-11-07 20:18:07.509 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:18:07.510 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:18:07.511 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 68(Long)
2020-11-07 20:18:07.518 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:18:07.556 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:18:07.556 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:18:07.558 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:18:07.559  INFO 8012 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:18:54.531  INFO 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@45fc1153, {}, org.apache.catalina.session.StandardSessionFacade@561ef9ad]}
2020-11-07 20:18:54.532 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:18:54.533 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 20:18:54.536 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:18:54.539 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:18:54.539 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:18:54.541 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:18:54.544 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:18:54.544 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 68(Long)
2020-11-07 20:18:54.547 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:18:54.550 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:18:54.554 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 测试(String), 测试(String), /images/bg.jpg(String), 博客描述测试(String), 原创(String), 1(Integer), true(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:01:06.399(Timestamp), 2020-11-07 20:18:54.549(Timestamp), 84(Long), 2(Long), 68(Long)
2020-11-07 20:18:54.555 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:18:54.556 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:18:54.557 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 68(Long)
2020-11-07 20:18:54.559 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:18:54.561 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:18:54.562 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 43(Long)
2020-11-07 20:18:54.563 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:18:54.564 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:18:54.566 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 44(Long)
2020-11-07 20:18:54.569 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:18:54.571  INFO 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:18:54.623  INFO 8012 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:18:54.631 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:18:54.631 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:18:54.633 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:18:54.637 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:18:54.638 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:18:54.645 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:18:54.647 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:18:54.648 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:18:54.651 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:18:54.652  INFO 8012 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:19:54.321  INFO 8012 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:19:54.337 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:19:54.337 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:19:54.340 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:19:54.343 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:19:54.344 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:19:54.347 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:19:54.348 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:19:54.348 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:19:54.351 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:19:54.351  INFO 8012 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:19:56.538  INFO 8012 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/68/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[68, {}]}
2020-11-07 20:19:56.542 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:19:56.544 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:19:56.553 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:19:56.563 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:19:56.566 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:19:56.578 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:19:56.587 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:19:56.588 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 68(Long)
2020-11-07 20:19:56.591 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:19:56.592 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:19:56.593 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 68(Long)
2020-11-07 20:19:56.595 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:19:56.597 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:19:56.597 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:19:56.599 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:19:56.599  INFO 8012 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:20:01.066  INFO 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@4d95e2db, {}, org.apache.catalina.session.StandardSessionFacade@561ef9ad]}
2020-11-07 20:20:01.069 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:20:01.070 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 20:20:01.071 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:20:01.075 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:20:01.076 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:20:01.078 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:20:01.084 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:20:01.085 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 68(Long)
2020-11-07 20:20:01.088 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:20:01.089 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:20:01.092 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 测试(String), 测试(String), /images/bg.jpg(String), 博客描述测试(String), 原创(String), 1(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:01:06.399(Timestamp), 2020-11-07 20:20:01.089(Timestamp), 84(Long), 2(Long), 68(Long)
2020-11-07 20:20:01.096 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:20:01.097 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:20:01.097 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 68(Long)
2020-11-07 20:20:01.099 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:20:01.101 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:20:01.102 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 43(Long)
2020-11-07 20:20:01.106 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:20:01.107 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:20:01.108 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 68(Long), 44(Long)
2020-11-07 20:20:01.109 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:20:01.112  INFO 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:20:01.121  INFO 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:20:01.123 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:20:01.124 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:20:01.126 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:20:01.128 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:20:01.129 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:20:01.132 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:20:01.133 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:20:01.133 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:20:01.138 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:20:01.138  INFO 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:20:08.372  INFO 8012 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/68/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[68, {}]}
2020-11-07 20:20:08.373 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:20:08.374 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:20:08.376 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:20:08.378 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:20:08.378 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:20:08.381 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:20:08.382 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:20:08.382 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 68(Long)
2020-11-07 20:20:08.386 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:20:08.388 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:20:08.388 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 68(Long)
2020-11-07 20:20:08.390 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:20:08.392 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:20:08.392 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 44(Long)
2020-11-07 20:20:08.394 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:20:08.395  INFO 8012 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:20:44.647  INFO 8012 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 20:20:44.656 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 20:20:44.657 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 20:20:44.659 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 20:20:44.660 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 20:20:44.660 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 20:20:44.662 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : <==      Total: 2
2020-11-07 20:20:44.663 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 20:20:44.664 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 20:20:44.666 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 2
2020-11-07 20:20:44.667 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 20:20:44.668 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 20:20:44.671 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 3
2020-11-07 20:20:44.672 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 20:20:44.673 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 20:20:44.675 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 1
2020-11-07 20:20:44.676  INFO 8012 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 20:20:45.550  INFO 8012 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:20:45.551 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:20:45.552 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:20:45.553 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:20:45.554  INFO 8012 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:21:10.916  INFO 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:21:10.928 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:21:10.930 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:21:10.934 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:21:10.939 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:21:10.940 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:21:10.947 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:21:10.948 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:21:10.949 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:21:10.954 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:21:10.955  INFO 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:21:12.645  INFO 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.toAddBlog', args参数：[{}]}
2020-11-07 20:21:12.647 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:21:12.647 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:21:12.649 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:21:12.650 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:21:12.651 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:21:12.653 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:21:12.654  INFO 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:21:35.301  INFO 8012 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@5a1c0a1e, {}, org.apache.catalina.session.StandardSessionFacade@561ef9ad]}
2020-11-07 20:21:35.302 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:21:35.303 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 71(Long)
2020-11-07 20:21:35.305 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:21:35.307 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:21:35.308 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long)
2020-11-07 20:21:35.309 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:21:35.313 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.save    : ==>  Preparing: insert into t_blog(id,title,content,first_picture,flag,views,description,appreciation,share_statement, commentabled,published,recommend,create_time,update_time,type_id,user_id) values (?,?, ?,?,?,?,?,?,?, ?,?,?,?,?,?,?);
2020-11-07 20:21:35.316 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.save    : ==> Parameters: null, 测试(String), 测试(String), /images/bg.jpg(String), 原创(String), 1(Integer), 测试22(String), false(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:21:35.312(Timestamp), 2020-11-07 20:21:35.312(Timestamp), 71(Long), 2(Long)
2020-11-07 20:21:35.318 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.save    : <==    Updates: 1
2020-11-07 20:21:35.324 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:21:35.325 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 69(Long), 43(Long)
2020-11-07 20:21:35.326 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:21:35.329  INFO 8012 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:21:35.340  INFO 8012 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=保存成功！}, 1]}
2020-11-07 20:21:35.342 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:21:35.342 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:21:35.343 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:21:35.345 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:21:35.345 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:21:35.353 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 20:21:35.354 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:21:35.355 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:21:35.356 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:21:35.357  INFO 8012 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:21:51.389  INFO 8012 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 20:21:51.401 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 20:21:51.402 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 20:21:51.404 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 20:21:51.405 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 20:21:51.406 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 20:21:51.409 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findAll             : <==      Total: 3
2020-11-07 20:21:51.410 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 20:21:51.411 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 20:21:51.412 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 3
2020-11-07 20:21:51.414 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 20:21:51.414 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 20:21:51.416 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 4
2020-11-07 20:21:51.417 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 20:21:51.417 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 20:21:51.419 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 2
2020-11-07 20:21:51.419  INFO 8012 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 20:21:52.255  INFO 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:21:52.257 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:21:52.257 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:21:52.259 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 20:21:52.259  INFO 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:22:02.562  INFO 8012 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/67', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[67, {}]}
2020-11-07 20:22:02.568 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:22:02.569 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 67(Long)
2020-11-07 20:22:02.573 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:22:02.665 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:22:02.667 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 67(Long)
2020-11-07 20:22:02.670 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:22:02.672 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:22:02.672 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 20:22:02.674 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 20:22:02.675 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:22:02.675 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 20:22:02.677 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:22:02.677  INFO 8012 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:22:03.232  INFO 8012 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:22:03.233 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:22:03.233 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:22:03.234 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 20:22:03.234  INFO 8012 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:22:15.462  INFO 8012 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/69/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[69, {}]}
2020-11-07 20:22:15.471 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:22:15.474 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:22:15.480 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:22:15.481 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:22:15.482 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:22:15.486 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:22:15.488 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:22:15.489 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 69(Long)
2020-11-07 20:22:15.492 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:22:15.493 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:22:15.494 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 69(Long)
2020-11-07 20:22:15.496 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 20:22:15.497 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:22:15.498 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long)
2020-11-07 20:22:15.500 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:22:15.500  INFO 8012 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:22:23.943  INFO 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@744cb1e8, {}, org.apache.catalina.session.StandardSessionFacade@561ef9ad]}
2020-11-07 20:22:23.945 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:22:23.946 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 71(Long)
2020-11-07 20:22:23.949 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:22:23.954 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:22:23.954 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long)
2020-11-07 20:22:23.957 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:22:23.962 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:22:23.962 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 69(Long)
2020-11-07 20:22:23.965 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:22:23.969 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:22:23.971 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 测试(String), 测试更新测试(String), /images/bg.jpg(String), 测试22(String), 原创(String), 1(Integer), true(Boolean), true(Boolean), true(Boolean), false(Boolean), true(Boolean), 2020-11-07 20:21:35.312(Timestamp), 2020-11-07 20:22:23.969(Timestamp), 71(Long), 2(Long), 69(Long)
2020-11-07 20:22:23.975 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:22:23.976 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:22:23.976 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 69(Long)
2020-11-07 20:22:23.977 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 1
2020-11-07 20:22:23.978 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:22:23.979 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 69(Long), 43(Long)
2020-11-07 20:22:23.981 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:22:23.984  INFO 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:22:23.992  INFO 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:22:23.994 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:22:23.994 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:22:23.995 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:22:23.997 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:22:23.998 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:22:24.000 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 20:22:24.001 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:22:24.001 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:22:24.003 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:22:24.004  INFO 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:22:46.259  INFO 8012 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/67', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[67, {}]}
2020-11-07 20:22:46.260 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:22:46.261 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 67(Long)
2020-11-07 20:22:46.264 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:22:46.275 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:22:46.276 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 67(Long)
2020-11-07 20:22:46.277 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:22:46.279 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:22:46.280 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 20:22:46.280 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 20:22:46.281 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:22:46.281 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 20:22:46.282 DEBUG 8012 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:22:46.283  INFO 8012 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:22:46.842  INFO 8012 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:22:46.843 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:22:46.843 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:22:46.844 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:22:46.844  INFO 8012 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:23:43.789  INFO 8012 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/67/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[67, {}]}
2020-11-07 20:23:43.797 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:23:43.798 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:23:43.803 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:23:43.805 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:23:43.805 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:23:43.809 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:23:43.811 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:23:43.811 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 67(Long)
2020-11-07 20:23:43.816 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:23:43.816 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:23:43.818 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 20:23:43.820 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 20:23:43.821 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:23:43.822 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 20:23:43.823 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:23:43.824  INFO 8012 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:24:20.536  INFO 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@4108eed2, {}, org.apache.catalina.session.StandardSessionFacade@561ef9ad]}
2020-11-07 20:24:20.539 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:24:20.539 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 81(Long)
2020-11-07 20:24:20.541 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:24:20.543 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:24:20.544 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 20:24:20.545 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:24:20.548 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:24:20.548 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 67(Long)
2020-11-07 20:24:20.551 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:24:20.553 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:24:20.576 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 面向对象的设计原则(String), # 面向对象程序设计原则

## 一、 单一职责原则（SRP）

> 单一职责面向对象设计原则强调：一个类或模块应仅有一个引起其变化的因素（职责）。

- 通俗地讲，一个类或模块应只承担一个（或一种类型的）业务职责

- 当类承担的业务职责较多时，该类中任何职责需求的变化都会引起静态实现的变化，和导致其代码不稳定

- 无论是向目标类添加新的代码，或修改已有的代码，都是对原有代码设计的破坏，导致程序开发者花费巨大成本进行代码修复

![image-20200513100330978.png][1]

图2.1 多个业务行为的Patron类

​		例如，COS系统中客户角色具有的业务行为有：登录系统，支付订单，查看菜单等，如图2.1。如果将所有的业务行为实现在客户类Patron中，当这些业务行为中的任何一个需求发生变化时，如支付或登录行为需求发生变化，都需要修改Patron类。即，影响Patron类变化的因素多于1个时，会导致Patron类的代码变得不稳定。

![image-20200513100701169.png][2]

图2.1中Patron类的代码框架

​		按照单一职责原则设计Patron类时，可以将登录系统、支付订单等业务职责分别单独地封装在其他类中，从而减少Patron类的业务职责。如图2.2，将登录行为封装在Employee中，支付订单行为封装在PayOrder中。

![image-20200513100830202.png][3]

图2.2 遵守“单一职责”原则设计的Patron类

> 此时，Patron继承Employee和依赖PayOrder，其类的代码框架如下：

![image-20200513100920607.png][4]

- 符合“单一职责”设计原则的图2.2的设计方案减少了影响Patron变化的因素，使其代码更加稳定。

- 工程师在使用“单一职责”原则设计类时，也会产生如下问题：
  1. 设计类数量的增加。如果一个庞大业务系统的所有类按单一职责设计，则有可能导致设计类数量的“爆炸（Explosion）”。此外，设计类数量的增加也会使设计方案复杂度增大。
  2. 类封装特性的破坏。由于数据域封装在目标（实体）类中，如果从目标类中将含有数据域访问逻辑的业务行为分离出去，则势必造成外部代码访问目标类私有域的问题，而最终破坏目标类的封装特性。
  3. 其他问题。完全教条式地运用“单一职责”设计类时，也可能会降低代码的内聚或增加代码的耦合。同时，类职责没有明确的定义，可以是具体业务功能或行为，也可以是抽象逻辑；因此，其边界是模糊的，难以清晰地划定单一职责。

## 二、“开/闭”原则（OCP）

> “开/闭”原则要求：类或模块的代码“对扩展是开放的”（Open for Extension）、“对修改是关闭的”（Close for Modification）。

- 当软件需求发生变化时，目标类或模块的代码可以通过代码扩展，很容易地实现新的需求；而不是修改已有类或模块的代码。

- 因为，软件代码业务逻辑充满了耦合，当一处代码修改时，将会引发已有代码逻辑变化，产生逻辑错误或制造出新的代码缺陷。

![image-20200513101128901.png][5]

图2.3 PayOrder类可扩展性设计

​		COS系统需求提到的订单支付方式是工资抵扣或现金；在图2.2中，支付订单行为的实现封装在PayOrder类中。如果只考虑这两种支付行为，工程师一般会在PayOrder类中使用分支结构直接实现支付业务逻辑。这种代码结构存在的问题有：

1. 如果COS支付需求发生变化，则必须修改PayOrder已有的分支结构才能满足新需求；
2. 由于Patron依赖于PayOrder，则PayOrder代码的变化会直接影响到依赖者Patron。要解决上面的问题，需要重新设计PayOrder类结构，具体方案见图2.3。



​     在图2.3中，将PayOrder泛化为一个接口或抽象类，其定义抽象的支付行为check()；现金支付订单方式的业务逻辑由子类PayByCash实现，工资抵扣支付订单方式的业务逻辑由子类PayByPRDS实现。代码示例如下。

![image-20200513101255795.png][6]

PayOrder类结构

![image-20200513101328094.png][7]

PayByCash类结构

![image-20200513101400533.png][8]

PayByPRDS类结构
​		那么，在图2.3的类设计方案中，当支付行为需求发生变化时，可以定义PayOrder新的子类实现新需求，而不需要修改已有的类（或接口）PayOrder、PayByCash、PayByPRDS等。

​		例如，COS系统升级时，新需求要添加电子银行支付订单方式。那么，工程师可以直接定义PayOrder的子类PayByEBank来实现该需求，如图2.4。

![image-20200513101440296.png][9]

图2.4 添加电子银行支付后的PayOrder类结构设计

​		在图2.4中，PayByEBank子类的添加并不会影响PayByCash、PayByPRDS等已有的类（或接口），且实现了新支付方式的扩展。

![image-20200513101526173.png][10]

PayByBank类结构

> 那么，PayByEBank类的添加对Patron（客户）类是否会产生影响？

- 这种依赖关系不受具体实现类型的影响。因此，PayByEBank类的添加也没有影响到客户类Patron。

- 从可扩展性和代码稳定性角度看，图2.3中PayOrder类的设计方案要优于图2.2，符合“开/闭”原则的设计思想。

- 实施“开/闭”原则设计代码时，工程师可以使用抽象、继承、组合等面向对象技术获得代码灵活性、可重用性、可扩展性等方面的好处。但也应看到，“开/闭”原则对代码还有以下的影响：

1. 代码可读性降低。由于使用了抽象，代码设计逻辑与业务需求逻辑相比，会产生变化，抽象代码层隐藏了具体业务细节，大大降低了源码的可读性。
2. 程序测试成本增加。同样地，使用抽象设计会使测试人员无法静态确定具体对象的引用类型，必须等到程序运行时才能确定目标对象的具体类型。因此，代码缺陷可能会滞后到程序运行后才被发现；又或者，程序出现错误后，只有通过动态调试的方法才能有效地定位缺陷。最终，它们都会导致测试成本的增加。



## 三、接口隔离原则（ISP）

> 接口隔离原则指出：如果某个接口的行为不是内聚的，就应该按照业务分组，并将分组后的业务行为通过隔离的接口单独定义。

- 接口的行为要向调用它的客户端提供业务服务；对于不同的业务分组，调用它的客户端是相互独立的；

- 因此，接口提供的服务（分组）也应该是相互独立的。



![image-20200513101804644.png][11]

图2.5 打印配送单和发送配送指令行为定义在IDeliver接口中

​		例如，在COS系统需求中，餐厅员工（Cafeteria Staff）和配餐员（Meal Deliverer）都有打印配送单（Print Delivery Instructions）的行为；而且，餐厅员工还有发送配送指令（Issue Delivery Request）的行为。如果将打印配送单行为和发送配送指令行为强行定义在接口IDeliver中，如图2.5，将会产生如下问题：

1. 子类（或实现类）可能会继承（或实现）冗余行为。配餐员MealDeliverer作为IDeliver的实现类，需要实现issueDeliveryQuest()方法；然而，在COS的需求中，配餐员不具有该行为。
2. 子类（或实现类）的客户端受到不相干的业务行为干扰。假设餐厅员工CafeteriaStaff想要改变issueDeliveryQuest()的行为定义，比如修改方法名称；那么，则要修改接口IDeliver。而IDeliver接口的变化会导致实现类MealDeliverer变化，最终影响到调用MealDeliverer的所有客户端。

​		要解决上面的问题，工程师可以按照接口隔离原则提供的建议将接口中的方法进行业务分组。由于打印打印配送单和发送配送指令是不同的业务行为，两者之间的内聚度很弱，分离它们可以降低相互影响。

​		    因此，将图2.5中的IDeliver接口行为printDeliveryInstruction()和issueDeliveryQuest()分别定义在的接口IPrintDelivery和IIssueDelivery中，用于实现行为的隔离；如图2.6所示。

![image-20200513101923338.png][12]

图2.6 使用“接口隔离”原则设计打印配送单和发送配送指令行为

​		IIssueDelivery接口定义了issueDeliveryQuest()行为，IPrintDelivery接口定义了printDeliveryInstruction()行为，彼此独立，互不影响。CafeteriaStaff类实现IIssueDelivery、IPrintDelivery接口，MealDeliverer实现IPrintDelivery接口。

​		可以看到，MealDeliverer只实现了自身需要的业务行为printDeliveryInstruction()，不用实现冗余行为issueDeliveryQuest()，保证了代码逻辑与需求的一致性。此外，IIssueDelivery接口定义的变化只对其实现类CafeteriaStaff产生影响，而不会对MealDeliverer造成任何影响。

​		图2.6中类图代码框架如下。

![image-20200513102011752.png][13]

IIssueDelivery接口

![image-20200513102023766.png][14]

IPrintDelivery接口

  在Java编程语言中，IPrintDelivery接口可以定义printDeliveryInstruction()行为的默认实现，CafeteriaStaff、MealDeliverer根据需求选择重写或使用接口默认。以CafeteriaStaff为例，代码结构如下。

![image-20200513102057438.png][15]

CafeteriaStaff实现类

## 四、依赖倒置原则（DIP）

依赖倒置面向对象设计原则建议：

1. 高层模块不应依赖于低层模块，二者都应该依赖于抽象；
2. 抽象不应依赖于细节，细节应依赖于抽象。



在分层的软件架构中，业务逻辑实现的模块被称为高层模块，数据或服务支持模块是底层模块，如图2.7

![image-20200513103158318.png][16]

图2.7 高层模块与低层模块的依赖关系
​		图2.7中，业务层依赖于数据或服务层；即，高层模块依赖低层模块。当低层模块发生变化时，高层模块则不可避免地受到影响。特别地，当目标系统分层较多时，最低层模块代码的变化，会影响到所有的（含有直接依赖或间接依赖）高层模块。

​		为了减少依赖或依赖传递对高层模块的影响，要使高层模块依赖于稳定的抽象。那么，将低层模块向高层模块提供服务定义为抽象，高层模块依赖于抽象；抽象是稳定的，抽象具体实现的变化不会影响到高层模块，如图2.8。

![image-20200513103249839.png][17]

图2.8 按照“依赖倒置”原则设计模块依赖关系示意

​		相较于图2.7中的高层模块直接依赖于低层模块实现，图2.8中的高层模块依赖于底层模块的抽象；低层模块实现也同时依赖于抽象的定义（接口实现或类继承是一种强约束依赖关系，实现类或子类均依赖接口或父类的方法定义）。当低层实现变化时，由于低层模块的抽象隔离了变化，高层模块感知不到这种变化，也就不会受到该变化的影响。

​		举个例子：在COS系统中，客户（Patron）支付订单的业务依赖于支付类（PayOrder）；如果PayOrder是支付服务的实现类，则形成了高层代码Patron直接依赖于低层实现PayOrder的逻辑关系，如图2.9。

![image-20200513103325290.png][18]

图2.9 Patron直接依赖于PayOrder实现

​		由于PayOrder是支付服务的实现，当支付服务需求发生变化时，则需要修改PayOrder已有代码，或重新定义实现新需求的子类。无论哪种方式，客户端Patron都会感知到支付服务的变化，并受到影响。假设，图2.9中的PayOrder类的check()方法实现了工资抵扣支付订单行为。那么，要实现电子银行支付订单行为的新需求，则解决方案会是以下两种中的一个：

1. 修改PayOrder类，添加电子银行支付订单服务行为；修改客户端Patron支付逻辑，使得Patron可以使用PayOrder新添加的电子银行支付行为；
2. 继承PayOrder，添加电子银行支付订单行为子类；修改Patron支付逻辑，使得Patron可以依赖新添加的电子银行支付行为子类。

以上两种解决方案都无法避免对客户端Patron代码的修改。即，低层模块实现的变化直接影响了高层模块。

​		按照“依赖倒置”原则的建议重新设计Patron与PayOrder之间的依赖关系，将低层模块提供的服务进行抽象，封装为抽象类或接口；使高层模块依赖于低层模块的抽象类（或接口）；低层模块的实现类继承（或实现）抽象类（或接口）；如图2.10所示。

![image-20200513103419518.png][19]

图2.10按照“依赖倒置”原则重新设计Patron与PayOrder之间的依赖关系

>  图2.10的类图结构与图2.3、图2.4的类图结构一致，示例代码可参见2.2节。

​      由于将图2.10中的PayOrder设计为抽象类（或接口），Patron对PayOrder的依赖关系就变得稳定了。子类PayByPRDS实现了工资抵扣支付订单服务，PayByEBank实现了电子银行支付订单服务；实现类的变化不会影响到客户端Patron。因此，图2.10的设计类图不仅能保证代码稳定性，也具有良好的可扩展性。



“依赖倒置”原则提供的代码设计建议可以很好地实现代码解耦。“依赖倒置”原则所体现的设计思维，在不同材料中有不同的名称，如“好莱坞”原则（Hollywood Principle）、回调机制（Callback Mechnism）等。

在使用依赖倒置原则时，工程师需要注意以下问题：

1. **增加了代码复杂度**。依赖倒置的设计方式无疑会增加接口或抽象类的数量，使得软件代码结构变得抽象或复杂。
2. **更适合应对需求变化**。由于将依赖关系指向抽象，抽象能够隔离调用者与被调用者的实现，使得二者的变化不会相互影响，在一定程度上保证了代码稳定性。依赖倒置的代码能够通过稳定的依赖关系将新需求加入，或将原需求变化所带来的影响降低；因此，其更适合应对有需求变化的代码设计。

## 五、Liskov替换原则（LSP）

> 对于静态类型的面对象编程语言，如Java、C#，继承是多态技术实现的主要方式。通过继承，子类可以重写父类定义的方法，使得父类（或接口）定义的对象引用可以指向不同的子类实例，形成同一个行为的调用表现出多态特征。
>
> Liskov替换原则（有的资料翻译成“里氏”替换原则）建议：子类型对象必须能够完全替换掉它们的父类型对象，而不需要改变父类型的任何属性。
>
> Liskov替换原则是美国计算机科学家Barbara Liskov（女，曾于2008年获得图灵奖）于1987年在期刊ACM SIGPLAN Notices发表的标题为“Data Abstraction and Hierarchy”的文章中所提出的形式化原则。其原文中的表述为：
>
> 对于类型S的对象o1，存在类型T的对象o2，如果能使T编写的程序P的行为在o1替换o2后保持不变，则S是T的子类型（If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T,the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T）。

​		Liskov替换原则提出了如何规范地使用继承。一旦违反该规则，则有可能会导致程序表达错误。例如，在COS系统中，工程师需要实现统计图表的绘制功能，图表组件类型有：柱状图（Bar）、线状图（Line）等。工程师设计了图表组件父类ChartComponent，并定义组件绘制行为draw()；子类Bar继承ChartComponent和实现绘制柱状图行为，Line继承ChartComponent和实现绘制线状图行为；柱状图Bar额外定义了方法fill()，用于图形填充行为的实现；使用组件对象进行图表绘制的客户类是ChartDrawer；如图2.11。

![image-20200513103700208.png][20]

图2.11 COS图表绘制类结构

​		由于不同的图表组件绘制方式不同；如，绘制柱状图不仅绘制柱形，还需对图形进行填充，而绘制线状图则不需要填充；ChartDrawer代码结构可以是：

![image-20200513103722228.png][21]

ChartComponent抽象类代码结构如下：

![image-20200513103733026.png][22]

  Bar和Line作为ChartComponent的子类，分别实现柱状图、线状图绘制，以Bar为例，其代码结构如下：

![image-20200513103741842.png][23]

​		从上面的代码中可以看到，ChartDrawer在绘制不同类型图表组件时，需要知道组件的子类型，然后才能对该组件进行绘制操作；这违反了Liskov替换原则。因为，Liskov替换原则建议：对于客户端程序ChartDrawer来说，drawChart()绘制行为使用的父类ChartComponent定义的对象是可以被其子类Bar或Line定义的对象完全替换，而不需要提供额外的子类信息。

- 违反Liskov替换原则的代码具有以下缺陷：
  1. 可扩展性差。如果需要在图2.11中添加新的图表类型，比如饼状图Pie，则必须修改ChartDrawer类代码，才能完成组件子类型的扩展。而修改已有代码将会导致一系列后果，详细见本章2.2“开/闭”原则。
  2. 引入程序逻辑错误。ChartDrawer类的行为drawChart()绘制的是ChartComponent类型的图表组件；增加的新组件仍然是ChartComponent类型，但是drawChart()原有代码却无法完成新组件对象的绘制，其逻辑是错误的。

​		仔细观察上面的代码，学习者会发现违反Liskov替换原则的主要原因是：Bar子类在实现父类ChartComponent的draw()行为时，更改了原有的业务定义。父类ChartComponent定义的抽象行为draw()是统计图表组件的完整绘制逻辑，而Bar子类将统计图表组件的绘制分成了两个行为逻辑：绘制图形draw()和填充图形fill()。即，Bar子类更改了父类ChartComponent定义的绘制行为逻辑。

​		要解决Bar子类违反Liskov替换原则的问题，只需要保证该子类业务行为逻辑与父类保持一致即可。也就是，Bar子类的绘制行为draw()应包含图形填充行为fill()的逻辑。同样是图2.11类结构，Bar子类绘制行为的实现代码可以更改为：

![image-20200513103902635.png][24]

那么，客户类ChartDrawer的代码结构则修改为：

![image-20200513103910045.png][25]

​		ChartComponent所有子类draw()行为的业务逻辑都是实现目标组件完整绘制，而不是只绘制组件的一部分。因此，客户类ChartDrawer在绘制目标组件时，就不需要关心或了解具体的组件子类型。修改后的代码没有违反Liskov替换原则。

​		此外，在图2.11中添加新的图表类型饼状图Pie，也不会对ChartDrawer带来任何影响。当ChartDrawer类的drawChart()行为收到的方法参数为Pie子类型的实例时，也能正确地实现绘制逻辑。

​		虽然遵循Liskov替换原则设计的代码方案能够给代码稳定性、可扩展性等带来好处；工程师在实际使用该规则时，仍需注意：

1. 在继承关系中，父类与子类之间是强约束关联。即，子类只能实现（或继承）父类的定义（域或行为），而不能更改；父类定义（域或行为）的变化会迫使所有子类跟随变化。
2. Liskov替换原则限制了子类重写父类行为的逻辑，降低了代码灵活性。

## 六、总结

- 任何一个面向对象设计原则都是从局部提高代码质量，而不是从软件架构的全局

- 独立运用任何一个面向对象设计原则，都无法保证整体代码方案的优化

- 本质上，软件设计活动是不同技术方案分析、比较和折中的过程


  [1]: https://yxlyz.net/usr/uploads/2020/05/3048098829.png
  [2]: https://yxlyz.net/usr/uploads/2020/05/2817496414.png
  [3]: https://yxlyz.net/usr/uploads/2020/05/1437168169.png
  [4]: https://yxlyz.net/usr/uploads/2020/05/832761637.png
  [5]: https://yxlyz.net/usr/uploads/2020/05/2041833336.png
  [6]: https://yxlyz.net/usr/uploads/2020/05/2359302113.png
  [7]: https://yxlyz.net/usr/uploads/2020/05/3505797948.png
  [8]: https://yxlyz.net/usr/uploads/2020/05/3001155084.png
  [9]: https://yxlyz.net/usr/uploads/2020/05/183990686.png
  [10]: https://yxlyz.net/usr/uploads/2020/05/2942822626.png
  [11]: https://yxlyz.net/usr/uploads/2020/05/4270639770.png
  [12]: https://yxlyz.net/usr/uploads/2020/05/2691814274.png
  [13]: https://yxlyz.net/usr/uploads/2020/05/1255504503.png
  [14]: https://yxlyz.net/usr/uploads/2020/05/1965045858.png
  [15]: https://yxlyz.net/usr/uploads/2020/05/3709593788.png
  [16]: https://yxlyz.net/usr/uploads/2020/05/3033065838.png
  [17]: https://yxlyz.net/usr/uploads/2020/05/3767007406.png
  [18]: https://yxlyz.net/usr/uploads/2020/05/3042852873.png
  [19]: https://yxlyz.net/usr/uploads/2020/05/2903354407.png
  [20]: https://yxlyz.net/usr/uploads/2020/05/2877280606.png
  [21]: https://yxlyz.net/usr/uploads/2020/05/2000988877.png
  [22]: https://yxlyz.net/usr/uploads/2020/05/3057530575.png
  [23]: https://yxlyz.net/usr/uploads/2020/05/2961699169.png
  [24]: https://yxlyz.net/usr/uploads/2020/05/1976910393.png
  [25]: https://yxlyz.net/usr/uploads/2020/05/2932182748.png
(String), /images/bg.jpg(String), 总结了面向对象设计的几大原则，单一职责原则、“开/闭”原则、接口隔离原则、依赖倒置原则、Liskov替换原则(String), 原创(String), 3(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 19:52:14.939(Timestamp), 2020-11-07 20:24:20.552(Timestamp), 81(Long), 2(Long), 67(Long)
2020-11-07 20:24:20.584 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:24:20.585 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:24:20.585 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 67(Long)
2020-11-07 20:24:20.586 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 1
2020-11-07 20:24:20.587 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:24:20.587 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 67(Long), 54(Long)
2020-11-07 20:24:20.615 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:24:20.629  INFO 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:24:20.634  INFO 8012 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:24:20.636 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:24:20.636 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:24:20.637 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:24:20.638 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:24:20.638 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:24:20.641 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 20:24:20.641 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:24:20.642 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:24:20.643 DEBUG 8012 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:24:20.643  INFO 8012 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:24:27.407  INFO 8012 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/67', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[67, {}]}
2020-11-07 20:24:27.419 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:24:27.421 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 67(Long)
2020-11-07 20:24:27.433 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:24:27.463 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:24:27.464 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 67(Long)
2020-11-07 20:24:27.466 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:24:27.468 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:24:27.469 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 20:24:27.470 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 20:24:27.471 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:24:27.471 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 20:24:27.472 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:24:27.473  INFO 8012 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:24:28.011  INFO 8012 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:24:28.011 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:24:28.011 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:24:28.012 DEBUG 8012 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:24:28.013  INFO 8012 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:24:28.155  INFO 8012 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/67', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[67, {}]}
2020-11-07 20:24:28.158 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 20:24:28.158 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 67(Long)
2020-11-07 20:24:28.163 DEBUG 8012 --- [http-nio-8080-exec-1] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 20:24:28.163  INFO 8012 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 20:24:53.413  INFO 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/69/delete', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.delete', args参数：[69, {}]}
2020-11-07 20:24:53.417 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:24:53.417 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 69(Long)
2020-11-07 20:24:53.422 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 1
2020-11-07 20:24:53.424 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.delete  : ==>  Preparing: delete from t_blog where id =?
2020-11-07 20:24:53.424 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.delete  : ==> Parameters: 69(Long)
2020-11-07 20:24:53.427 DEBUG 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.delete  : <==    Updates: 1
2020-11-07 20:24:53.427  INFO 8012 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:24:53.443  INFO 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=删除成功！}, 1]}
2020-11-07 20:24:53.445 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:24:53.446 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:24:53.447 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:24:53.449 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:24:53.450 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:24:53.452 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:24:53.453 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:24:53.453 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:24:53.454 DEBUG 8012 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:24:53.455  INFO 8012 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:24:57.218  INFO 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/68/delete', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.delete', args参数：[68, {}]}
2020-11-07 20:24:57.220 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:24:57.220 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 68(Long)
2020-11-07 20:24:57.242 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:24:57.243 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.delete  : ==>  Preparing: delete from t_blog where id =?
2020-11-07 20:24:57.243 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.delete  : ==> Parameters: 68(Long)
2020-11-07 20:24:57.263 DEBUG 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.delete  : <==    Updates: 1
2020-11-07 20:24:57.263  INFO 8012 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:24:57.270  INFO 8012 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=删除成功！}, 1]}
2020-11-07 20:24:57.271 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:24:57.271 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:24:57.272 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:24:57.273 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:24:57.273 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:24:57.274 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 20:24:57.275 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:24:57.275 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:24:57.277 DEBUG 8012 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:24:57.278  INFO 8012 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:25:01.629  INFO 8012 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 20:25:01.638 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 20:25:01.638 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 20:25:01.640 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 20:25:01.641 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 20:25:01.641 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 20:25:01.645 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : <==      Total: 1
2020-11-07 20:25:01.646 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 20:25:01.647 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 20:25:01.648 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 1
2020-11-07 20:25:01.649 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 20:25:01.649 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 20:25:01.651 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 1
2020-11-07 20:25:01.652 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 20:25:01.652 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 20:25:01.655 DEBUG 8012 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 1
2020-11-07 20:25:01.656  INFO 8012 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 20:25:02.150  INFO 8012 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:25:02.151 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:25:02.151 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:25:02.152 DEBUG 8012 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 1
2020-11-07 20:25:02.152  INFO 8012 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:31:44.888  INFO 9972 --- [main] c.s.p.PersonalBlogApplication            : Starting PersonalBlogApplication on m with PID 9972 (D:\myblog-mybatis\target\classes started by 　　　 in D:\myblog-mybatis)
2020-11-07 20:31:44.916 DEBUG 9972 --- [main] c.s.p.PersonalBlogApplication            : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-07 20:31:44.918  INFO 9972 --- [main] c.s.p.PersonalBlogApplication            : No active profile set, falling back to default profiles: default
2020-11-07 20:31:46.682  INFO 9972 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-07 20:31:46.691  INFO 9972 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-07 20:31:46.691  INFO 9972 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 20:31:46.795  INFO 9972 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-07 20:31:46.795  INFO 9972 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1777 ms
2020-11-07 20:31:47.654  INFO 9972 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 20:31:47.874  INFO 9972 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-07 20:31:48.168  INFO 9972 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-07 20:31:48.179  INFO 9972 --- [main] c.s.p.PersonalBlogApplication            : Started PersonalBlogApplication in 4.056 seconds (JVM running for 5.138)
2020-11-07 20:31:51.793  INFO 9972 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 20:31:51.794  INFO 9972 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-07 20:31:51.819  INFO 9972 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 25 ms
2020-11-07 20:31:54.084  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@5b97e2f2, {}]}
2020-11-07 20:31:54.114  INFO 9972 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-07 20:31:54.323  INFO 9972 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-07 20:31:54.372 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 20:31:54.441 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 20:31:54.489 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 20:31:54.505  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 20:31:57.835  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:31:57.942 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:31:57.943 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:31:57.945 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:31:57.955 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:31:57.956 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:31:57.962 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 20:31:57.969 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:31:57.970 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:31:57.976 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:31:57.977  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:31:59.923  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/67/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[67, {}]}
2020-11-07 20:31:59.926 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:31:59.928 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:31:59.939 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:31:59.950 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:31:59.950 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:31:59.953 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:31:59.955 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:31:59.956 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 67(Long)
2020-11-07 20:31:59.964 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:31:59.965 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:31:59.968 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 20:31:59.970 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 20:32:00.009 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:32:00.010 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 20:32:00.011 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:32:00.012  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:33:38.629  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@5b97e2f2, {}]}
2020-11-07 20:33:38.631 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 20:33:38.631 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 20:33:38.634 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 20:33:38.636  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 20:33:40.210  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:33:40.222 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:33:40.224 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:33:40.227 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:33:40.236 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:33:40.237 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:33:40.251 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 1
2020-11-07 20:33:40.255 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:33:40.258 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:33:40.269 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:33:40.270  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:33:42.080  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.toAddBlog', args参数：[{}]}
2020-11-07 20:33:42.089 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:33:42.091 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:33:42.095 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:33:42.098 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:33:42.098 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:33:42.105 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:33:42.106  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:47:06.446  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@39c88a4b, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 20:47:06.558 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:47:06.589 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 20:47:06.626 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:47:06.660 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:47:06.662 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long)
2020-11-07 20:47:06.668 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:47:06.682 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.dao.BlogMapper.save    : ==>  Preparing: insert into t_blog(id,title,content,first_picture,flag,views,description,appreciation,share_statement, commentabled,published,recommend,create_time,update_time,type_id,user_id) values (?,?, ?,?,?,?,?,?,?, ?,?,?,?,?,?,?);
2020-11-07 20:47:06.717 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.dao.BlogMapper.save    : ==> Parameters: null, LeetCode#941 有效的山脉数组(String), 

```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```

(String), /images/Firewatch2.jpg(String), 原创(String), 1(Integer), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 20:47:06.675(Timestamp), 84(Long), 2(Long)
2020-11-07 20:47:06.723 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.dao.BlogMapper.save    : <==    Updates: 1
2020-11-07 20:47:06.750 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:47:06.751 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 20:47:06.753 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:47:06.764  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:47:07.155  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=保存成功！}, 1]}
2020-11-07 20:47:07.184 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:47:07.186 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:47:07.190 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:47:07.200 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:47:07.201 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:47:07.209 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:47:07.213 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:47:07.215 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:47:07.220 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 14
2020-11-07 20:47:07.221  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:47:18.153  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 20:47:18.199 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 20:47:18.201 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 20:47:18.206 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 20:47:18.208 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 20:47:18.209 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 20:47:18.211 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 20:47:18.212  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 20:47:19.654  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 20:47:19.674 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 20:47:19.674 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 20:47:19.676 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 20:47:19.678 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 20:47:19.679 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 20:47:19.681 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 20:47:19.681  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 20:47:21.435  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.toAddType', args参数：[{}]}
2020-11-07 20:47:21.437  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/type-input
2020-11-07 20:47:29.787  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.addType', args参数：[Type(id=null, name=刷题记录, blogs=[]), {}]}
2020-11-07 20:47:29.790 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectByName        : ==>  Preparing: select * from blog.t_type where name = ?
2020-11-07 20:47:29.792 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectByName        : ==> Parameters: 刷题记录(String)
2020-11-07 20:47:29.796 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectByName        : <==      Total: 0
2020-11-07 20:47:29.799 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.insertType          : ==>  Preparing: insert into blog.t_type values (?,?);
2020-11-07 20:47:29.799 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.insertType          : ==> Parameters: null, 刷题记录(String)
2020-11-07 20:47:29.802 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.insertType          : <==    Updates: 1
2020-11-07 20:47:29.804  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/types
2020-11-07 20:47:29.831  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{success=新增成功！}, 1]}
2020-11-07 20:47:29.834 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 20:47:29.834 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 20:47:29.836 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 20:47:29.837 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 20:47:29.837 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 20:47:29.839 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 20:47:29.839  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 20:47:30.965  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:47:30.980 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:47:30.981 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:47:30.984 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:47:30.987 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:47:30.988 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:47:30.993 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:47:30.995 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:47:30.995 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:47:30.997 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:47:30.998  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:47:32.335  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 20:47:32.342 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:47:32.344 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:47:32.353 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:47:32.356 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:47:32.358 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:47:32.363 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 11
2020-11-07 20:47:32.368 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:47:32.370 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 20:47:32.377 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:47:32.379 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:47:32.380 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:47:32.381 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 20:47:32.383 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:47:32.384 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long)
2020-11-07 20:47:32.386 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:47:32.387  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:47:42.495  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@3fd64be5, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 20:47:42.497 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:47:42.497 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 20:47:42.499 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:47:42.501 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:47:42.501 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long)
2020-11-07 20:47:42.503 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:47:42.553 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:47:42.553 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 20:47:42.570 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:47:42.582 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:47:42.587 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), 
```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```

(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 1(Integer), true(Boolean), true(Boolean), true(Boolean), false(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 20:47:42.581(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 20:47:42.589 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:47:42.590 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:47:42.591 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 20:47:42.592 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 1
2020-11-07 20:47:42.593 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:47:42.594 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 20:47:42.599 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:47:42.602  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:47:42.610  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:47:42.613 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:47:42.614 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:47:42.616 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:47:42.619 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:47:42.620 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:47:42.624 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:47:42.625 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:47:42.626 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:47:42.627 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:47:42.628  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:47:44.018  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 20:47:44.023 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 20:47:44.024 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 20:47:44.027 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 20:47:44.030 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 20:47:44.031 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 20:47:44.036 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 20:47:44.037  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 20:47:46.284  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 20:47:46.286  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 20:47:51.934  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=java基础, blogs=[]), {}]}
2020-11-07 20:47:51.938 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 20:47:51.939 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: java基础(String)
2020-11-07 20:47:51.940 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 20:47:51.943 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 20:47:51.944 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, java基础(String)
2020-11-07 20:47:51.946 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 20:47:51.947  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 20:47:51.963  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 20:47:51.967 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 20:47:51.967 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 20:47:51.969 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 20:47:51.970 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 20:47:51.971 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 20:47:51.972 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 20:47:51.973  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 20:47:55.813  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 20:47:55.830 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 20:47:55.831 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 20:47:55.832 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 20:47:55.834 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 20:47:55.835 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 20:47:55.837 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 20:47:55.837  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 20:47:58.744  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:47:58.753 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:47:58.755 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:47:58.758 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:47:58.764 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:47:58.765 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:47:58.785 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:47:58.788 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:47:58.790 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:47:58.794 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:47:58.795  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:48:00.974  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/types', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TypeController.getTypes', args参数：[{}, 1]}
2020-11-07 20:48:00.979 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_type
2020-11-07 20:48:00.980 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : ==> Parameters: 
2020-11-07 20:48:00.985 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.d.TypeMapper.selectAllTypes_COUNT  : <==      Total: 1
2020-11-07 20:48:00.989 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: SELECT id, name FROM blog.t_type order by id desc LIMIT ?
2020-11-07 20:48:00.991 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 5(Integer)
2020-11-07 20:48:00.995 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 5
2020-11-07 20:48:00.996  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/types
2020-11-07 20:48:06.589  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 20:48:06.597 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:48:06.597 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:48:06.600 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:48:06.604 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:48:06.605 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:48:06.611 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:48:06.612 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:48:06.612 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:48:06.615 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:48:06.616  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:48:08.206  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 20:48:08.210 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:48:08.211 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:48:08.218 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:48:08.221 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:48:08.222 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:48:08.225 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 20:48:08.227 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:48:08.228 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 20:48:08.236 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:48:08.237 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:48:08.237 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:48:08.239 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 20:48:08.241 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 20:48:08.242 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long)
2020-11-07 20:48:08.243 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 20:48:08.244  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:48:28.524  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@523b54b6, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 20:48:28.526 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:48:28.526 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 20:48:28.527 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:48:28.529 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:48:28.529 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:48:28.531 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:48:28.534 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:48:28.534 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 20:48:28.537 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:48:28.538 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:48:28.539 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```

(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 1(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 20:48:28.537(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 20:48:28.540 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:48:28.541 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:48:28.541 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 20:48:28.542 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 1
2020-11-07 20:48:28.543 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:48:28.543 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 20:48:28.551 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:48:28.552 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:48:28.552 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 20:48:28.554 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:48:28.556  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:48:28.567  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:48:28.569 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:48:28.570 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:48:28.571 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:48:28.572 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:48:28.573 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:48:28.576 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:48:28.577 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:48:28.578 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:48:28.580 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:48:28.580  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:48:36.420  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 20:48:36.511 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 20:48:36.512 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 20:48:36.514 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 20:48:36.515 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 20:48:36.516 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 20:48:36.526 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll             : <==      Total: 2
2020-11-07 20:48:36.529 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 20:48:36.529 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 20:48:36.567 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 2
2020-11-07 20:48:36.569 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 20:48:36.576 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 20:48:36.580 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 3
2020-11-07 20:48:36.582 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 20:48:36.583 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 20:48:36.586 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 2
2020-11-07 20:48:36.587  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 20:48:37.872  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:48:37.874 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:48:37.874 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:48:37.876 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:48:37.876  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:48:53.307  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[70, {}]}
2020-11-07 20:48:53.321 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:48:53.321 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 70(Long)
2020-11-07 20:48:53.324 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:48:53.487 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:48:53.487 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 70(Long)
2020-11-07 20:48:53.488 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:48:53.497 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:48:53.497 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:48:53.498 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:48:53.499 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:48:53.500 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:48:53.501 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:48:53.501  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:48:53.907  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:48:53.908 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:48:53.908 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:48:53.908 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:48:53.909  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:48:54.016  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[70, {}]}
2020-11-07 20:48:54.030 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 20:48:54.031 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 70(Long)
2020-11-07 20:48:54.034 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 20:48:54.035  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 20:49:27.899  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 20:49:27.903 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:49:27.904 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:49:27.909 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:49:27.911 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:49:27.911 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:49:27.914 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 20:49:27.916 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:49:27.916 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 20:49:27.920 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:49:27.921 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:49:27.921 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:49:27.922 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:49:27.924 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:49:27.924 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:49:27.926 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:49:27.927  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:51:09.894  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@197dccb9, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 20:51:09.897 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:51:09.898 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 20:51:09.901 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:51:09.904 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:51:09.904 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:51:09.908 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:51:09.916 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:51:09.917 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 20:51:09.922 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:51:09.933 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:51:09.938 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ### 给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

如果 A 满足下述条件，那么它是一个山脉数组：
A.length >= 3
在 0 < i < A.length - 1 条件下，存在 i 使得：
A[0] < A[1] < ... A[i-1] < A[i]
A[i] > A[i+1] > ... > A[A.length - 1]

```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```
题目来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/valid-mountain-array
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 2(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 20:51:09.932(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 20:51:09.942 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:51:09.943 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:51:09.944 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 20:51:09.947 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:51:09.947 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:51:09.948 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 20:51:09.950 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:51:09.953 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:51:09.954 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 20:51:09.955 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:51:09.957  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:51:09.972  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:51:09.978 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:51:09.980 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:51:09.981 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:51:09.984 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:51:09.985 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:51:09.988 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:51:09.989 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:51:09.990 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:51:09.994 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:51:09.994  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:51:13.271  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 20:51:13.284 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 20:51:13.286 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 20:51:13.290 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 20:51:13.293 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 20:51:13.294 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 20:51:13.301 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll             : <==      Total: 2
2020-11-07 20:51:13.304 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 20:51:13.305 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 20:51:13.309 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 2
2020-11-07 20:51:13.310 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 20:51:13.311 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 20:51:13.315 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 3
2020-11-07 20:51:13.317 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 20:51:13.317 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 20:51:13.319 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 2
2020-11-07 20:51:13.321  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 20:51:13.809  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:51:13.809 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:51:13.809 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:51:13.810 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:51:13.811  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:51:14.976  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[70, {}]}
2020-11-07 20:51:14.977 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:51:14.978 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 70(Long)
2020-11-07 20:51:14.983 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:51:14.993 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:51:14.994 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 70(Long)
2020-11-07 20:51:14.996 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:51:14.998 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:51:14.999 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:51:15.000 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:51:15.002 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:51:15.003 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:51:15.004 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:51:15.004  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:51:15.394  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:51:15.395 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:51:15.395 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:51:15.396 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:51:15.397  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:51:15.482  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[70, {}]}
2020-11-07 20:51:15.483 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 20:51:15.484 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 70(Long)
2020-11-07 20:51:15.486 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 20:51:15.487  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 20:51:22.898  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 20:51:22.899 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:51:22.900 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:51:22.902 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:51:22.903 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:51:22.904 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:51:22.906 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 20:51:22.907 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:51:22.908 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 20:51:22.911 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:51:22.913 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:51:22.913 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:51:22.915 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:51:22.916 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:51:22.917 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:51:22.919 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:51:22.920  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:51:47.780  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[70, {}]}
2020-11-07 20:51:47.785 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:51:47.787 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 70(Long)
2020-11-07 20:51:47.797 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:51:47.808 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:51:47.810 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 70(Long)
2020-11-07 20:51:47.812 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:51:47.816 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:51:47.816 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:51:47.818 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:51:47.820 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:51:47.821 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:51:47.823 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:51:47.824  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:51:48.403  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:51:48.404 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:51:48.404 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:51:48.408 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:51:48.409  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:51:48.508  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[70, {}]}
2020-11-07 20:51:48.509 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 20:51:48.510 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 70(Long)
2020-11-07 20:51:48.512 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 20:51:48.516  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 20:52:15.090  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@214a0c17, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 20:52:15.091 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:52:15.092 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 20:52:15.094 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:52:15.095 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:52:15.096 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:52:15.097 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:52:15.101 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:52:15.102 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 20:52:15.125 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:52:15.138 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:52:15.146 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ### 给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3
在 0 < i < A.length - 1 条件下，存在 i 使得：

A[0] < A[1] < ... A[i-1] < A[i]

A[i] > A[i+1] > ... > A[A.length - 1]


```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```
题目来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/valid-mountain-array
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 4(Integer), true(Boolean), true(Boolean), true(Boolean), false(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 20:52:15.131(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 20:52:15.149 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:52:15.149 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:52:15.149 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 20:52:15.151 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:52:15.151 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:52:15.152 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 20:52:15.185 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:52:15.185 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:52:15.188 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 20:52:15.209 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:52:15.233  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:52:15.247  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:52:15.261 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:52:15.262 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:52:15.271 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:52:15.282 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:52:15.283 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:52:15.291 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:52:15.291 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:52:15.292 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:52:15.293 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:52:15.293  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:52:17.193  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 20:52:17.194 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:52:17.195 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:52:17.198 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:52:17.199 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:52:17.200 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:52:17.203 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 20:52:17.204 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:52:17.205 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 20:52:17.207 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:52:17.208 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:52:17.209 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:52:17.210 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:52:17.212 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:52:17.212 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:52:17.214 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:52:17.215  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:52:19.598  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@43383bd1, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 20:52:19.601 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:52:19.602 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 20:52:19.605 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:52:19.608 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:52:19.609 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:52:19.611 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:52:19.614 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:52:19.615 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 20:52:19.618 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:52:19.621 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:52:19.623 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ### 给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3
在 0 < i < A.length - 1 条件下，存在 i 使得：

A[0] < A[1] < ... A[i-1] < A[i]

A[i] > A[i+1] > ... > A[A.length - 1]


```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```
题目来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/valid-mountain-array
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 4(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 20:52:19.62(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 20:52:19.625 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:52:19.626 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:52:19.626 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 20:52:19.628 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:52:19.629 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:52:19.630 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 20:52:19.632 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:52:19.633 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:52:19.634 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 20:52:19.635 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:52:19.638  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:52:19.646  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:52:19.649 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:52:19.650 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:52:19.651 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:52:19.656 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:52:19.656 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:52:19.658 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:52:19.658 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:52:19.659 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:52:19.660 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:52:19.660  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:52:22.007  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[70, {}]}
2020-11-07 20:52:22.009 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:52:22.010 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 70(Long)
2020-11-07 20:52:22.014 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:52:22.019 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:52:22.019 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 70(Long)
2020-11-07 20:52:22.021 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:52:22.023 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:52:22.024 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:52:22.026 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:52:22.027 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:52:22.028 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:52:22.029 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:52:22.030  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:52:22.680  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:52:22.681 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:52:22.681 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:52:22.683 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:52:22.684  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:52:22.787  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[70, {}]}
2020-11-07 20:52:22.790 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 20:52:22.790 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 70(Long)
2020-11-07 20:52:22.791 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 20:52:22.792  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 20:52:45.725  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[70, {}]}
2020-11-07 20:52:45.729 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:52:45.730 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 70(Long)
2020-11-07 20:52:45.734 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:52:45.743 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:52:45.744 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 70(Long)
2020-11-07 20:52:45.745 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:52:45.747 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:52:45.747 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:52:45.749 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:52:45.752 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:52:45.752 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:52:45.754 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:52:45.755  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:52:46.223  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:52:46.223 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:52:46.224 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:52:46.225 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:52:46.225  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:52:46.296  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[70, {}]}
2020-11-07 20:52:46.297 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 20:52:46.297 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 70(Long)
2020-11-07 20:52:46.299 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 20:52:46.300  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 20:53:00.933  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 20:53:00.935 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:53:00.936 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:53:00.937 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:53:00.938 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:53:00.939 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:53:00.941 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 20:53:00.942 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:53:00.943 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 20:53:00.946 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:53:00.946 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:53:00.947 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:53:00.948 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:53:00.950 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:53:00.951 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:53:00.954 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:53:00.955  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:58:12.026  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@5660deda, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 20:58:12.028 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:58:12.028 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 20:58:12.029 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:58:12.032 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:58:12.033 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:58:12.034 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:58:12.036 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:58:12.036 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 20:58:12.038 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:58:12.042 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:58:12.043 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ### 题目描述：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3

在 0 < i < A.length - 1 条件下，存在 i 使得：

A[0] < A[1] < ... A[i-1] < A[i]

A[i] > A[i+1] > ... > A[A.length - 1]

### 解题思路：
先找到最大的数的下标
之后循环比较最大的数左边的数是不是从左往右依次递增
之后循环比较最大的数右边的数是不是从右往左依次递增

	
	
### 代码：
```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```
题目来源：力扣（LeetCode）

链接：https://leetcode-cn.com/problems/valid-mountain-array

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 6(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 20:58:12.04(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 20:58:12.045 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:58:12.045 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:58:12.046 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 20:58:12.047 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:58:12.048 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:58:12.048 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 20:58:12.052 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:58:12.053 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:58:12.053 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 20:58:12.055 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:58:12.057  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:58:12.067  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:58:12.070 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:58:12.071 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:58:12.073 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:58:12.074 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:58:12.075 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:58:12.077 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:58:12.079 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:58:12.080 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:58:12.082 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:58:12.083  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:58:14.546  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[70, {}]}
2020-11-07 20:58:14.552 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:58:14.554 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 70(Long)
2020-11-07 20:58:14.561 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:58:14.576 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:58:14.577 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 70(Long)
2020-11-07 20:58:14.581 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:58:14.585 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:58:14.587 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:58:14.592 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:58:14.594 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:58:14.595 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:58:14.598 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:58:14.599  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:58:15.093  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:58:15.093 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:58:15.093 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:58:15.094 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:58:15.094  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:58:15.213  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[70, {}]}
2020-11-07 20:58:15.213 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 20:58:15.214 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 70(Long)
2020-11-07 20:58:15.215 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 20:58:15.216  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 20:58:30.396  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 20:58:30.397 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:58:30.398 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:58:30.400 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:58:30.401 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 20:58:30.402 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 20:58:30.406 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 20:58:30.407 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 20:58:30.407 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 20:58:30.412 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 20:58:30.413 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:58:30.414 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:58:30.415 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:58:30.418 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:58:30.418 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:58:30.422 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:58:30.422  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 20:58:47.378  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@7457ca1b, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 20:58:47.379 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 20:58:47.380 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 20:58:47.382 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 20:58:47.385 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:58:47.385 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:58:47.386 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:58:47.390 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 20:58:47.391 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 20:58:47.392 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 20:58:47.393 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 20:58:47.396 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ### 题目描述：
给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3

在 0 < i < A.length - 1 条件下，存在 i 使得：

A[0] < A[1] < ... A[i-1] < A[i]

A[i] > A[i+1] > ... > A[A.length - 1]

### 解题思路：
先找到最大的数的下标

之后循环比较最大的数左边的数是不是从左往右依次递增

之后循环比较最大的数右边的数是不是从右往左依次递增

	
	
### 代码：
```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```
题目来源：力扣（LeetCode）

链接：https://leetcode-cn.com/problems/valid-mountain-array

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 7(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 20:58:47.393(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 20:58:47.398 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 20:58:47.399 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 20:58:47.399 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 20:58:47.400 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 20:58:47.402 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:58:47.403 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 20:58:47.404 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:58:47.405 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 20:58:47.406 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 20:58:47.408 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 20:58:47.410  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 20:58:47.418  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 20:58:47.422 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 20:58:47.423 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 20:58:47.424 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 20:58:47.426 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 20:58:47.427 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 20:58:47.429 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 20:58:47.430 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 20:58:47.431 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 20:58:47.434 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 20:58:47.434  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 20:58:50.007  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[70, {}]}
2020-11-07 20:58:50.017 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 20:58:50.019 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 70(Long)
2020-11-07 20:58:50.027 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 20:58:50.044 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 20:58:50.045 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 70(Long)
2020-11-07 20:58:50.049 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 20:58:50.052 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 20:58:50.053 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 20:58:50.054 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 20:58:50.058 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 20:58:50.059 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 20:58:50.061 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 20:58:50.061  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 20:58:50.576  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 20:58:50.577 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 20:58:50.577 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 20:58:50.578 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 20:58:50.578  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 20:58:50.673  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[70, {}]}
2020-11-07 20:58:50.674 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 20:58:50.675 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 70(Long)
2020-11-07 20:58:50.676 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 20:58:50.676  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:01:33.934  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[70, {}]}
2020-11-07 21:01:33.944 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:01:33.945 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 70(Long)
2020-11-07 21:01:33.957 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:01:33.980 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:01:33.982 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 70(Long)
2020-11-07 21:01:33.983 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:01:33.986 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:01:33.989 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 21:01:33.991 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:01:33.994 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:01:33.995 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:01:33.999 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:01:34.000  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:01:35.273  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:01:35.375  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/70', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[70, {}]}
2020-11-07 21:01:35.391 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:01:35.403 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:01:35.454 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:01:35.459 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 70(Long)
2020-11-07 21:01:35.469 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 2
2020-11-07 21:01:35.471  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:01:35.475 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:01:35.486  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:01:54.032  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 21:01:54.035 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:01:54.037 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:01:54.043 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:01:54.044 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:01:54.044 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:01:54.051 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:01:54.052 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:01:54.054 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 21:01:54.062 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:01:54.064 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:01:54.065 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 21:01:54.071 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:01:54.073 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:01:54.074 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:01:54.078 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:01:54.079  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:02:45.701  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@49bbd31d, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:02:45.702 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:02:45.703 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:02:45.706 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:02:45.709 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:02:45.709 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:02:45.711 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:02:45.714 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:02:45.715 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 21:02:45.722 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:02:45.728 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:02:45.734 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ### 题目描述：
给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3

在 0 < i < A.length - 1 条件下，存在 i 使得：

A[0] < A[1] < ... A[i-1] < A[i]

A[i] > A[i+1] > ... > A[A.length - 1]

### 解题思路：
先找到最大的数的下标

之后循环比较最大的数左边的数是不是从左往右依次递增

之后循环比较最大的数右边的数是不是从右往左依次递增

### 代码：
```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```
题目来源：力扣（LeetCode）

链接：https://leetcode-cn.com/problems/valid-mountain-array

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 9(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 21:02:45.726(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 21:02:45.738 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:02:45.739 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:02:45.740 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 21:02:45.741 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:02:45.743 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:02:45.744 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 21:02:45.747 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:02:45.751 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:02:45.751 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 21:02:45.753 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:02:45.755  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:02:45.774  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:02:45.794 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:02:45.795 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:02:45.796 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:02:45.804 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:02:45.805 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:02:45.808 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 2
2020-11-07 21:02:45.809 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:02:45.810 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:02:45.813 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:02:45.814  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:11:58.350  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.toAddBlog', args参数：[{}]}
2020-11-07 21:11:58.353 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:11:58.353 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:11:58.358 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:11:58.359 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:11:58.361 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:11:58.364 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:11:58.365  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:17:03.692  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@7ba2bd1, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:17:03.697 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:17:03.699 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:17:03.703 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:17:03.707 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:17:03.708 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:17:03.711 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:17:03.718 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.dao.BlogMapper.save    : ==>  Preparing: insert into t_blog(id,title,content,first_picture,flag,views,description,appreciation,share_statement, commentabled,published,recommend,create_time,update_time,type_id,user_id) values (?,?, ?,?,?,?,?,?,?, ?,?,?,?,?,?,?);
2020-11-07 21:17:03.726 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.dao.BlogMapper.save    : ==> Parameters: null, LeetCode#463 岛屿周长(String), ###题目描述：

给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。

网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。

岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。

代码：
```java
public class IslandPerimeter {
    public static void main(String[] args) {
        int[][] grid = {{0,1,0,0},
                		{1,1,1,0},
                		{0,1,0,0},
                		{1,1,0,0}};
    }

    private static int[] dx = {0,1,0,-1};
    private static int[] dy = {1,0,-1,0};

    private static int islandPerimeter(int[][] grid){
        int n = grid.length;
        int m = grid[0].length;
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(grid[i][j] == 1){
                    int count = 0;
                    for(int k = 0;k < 4; k++){
                        int ix = i + dx[k];
                        int jx = j + dy[k];
                        if(ix < 0 || jx < 0 || ix >= n || jx >= m || grid[ix][jx] == 0){
                            count += 1;
                        }
                    }
                    result += count;
                }
            }
        }
        return result;
    }
}
```

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/island-perimeter
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。(String), https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1604765039810&di=41686f1b5dcf2e00f5ba7d0076a69d68&imgtype=0&src=http%3A%2F%2Fwww.lgstatic.com%2Fthumbnail_600x360%2Fi%2Fimage3%2FM00%2F06%2F0C%2FCgq2xlpfQEOAfHogAACW0wJY9I810.jpeg(String), 原创(String), 1(Integer), 给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。计算岛屿的周长(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 21:17:03.717(Timestamp), 2020-11-07 21:17:03.717(Timestamp), 85(Long), 2(Long)
2020-11-07 21:17:03.730 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.dao.BlogMapper.save    : <==    Updates: 1
2020-11-07 21:17:03.732 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:17:03.734 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 46(Long)
2020-11-07 21:17:03.737 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:17:03.738 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:17:03.739 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 55(Long)
2020-11-07 21:17:03.741 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:17:03.748  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:17:03.770  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=保存成功！}, 1]}
2020-11-07 21:17:03.774 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:17:03.775 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:17:03.777 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:17:03.783 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:17:03.784 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:17:03.791 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:17:03.792 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:17:03.792 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:17:03.796 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:17:03.797  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:17:07.622  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 21:17:07.635 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 21:17:07.636 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 21:17:07.639 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 21:17:07.641 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 21:17:07.641 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 21:17:07.647 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findAll             : <==      Total: 3
2020-11-07 21:17:07.649 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 21:17:07.649 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 21:17:07.653 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 3
2020-11-07 21:17:07.657 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 21:17:07.658 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 21:17:07.662 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 5
2020-11-07 21:17:07.664 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 21:17:07.665 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 21:17:07.666 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 3
2020-11-07 21:17:07.670  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 21:17:08.189  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:17:08.191 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:17:08.192 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:17:08.197 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:17:08.198  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:17:33.086  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[71, {}]}
2020-11-07 21:17:33.089 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:17:33.090 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 71(Long)
2020-11-07 21:17:33.094 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:17:33.111 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:17:33.112 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 71(Long)
2020-11-07 21:17:33.113 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:17:33.115 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:17:33.116 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:17:33.119 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:17:33.120 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:17:33.121 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:17:33.122 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:17:33.123  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:17:33.624  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:17:33.630 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:17:33.631 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:17:33.632 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:17:33.632  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:17:33.721  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[71, {}]}
2020-11-07 21:17:33.722 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:17:33.723 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 71(Long)
2020-11-07 21:17:33.727 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:17:33.728  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:18:07.684  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/71/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[71, {}]}
2020-11-07 21:18:07.687 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:18:07.688 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:18:07.690 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:18:07.692 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:18:07.693 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:18:07.694 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:18:07.696 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:18:07.697 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 71(Long)
2020-11-07 21:18:07.704 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:18:07.705 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:18:07.706 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:18:07.707 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:18:07.710 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:18:07.710 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:18:07.711 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:18:07.712  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:18:27.288  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@55499727, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:18:27.317 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:18:27.317 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:18:27.327 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:18:27.356 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:18:27.356 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:18:27.358 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:18:27.360 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:18:27.360 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 71(Long)
2020-11-07 21:18:27.362 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:18:27.363 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:18:27.366 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#463 岛屿周长(String), ###题目描述：

给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。

网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。

岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。

代码：
```java
public class IslandPerimeter {
    public static void main(String[] args) {
        int[][] grid = {{0,1,0,0},
                		{1,1,1,0},
                		{0,1,0,0},
                		{1,1,0,0}};
    }

    private static int[] dx = {0,1,0,-1};
    private static int[] dy = {1,0,-1,0};

    private static int islandPerimeter(int[][] grid){
        int n = grid.length;
        int m = grid[0].length;
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(grid[i][j] == 1){
                    int count = 0;
                    for(int k = 0;k < 4; k++){
                        int ix = i + dx[k];
                        int jx = j + dy[k];
                        if(ix < 0 || jx < 0 || ix >= n || jx >= m || grid[ix][jx] == 0){
                            count += 1;
                        }
                    }
                    result += count;
                }
            }
        }
        return result;
    }
}
```

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/island-perimeter
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。(String), https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2916319135,2024207132&fm=11&gp=0.jpg(String), 给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。计算岛屿的周长(String), 原创(String), 2(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 21:17:03.717(Timestamp), 2020-11-07 21:18:27.363(Timestamp), 85(Long), 2(Long), 71(Long)
2020-11-07 21:18:27.371 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:18:27.372 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:18:27.372 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 71(Long)
2020-11-07 21:18:27.374 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:18:27.375 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:18:27.375 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 46(Long)
2020-11-07 21:18:27.377 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:18:27.379 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:18:27.379 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 55(Long)
2020-11-07 21:18:27.380 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:18:27.383  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:18:27.408  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:18:27.417 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:18:27.418 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:18:27.420 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:18:27.422 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:18:27.423 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:18:27.425 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:18:27.426 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:18:27.426 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:18:27.428 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:18:27.428  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:18:41.492  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/71/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[71, {}]}
2020-11-07 21:18:41.495 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:18:41.497 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:18:41.499 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:18:41.501 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:18:41.502 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:18:41.503 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:18:41.504 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:18:41.504 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 71(Long)
2020-11-07 21:18:41.506 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:18:41.509 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:18:41.509 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:18:41.510 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:18:41.513 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:18:41.513 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:18:41.514 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:18:41.515  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:20:22.365  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@a855959, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:20:22.367 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:20:22.367 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:20:22.370 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:20:22.372 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:20:22.373 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:20:22.376 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:20:22.380 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:20:22.381 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 71(Long)
2020-11-07 21:20:22.384 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:20:22.385 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:20:22.388 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#463 岛屿周长(String), ###题目描述：

给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。

网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。

岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。

### 示例 :
输入:
[[0,1,0,0],
 [1,1,1,0],
 [0,1,0,0],
 [1,1,0,0]]

输出: 16
如图：
[![示例图](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")

### 解题思路：



### 代码：
```java
public class IslandPerimeter {
    public static void main(String[] args) {
        int[][] grid = {{0,1,0,0},
                		{1,1,1,0},
                		{0,1,0,0},
                		{1,1,0,0}};
    }

    private static int[] dx = {0,1,0,-1};
    private static int[] dy = {1,0,-1,0};

    private static int islandPerimeter(int[][] grid){
        int n = grid.length;
        int m = grid[0].length;
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(grid[i][j] == 1){
                    int count = 0;
                    for(int k = 0;k < 4; k++){
                        int ix = i + dx[k];
                        int jx = j + dy[k];
                        if(ix < 0 || jx < 0 || ix >= n || jx >= m || grid[ix][jx] == 0){
                            count += 1;
                        }
                    }
                    result += count;
                }
            }
        }
        return result;
    }
}
```

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/island-perimeter
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。(String), https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2916319135,2024207132&fm=11&gp=0.jpg(String), 给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。计算岛屿的周长(String), 原创(String), 2(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 21:17:03.717(Timestamp), 2020-11-07 21:20:22.385(Timestamp), 85(Long), 2(Long), 71(Long)
2020-11-07 21:20:22.391 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:20:22.393 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:20:22.393 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 71(Long)
2020-11-07 21:20:22.395 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:20:22.396 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:20:22.396 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 46(Long)
2020-11-07 21:20:22.401 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:20:22.401 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:20:22.401 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 55(Long)
2020-11-07 21:20:22.403 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:20:22.405  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:20:22.417  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:20:22.419 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:20:22.421 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:20:22.422 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:20:22.425 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:20:22.426 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:20:22.430 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:20:22.431 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:20:22.432 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:20:22.434 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:20:22.435  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:20:25.271  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 21:20:25.281 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 21:20:25.281 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 21:20:25.283 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 21:20:25.284 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 21:20:25.284 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 21:20:25.290 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findAll             : <==      Total: 3
2020-11-07 21:20:25.294 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 21:20:25.295 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 21:20:25.298 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 3
2020-11-07 21:20:25.299 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 21:20:25.300 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 21:20:25.302 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 5
2020-11-07 21:20:25.303 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 21:20:25.304 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 21:20:25.305 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 3
2020-11-07 21:20:25.306  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 21:20:25.797  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:20:25.797 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:20:25.798 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:20:25.815 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:20:25.815  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:20:29.261  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[71, {}]}
2020-11-07 21:20:29.263 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:20:29.265 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 71(Long)
2020-11-07 21:20:29.269 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:20:29.286 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:20:29.288 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 71(Long)
2020-11-07 21:20:29.290 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:20:29.293 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:20:29.293 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:20:29.296 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:20:29.297 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:20:29.298 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:20:29.300 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:20:29.301  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:20:29.733  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:20:29.734 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:20:29.734 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:20:29.737 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:20:29.737  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:20:29.811  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[71, {}]}
2020-11-07 21:20:29.811 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:20:29.812 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 71(Long)
2020-11-07 21:20:29.814 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:20:29.815  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:20:51.343  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/71/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[71, {}]}
2020-11-07 21:20:51.348 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:20:51.349 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:20:51.356 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:20:51.359 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:20:51.363 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:20:51.368 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:20:51.371 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:20:51.373 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 71(Long)
2020-11-07 21:20:51.380 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:20:51.383 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:20:51.385 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:20:51.387 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:20:51.393 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:20:51.393 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:20:51.396 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:20:51.396  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:23:04.034  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@1fb7f7e7, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:23:04.039 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:23:04.039 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:23:04.040 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:23:04.043 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:23:04.044 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:23:04.047 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:23:04.050 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:23:04.051 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 71(Long)
2020-11-07 21:23:04.055 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:23:04.057 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:23:04.061 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#463 岛屿周长(String), ###** 题目描述：**

给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。

网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。

岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。

### **示例 :**
输入:
[[0,1,0,0],
 [1,1,1,0],
 [0,1,0,0],
 [1,1,0,0]]

输出: 16
如图：

[![示例图](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")

### **解题思路：**
对于一个陆地格子的每条边，它被算作岛屿的周长当且仅当这条边为网格的边界或者相邻的另一个格子为水域。 因此，我们可以遍历每个陆地格子，看其四个方向是否为边界或者水域，如果是，将这条边的贡献加入答案中即可。

作者：LeetCode-Solution
链接：https://leetcode-cn.com/problems/island-perimeter/solution/dao-yu-de-zhou-chang-by-leetcode-solution/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。


### **代码：**
```java
public class IslandPerimeter {
    public static void main(String[] args) {
        int[][] grid = {{0,1,0,0},
                		{1,1,1,0},
                		{0,1,0,0},
                		{1,1,0,0}};
    }

    private static int[] dx = {0,1,0,-1};
    private static int[] dy = {1,0,-1,0};

    private static int islandPerimeter(int[][] grid){
        int n = grid.length;
        int m = grid[0].length;
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(grid[i][j] == 1){
                    int count = 0;
                    for(int k = 0;k < 4; k++){
                        int ix = i + dx[k];
                        int jx = j + dy[k];
                        if(ix < 0 || jx < 0 || ix >= n || jx >= m || grid[ix][jx] == 0){
                            count += 1;
                        }
                    }
                    result += count;
                }
            }
        }
        return result;
    }
}
```

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/island-perimeter
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。(String), https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2916319135,2024207132&fm=11&gp=0.jpg(String), 给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。计算岛屿的周长(String), 原创(String), 3(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 21:17:03.717(Timestamp), 2020-11-07 21:23:04.056(Timestamp), 85(Long), 2(Long), 71(Long)
2020-11-07 21:23:04.067 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:23:04.068 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:23:04.069 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 71(Long)
2020-11-07 21:23:04.071 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:23:04.071 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:23:04.071 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 46(Long)
2020-11-07 21:23:04.075 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:23:04.076 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:23:04.076 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 55(Long)
2020-11-07 21:23:04.078 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:23:04.080  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:23:04.089  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:23:04.095 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:23:04.096 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:23:04.097 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:23:04.101 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:23:04.102 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:23:04.107 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:23:04.108 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:23:04.110 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:23:04.111 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:23:04.111  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:23:06.581  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[71, {}]}
2020-11-07 21:23:06.588 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:23:06.590 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 71(Long)
2020-11-07 21:23:06.598 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:23:06.638 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:23:06.639 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 71(Long)
2020-11-07 21:23:06.641 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:23:06.644 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:23:06.645 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:23:06.646 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:23:06.648 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:23:06.650 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:23:06.652 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:23:06.653  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:23:07.156  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:23:07.157 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:23:07.157 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:23:07.159 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:23:07.159  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:23:07.278  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[71, {}]}
2020-11-07 21:23:07.280 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:23:07.280 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 71(Long)
2020-11-07 21:23:07.281 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:23:07.282  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:23:27.348  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/71/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[71, {}]}
2020-11-07 21:23:27.350 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:23:27.351 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:23:27.355 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:23:27.356 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:23:27.357 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:23:27.360 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:23:27.362 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:23:27.363 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 71(Long)
2020-11-07 21:23:27.367 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:23:27.369 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:23:27.370 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:23:27.372 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:23:27.374 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:23:27.374 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:23:27.376 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:23:27.377  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:24:22.661  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@2aedf36d, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:24:22.663 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:24:22.664 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:24:22.666 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:24:22.668 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:24:22.670 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:24:22.671 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:24:22.674 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:24:22.676 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 71(Long)
2020-11-07 21:24:22.679 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:24:22.679 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:24:22.683 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#463 岛屿周长(String), ###** 题目描述：**

给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。

网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。

岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。

### **示例 :**
输入:
[[0,1,0,0],
 [1,1,1,0],
 [0,1,0,0],
 [1,1,0,0]]

输出: 16
如图：

[![示例图](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")

### **解题思路：**
对于一个陆地格子的每条边，它被算作岛屿的周长当且仅当这条边为网格的边界或者相邻的另一个格子为水域。 

因此，我们可以遍历每个陆地格子，看其四个方向是否为边界或者水域，如果是，将这条边的贡献加入答案中即可。

### **代码：**
```java
public class IslandPerimeter {
    public static void main(String[] args) {
        int[][] grid = {{0,1,0,0},
                		{1,1,1,0},
                		{0,1,0,0},
                		{1,1,0,0}};
    }

    private static int[] dx = {0,1,0,-1};
    private static int[] dy = {1,0,-1,0};

    private static int islandPerimeter(int[][] grid){
        int n = grid.length;
        int m = grid[0].length;
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(grid[i][j] == 1){
                    int count = 0;
                    for(int k = 0;k < 4; k++){
                        int ix = i + dx[k];
                        int jx = j + dy[k];
                        if(ix < 0 || jx < 0 || ix >= n || jx >= m || grid[ix][jx] == 0){
                            count += 1;
                        }
                    }
                    result += count;
                }
            }
        }
        return result;
    }
}
```

来源：力扣（LeetCode）

链接：https://leetcode-cn.com/problems/island-perimeter

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
(String), https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2916319135,2024207132&fm=11&gp=0.jpg(String), 给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。计算岛屿的周长(String), 原创(String), 4(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 21:17:03.717(Timestamp), 2020-11-07 21:24:22.679(Timestamp), 85(Long), 2(Long), 71(Long)
2020-11-07 21:24:22.687 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:24:22.688 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:24:22.689 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 71(Long)
2020-11-07 21:24:22.690 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:24:22.692 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:24:22.693 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 46(Long)
2020-11-07 21:24:22.699 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:24:22.699 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:24:22.699 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 55(Long)
2020-11-07 21:24:22.700 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:24:22.702  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:24:22.714  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:24:22.718 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:24:22.718 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:24:22.720 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:24:22.724 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:24:22.724 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:24:22.729 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:24:22.730 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:24:22.731 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:24:22.733 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:24:22.733  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:24:26.084  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[71, {}]}
2020-11-07 21:24:26.092 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:24:26.094 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 71(Long)
2020-11-07 21:24:26.107 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:24:26.124 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:24:26.126 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 71(Long)
2020-11-07 21:24:26.128 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:24:26.133 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:24:26.134 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:24:26.138 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:24:26.144 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:24:26.146 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:24:26.149 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:24:26.150  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:24:26.696  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:24:26.697 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:24:26.698 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:24:26.700 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:24:26.701  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:24:26.802  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[71, {}]}
2020-11-07 21:24:26.802 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:24:26.802 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 71(Long)
2020-11-07 21:24:26.803 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:24:26.808  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:24:32.994  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/71/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[71, {}]}
2020-11-07 21:24:32.997 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:24:32.998 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:24:33.003 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:24:33.006 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:24:33.007 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:24:33.010 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:24:33.012 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:24:33.014 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 71(Long)
2020-11-07 21:24:33.023 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:24:33.026 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:24:33.028 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:24:33.031 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:24:33.034 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:24:33.035 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:24:33.037 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:24:33.039  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:24:55.201  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@484aa0e7, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:24:55.203 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:24:55.204 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:24:55.207 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:24:55.211 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:24:55.212 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:24:55.214 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:24:55.219 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:24:55.220 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 71(Long)
2020-11-07 21:24:55.223 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:24:55.226 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:24:55.230 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#463 岛屿周长(String), ###** 题目描述：**

给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。

网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。

岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。

### **示例 :**
输入:
[[0,1,0,0],
 [1,1,1,0],
 [0,1,0,0],
 [1,1,0,0]]

输出: 16
如图：

[![示例图](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")

### **解题思路：**
对于一个陆地格子的每条边，它被算作岛屿的周长当且仅当这条边为网格的边界或者相邻的另一个格子为水域。 

因此，我们可以遍历每个陆地格子，看其四个方向是否为边界或者水域，如果是，将这条边的贡献加入答案中即可。

### **代码：**
```java
public class IslandPerimeter {
    public static void main(String[] args) {
        int[][] grid = {{0,1,0,0},
                		{1,1,1,0},
                		{0,1,0,0},
                		{1,1,0,0}};
    }

    private static int[] dx = {0,1,0,-1};
    private static int[] dy = {1,0,-1,0};

    private static int islandPerimeter(int[][] grid){
        int n = grid.length;
        int m = grid[0].length;
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(grid[i][j] == 1){
                    int count = 0;
                    for(int k = 0;k < 4; k++){
                        int ix = i + dx[k];
                        int jx = j + dy[k];
                        if(ix < 0 || jx < 0 || ix >= n || jx >= m || grid[ix][jx] == 0){
                            count += 1;
                        }
                    }
                    result += count;
                }
            }
        }
        return result;
    }
}
```

来源：力扣（LeetCode）

链接：[https://leetcode-cn.com/problems/island-perimeter](https://leetcode-cn.com/problems/island-perimeter "https://leetcode-cn.com/problems/island-perimeter")

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
(String), https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2916319135,2024207132&fm=11&gp=0.jpg(String), 给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。计算岛屿的周长(String), 原创(String), 5(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 21:17:03.717(Timestamp), 2020-11-07 21:24:55.225(Timestamp), 85(Long), 2(Long), 71(Long)
2020-11-07 21:24:55.233 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:24:55.234 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:24:55.236 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 71(Long)
2020-11-07 21:24:55.238 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:24:55.239 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:24:55.239 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 46(Long)
2020-11-07 21:24:55.242 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:24:55.243 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:24:55.243 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 55(Long)
2020-11-07 21:24:55.245 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:24:55.246  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:24:55.267  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:24:55.271 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:24:55.271 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:24:55.273 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:24:55.278 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:24:55.279 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:24:55.284 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:24:55.286 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:24:55.286 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:24:55.289 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:24:55.289  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:24:58.119  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[71, {}]}
2020-11-07 21:24:58.126 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:24:58.127 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 71(Long)
2020-11-07 21:24:58.138 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:24:58.165 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:24:58.166 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 71(Long)
2020-11-07 21:24:58.168 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:24:58.175 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:24:58.178 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:24:58.180 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:24:58.183 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:24:58.185 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:24:58.186 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:24:58.187  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:24:58.665  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:24:58.665 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:24:58.666 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:24:58.667 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:24:58.668  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:24:58.787  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[71, {}]}
2020-11-07 21:24:58.788 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:24:58.789 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 71(Long)
2020-11-07 21:24:58.790 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:24:58.791  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:25:12.282  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 21:25:12.284 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:25:12.286 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:25:12.291 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:25:12.292 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:25:12.292 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:25:12.294 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:25:12.296 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:25:12.298 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 21:25:12.301 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:25:12.303 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:25:12.303 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 21:25:12.305 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:25:12.308 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:25:12.310 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:25:12.311 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:25:12.313  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:25:31.550  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@25ca82d, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:25:31.557 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:25:31.557 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:25:31.558 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:25:31.561 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:25:31.562 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:25:31.565 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:25:31.567 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:25:31.567 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 21:25:31.569 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:25:31.570 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:25:31.583 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ### 题目描述：
给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3

在 0 < i < A.length - 1 条件下，存在 i 使得：

A[0] < A[1] < ... A[i-1] < A[i]

A[i] > A[i+1] > ... > A[A.length - 1]

### 解题思路：
先找到最大的数的下标

之后循环比较最大的数左边的数是不是从左往右依次递增

之后循环比较最大的数右边的数是不是从右往左依次递增

### 代码：
```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(fun(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```
题目来源：力扣（LeetCode）

链接：[https://leetcode-cn.com/problems/valid-mountain-array](https://leetcode-cn.com/problems/valid-mountain-array "https://leetcode-cn.com/problems/valid-mountain-array")

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 9(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 21:25:31.57(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 21:25:31.586 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:25:31.587 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:25:31.588 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 21:25:31.592 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:25:31.593 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:25:31.594 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 21:25:31.595 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:25:31.595 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:25:31.596 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 21:25:31.596 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:25:31.597  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:25:31.609  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:25:31.615 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:25:31.616 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:25:31.617 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:25:31.624 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:25:31.625 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:25:31.628 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:25:31.629 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:25:31.629 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:25:31.631 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:25:31.632  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:27:58.509  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 21:27:58.513 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:27:58.513 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:27:58.515 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:27:58.517 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:27:58.518 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:27:58.521 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:27:58.523 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:27:58.525 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 21:27:58.530 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:27:58.531 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:27:58.531 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 21:27:58.532 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:27:58.534 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:27:58.535 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:27:58.536 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:27:58.536  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:32:26.410  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@494b9a10, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:32:26.420 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:32:26.421 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:32:26.423 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:32:26.427 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:32:26.428 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:32:26.430 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:32:26.432 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:32:26.434 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 21:32:26.436 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:32:26.438 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:32:26.445 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ### 题目描述：
给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3

在 0 < i < A.length - 1 条件下，存在 i 使得：

A[0] < A[1] < ... A[i-1] < A[i]

A[i] > A[i+1] > ... > A[A.length - 1]

### 解题思路：
先找到最大的数的下标

之后循环比较最大的数左边的数是不是从左往右依次递增

之后循环比较最大的数右边的数是不是从右往左依次递增

### 代码：
```java
public class IslandPerimeter {
    public static void main(String[] args) {
        int[][] grid = {{0,1,0,0},
                        {1,1,1,0},
                        {0,1,0,0},
                        {1,1,0,0}};
    }

    private static int[] dx = {0,1,0,-1};
    private static int[] dy = {1,0,-1,0};

    private static int islandPerimeter(int[][] grid){
        //获取网格的长和宽
        int n = grid.length;
        int m = grid[0].length;
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(grid[i][j] == 1){//如果是陆地
                    int count = 0;
                    //遍历陆地四周的格子
                    for(int k = 0;k < 4; k++){
                        int ix = i + dx[k];
                        int jx = j + dy[k];
                        //如果周围是边界或水域
                        if(ix < 0 || jx < 0 || ix >= n || jx >= m || grid[ix][jx] == 0){
                            count += 1;//周长加一
                        }
                    }
                    result += count;
                }
            }
        }
        return result;
    }
}
```
题目来源：力扣（LeetCode）

链接：[https://leetcode-cn.com/problems/valid-mountain-array](https://leetcode-cn.com/problems/valid-mountain-array "https://leetcode-cn.com/problems/valid-mountain-array")

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 9(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 21:32:26.438(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 21:32:26.448 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:32:26.449 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:32:26.449 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 21:32:26.451 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:32:26.457 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:32:26.458 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 21:32:26.464 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:32:26.465 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:32:26.468 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 21:32:26.470 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:32:26.472  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:32:26.483  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:32:26.490 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:32:26.491 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:32:26.492 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:32:26.498 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:32:26.501 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:32:26.505 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:32:26.507 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:32:26.507 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:32:26.512 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:32:26.513  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:32:28.866  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[71, {}]}
2020-11-07 21:32:28.874 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:32:28.877 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 71(Long)
2020-11-07 21:32:28.898 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:32:28.906 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:32:28.907 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 71(Long)
2020-11-07 21:32:28.909 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:32:28.911 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:32:28.913 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:32:28.915 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:32:28.917 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:32:28.918 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:32:28.919 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:32:28.920  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:32:29.475  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:32:29.476 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:32:29.477 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:32:29.478 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:32:29.479  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:32:29.558  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[71, {}]}
2020-11-07 21:32:29.559 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:32:29.560 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 71(Long)
2020-11-07 21:32:29.561 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:32:29.561  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:33:19.822  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 21:33:19.824 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:33:19.825 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:33:19.836 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:33:19.838 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:33:19.838 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:33:19.843 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:33:19.844 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:33:19.846 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 21:33:19.851 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:33:19.854 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:33:19.855 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 21:33:19.856 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:33:19.860 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:33:19.861 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:33:19.863 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:33:19.863  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:40:05.274  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[71, {}]}
2020-11-07 21:40:05.279 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:40:05.280 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 71(Long)
2020-11-07 21:40:05.287 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:40:05.293 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:40:05.293 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 71(Long)
2020-11-07 21:40:05.295 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:40:05.297 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:40:05.298 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:40:05.300 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:40:05.301 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:40:05.302 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:40:05.304 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:40:05.304  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:40:06.025  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:40:06.027 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:40:06.028 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:40:06.029 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:40:06.030  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:40:06.260  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[71, {}]}
2020-11-07 21:40:06.261 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:40:06.262 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 71(Long)
2020-11-07 21:40:06.264 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:40:06.265  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:40:13.204  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[71, {}]}
2020-11-07 21:40:13.237 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:40:13.255 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 71(Long)
2020-11-07 21:40:13.375 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:40:13.651 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:40:13.656 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 71(Long)
2020-11-07 21:40:13.665 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:40:13.687 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:40:13.695 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:40:13.696 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:40:13.709 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:40:13.714 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:40:13.728 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:40:13.729  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:40:14.424  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:40:14.425 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:40:14.425 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:40:14.427 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:40:14.428  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:40:14.483  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[71, {}]}
2020-11-07 21:40:14.490 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:40:14.492 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 71(Long)
2020-11-07 21:40:14.494 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:40:14.494  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:40:18.691  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/login', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.LoginController.login', args参数：[admin, admin, org.apache.catalina.session.StandardSessionFacade@5b97e2f2, {}]}
2020-11-07 21:40:18.701 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.d.U.queryByUsernameAndPassword     : ==>  Preparing: select id,nickname,avatar,email from blog.t_user where username = ? and password = ?;
2020-11-07 21:40:18.703 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.d.U.queryByUsernameAndPassword     : ==> Parameters: admin(String), 21232f297a57a5a743894a0e4a801fc3(String)
2020-11-07 21:40:18.705 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.d.U.queryByUsernameAndPassword     : <==      Total: 1
2020-11-07 21:40:18.706  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/index
2020-11-07 21:40:25.934  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 21:40:25.947 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:40:25.948 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:40:25.950 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:40:25.954 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:40:25.956 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:40:25.959 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:40:25.960 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:40:25.961 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:40:25.963 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:40:25.965  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:40:29.645  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/71/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[71, {}]}
2020-11-07 21:40:29.646 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:40:29.647 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:40:29.650 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:40:29.652 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:40:29.652 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:40:29.654 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:40:29.655 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:40:29.656 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 71(Long)
2020-11-07 21:40:29.660 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:40:29.661 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:40:29.661 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:40:29.663 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:40:29.664 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:40:29.664 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:40:29.667 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:40:29.668  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:41:35.321  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@51bdaf96, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:41:35.324 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:41:35.332 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:41:35.337 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:41:35.346 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:41:35.347 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:41:35.349 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:41:35.354 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:41:35.355 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 71(Long)
2020-11-07 21:41:35.362 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:41:35.367 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:41:35.376 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#463 岛屿周长(String), ###** 题目描述：**

给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。

网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。

岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。

### **示例 :**
输入:
[[0,1,0,0],
 [1,1,1,0],
 [0,1,0,0],
 [1,1,0,0]]

输出: 16
如图：

[![示例图](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")

### **解题思路：**
对于一个陆地格子的每条边，它被算作岛屿的周长当且仅当这条边为网格的边界或者相邻的另一个格子为水域。 

因此，我们可以遍历每个陆地格子，看其四个方向是否为边界或者水域，如果是，将这条边的贡献加入答案中即可。

### **代码：**
```java
public class IslandPerimeter {
    public static void main(String[] args) {
        int[][] grid = {{0,1,0,0},
                        {1,1,1,0},
                        {0,1,0,0},
                        {1,1,0,0}};
        System.out.println("周长是："+islandPerimeter(grid));
    }

    private static int[] dx = {0,1,0,-1};
    private static int[] dy = {1,0,-1,0};

    private static int islandPerimeter(int[][] grid){
        //获取网格的长和宽
        int n = grid.length;
        int m = grid[0].length;
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(grid[i][j] == 1){//如果是陆地
                    int count = 0;
                    //遍历陆地四周的格子
                    for(int k = 0;k < 4; k++){
                        int ix = i + dx[k];
                        int jx = j + dy[k];
                        //如果周围是边界或水域
                        if(ix < 0 || jx < 0 || ix >= n || jx >= m || grid[ix][jx] == 0){
                            count += 1;//周长加一
                        }
                    }
                    result += count;
                }
            }
        }
        return result;
    }
}
```

来源：力扣（LeetCode）

链接：[https://leetcode-cn.com/problems/island-perimeter](https://leetcode-cn.com/problems/island-perimeter "https://leetcode-cn.com/problems/island-perimeter")

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
(String), https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2916319135,2024207132&fm=11&gp=0.jpg(String), 给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。计算岛屿的周长(String), 原创(String), 9(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 21:17:03.717(Timestamp), 2020-11-07 21:41:35.364(Timestamp), 85(Long), 2(Long), 71(Long)
2020-11-07 21:41:35.381 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:41:35.385 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:41:35.385 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 71(Long)
2020-11-07 21:41:35.387 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:41:35.388 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:41:35.391 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 46(Long)
2020-11-07 21:41:35.394 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:41:35.394 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:41:35.396 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 55(Long)
2020-11-07 21:41:35.397 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:41:35.400  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:41:35.411  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:41:35.414 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:41:35.414 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:41:35.415 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:41:35.418 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:41:35.419 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:41:35.421 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:41:35.422 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:41:35.423 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:41:35.427 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:41:35.428  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:41:38.160  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/70/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[70, {}]}
2020-11-07 21:41:38.163 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:41:38.163 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:41:38.167 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:41:38.168 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:41:38.169 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:41:38.172 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:41:38.175 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:41:38.175 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 70(Long)
2020-11-07 21:41:38.180 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:41:38.180 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:41:38.181 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 70(Long)
2020-11-07 21:41:38.183 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:41:38.186 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:41:38.187 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:41:38.188 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:41:38.189  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:42:24.060  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@371bbc8b, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:42:24.063 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:42:24.064 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:42:24.065 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:42:24.069 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:42:24.071 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:42:24.074 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:42:24.076 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:42:24.077 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 70(Long)
2020-11-07 21:42:24.082 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:42:24.085 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:42:24.091 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#941 有效的山脉数组(String), ### 题目描述：
给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3

在 0 < i < A.length - 1 条件下，存在 i 使得：

A[0] < A[1] < ... A[i-1] < A[i]

A[i] > A[i+1] > ... > A[A.length - 1]

### 解题思路：
先找到最大的数的下标

之后循环比较最大的数左边的数是不是从左往右依次递增

之后循环比较最大的数右边的数是不是从右往左依次递增

### 代码：
```java
public class ValidMountainArray {
    public static void main(String[] args) {
        int[] A = {3, 5, 4};
        System.out.println(validMountainArray(A));
    }

    private static boolean validMountainArray(int[] A) {
        int temp = 0;
        int length = A.length;
        if (length < 3) return false;
        //第一个for循环找到最大的那个数的下标
        for (int i = 1; i < length; i++) {
            if (A[i] > A[i - 1]) {
                temp = i;
            }
        }
        //如果最大的数是第一个数或是最后一个数就返回false
        if (temp == length - 1 || temp == 0) return false; //
        //第二次循环比较最大的数左边的数是不是从左往右依次递增
        for (int j = 0; j < temp; j++) {
            if (A[j] >= A[j + 1]) return false;
        }
        //第三次循环比较最大的数右边的数是不是从右往左依次递增
        for (int j = length - 1; j > temp; j--) {
            if (A[j] >= A[j - 1]) return false;
        }
        return true;
    }
}
```
题目来源：力扣（LeetCode）

链接：[https://leetcode-cn.com/problems/valid-mountain-array](https://leetcode-cn.com/problems/valid-mountain-array "https://leetcode-cn.com/problems/valid-mountain-array")

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。(String), /images/Firewatch2.jpg(String), 有效的山脉数组：给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。如果 A 满足下述条件，那么它是一个山脉数组：A.length >=3
在 0 < i < A.length - 1 条件下，存在 i 使得：A[0] < A[1] < ... A[i-1] < A[i]A[i] > A[i+1] > ... > A[A.length - 1](String), 原创(String), 9(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 20:47:06.675(Timestamp), 2020-11-07 21:42:24.084(Timestamp), 85(Long), 2(Long), 70(Long)
2020-11-07 21:42:24.094 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:42:24.095 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:42:24.096 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 70(Long)
2020-11-07 21:42:24.097 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:42:24.097 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:42:24.098 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 46(Long)
2020-11-07 21:42:24.100 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:42:24.101 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:42:24.103 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 70(Long), 55(Long)
2020-11-07 21:42:24.104 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:42:24.106  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:42:24.118  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:42:24.122 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:42:24.123 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:42:24.124 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:42:24.128 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:42:24.129 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:42:24.132 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:42:24.134 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:42:24.135 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:42:24.140 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:42:24.140  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:42:27.245  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[71, {}]}
2020-11-07 21:42:27.253 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 21:42:27.256 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 71(Long)
2020-11-07 21:42:27.262 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 21:42:27.270 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 21:42:27.271 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 71(Long)
2020-11-07 21:42:27.274 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 21:42:27.277 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:42:27.278 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:42:27.279 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:42:27.282 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:42:27.282 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:42:27.283 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:42:27.284  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 21:42:27.876  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:42:27.878 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:42:27.878 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:42:27.879 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:42:27.880  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:42:27.958  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/71', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[71, {}]}
2020-11-07 21:42:27.959 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 21:42:27.960 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 71(Long)
2020-11-07 21:42:27.962 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 21:42:27.963  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 21:43:21.930  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/71/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[71, {}]}
2020-11-07 21:43:21.932 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:43:21.933 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:43:21.939 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:43:21.940 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:43:21.941 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:43:21.944 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 12
2020-11-07 21:43:21.946 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 21:43:21.947 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 71(Long)
2020-11-07 21:43:21.950 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 21:43:21.952 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 21:43:21.953 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 71(Long)
2020-11-07 21:43:21.954 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 21:43:21.956 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:43:21.957 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:43:21.959 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:43:21.960  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 21:43:53.156  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@2a7b821, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 21:43:53.158 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 21:43:53.159 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 85(Long)
2020-11-07 21:43:53.160 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 21:43:53.164 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 21:43:53.165 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 46(Long), 55(Long)
2020-11-07 21:43:53.167 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 21:43:53.169 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 21:43:53.170 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 71(Long)
2020-11-07 21:43:53.173 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 21:43:53.175 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 21:43:53.178 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: LeetCode#463 岛屿周长(String), ###** 题目描述：**

给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。

网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。

岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。

### **示例 :**
输入:
[[0,1,0,0],
 [1,1,1,0],
 [0,1,0,0],
 [1,1,0,0]]

输出: 16
如图：

[![示例图](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png "示例图")

### **解题思路：**
对于一个陆地格子的每条边，它被算作岛屿的周长当且仅当这条边为网格的边界或者相邻的另一个格子为水域。 

因此，我们可以遍历每个陆地格子，看其四个方向是否为边界或者水域，如果是，将这条边的贡献加入答案中即可。

### **代码：**
```java
public class IslandPerimeter {
    public static void main(String[] args) {
        int[][] grid = {{0,1,0,0},
                        {1,1,1,0},
                        {0,1,0,0},
                        {1,1,0,0}};
        System.out.println("周长是："+islandPerimeter(grid));
    }

    private static int[] dx = {0,1,0,-1};
    private static int[] dy = {1,0,-1,0};

    private static int islandPerimeter(int[][] grid){
        //获取网格的长和宽
        int n = grid.length;
        int m = grid[0].length;
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(grid[i][j] == 1){//如果是陆地
                    int count = 0;
                    //遍历陆地四周的格子
                    for(int k = 0;k < 4; k++){
						//获取周围格子的坐标
                        int ix = i + dx[k];
                        int jx = j + dy[k];
                        //如果周围是边界或水域
                        if(ix < 0 || jx < 0 || ix >= n || jx >= m || grid[ix][jx] == 0){
                            count += 1;//周长加一
                        }
                    }
                    result += count;
                }
            }
        }
        return result;
    }
}
```

来源：力扣（LeetCode）

链接：[https://leetcode-cn.com/problems/island-perimeter](https://leetcode-cn.com/problems/island-perimeter "https://leetcode-cn.com/problems/island-perimeter")

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
(String), https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2916319135,2024207132&fm=11&gp=0.jpg(String), 给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地 0 表示水域。网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。计算岛屿的周长(String), 原创(String), 10(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 21:17:03.717(Timestamp), 2020-11-07 21:43:53.174(Timestamp), 85(Long), 2(Long), 71(Long)
2020-11-07 21:43:53.181 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 21:43:53.182 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 21:43:53.183 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 71(Long)
2020-11-07 21:43:53.184 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 21:43:53.185 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:43:53.186 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 46(Long)
2020-11-07 21:43:53.191 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:43:53.193 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 21:43:53.194 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 71(Long), 55(Long)
2020-11-07 21:43:53.195 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 21:43:53.197  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 21:43:53.210  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 21:43:53.213 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:43:53.213 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:43:53.215 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:43:53.222 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:43:53.223 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:43:53.226 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:43:53.227 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:43:53.228 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:43:53.230 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:43:53.231  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:45:18.698  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 21:45:18.717 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 21:45:18.719 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 21:45:18.721 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 21:45:18.723 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 21:45:18.724 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 21:45:18.731 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findAll             : <==      Total: 3
2020-11-07 21:45:18.732 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 21:45:18.733 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 21:45:18.737 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 3
2020-11-07 21:45:18.739 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 21:45:18.739 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 21:45:18.742 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 5
2020-11-07 21:45:18.744 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 21:45:18.744 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 21:45:18.746 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 3
2020-11-07 21:45:18.747  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 21:45:19.266  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 21:45:19.267 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 21:45:19.267 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 21:45:19.268 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 21:45:19.269  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 21:45:38.351  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {}]}
2020-11-07 21:45:38.361 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 21:45:38.363 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 21:45:38.366 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 21:45:38.375 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 21:45:38.376 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 21:45:38.382 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 21:45:38.384  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 21:45:40.183  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.toAddTags', args参数：[{}]}
2020-11-07 21:45:40.185  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 21:45:49.937  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.addTag', args参数：[Tag(id=null, name=java反射机制, blogs=[]), {}]}
2020-11-07 21:45:49.938 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 21:45:49.939 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: java反射机制(String)
2020-11-07 21:45:49.941 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 21:45:49.943 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.insertTag            : ==>  Preparing: insert into blog.t_tag values (?,?);
2020-11-07 21:45:49.944 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.insertTag            : ==> Parameters: null, java反射机制(String)
2020-11-07 21:45:49.948 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.insertTag            : <==    Updates: 1
2020-11-07 21:45:49.949  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 21:45:49.960  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=新增成功}]}
2020-11-07 21:45:49.964 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 21:45:49.964 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 21:45:49.966 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 21:45:49.970 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 21:45:49.970 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 21:45:49.972 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 21:45:49.973  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 21:45:52.286  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/56/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.editTag', args参数：[56, {}]}
2020-11-07 21:45:52.309 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectById           : ==>  Preparing: select id,name from blog.t_tag where id = ?;
2020-11-07 21:45:52.310 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectById           : ==> Parameters: 56(Long)
2020-11-07 21:45:52.313 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectById           : <==      Total: 1
2020-11-07 21:45:52.314  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/tag-input
2020-11-07 21:46:03.997  WARN 9972 --- [http-nio-8080-exec-2] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2020-11-07 21:46:04.000  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags/56', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.changeTag', args参数：[{}, 56, Tag(id=56, name=java反射, blogs=[])]}
2020-11-07 21:46:04.003 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectByName         : ==>  Preparing: select id,name from blog.t_tag where name = ?
2020-11-07 21:46:04.004 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectByName         : ==> Parameters: java反射(String)
2020-11-07 21:46:04.005 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.selectByName         : <==      Total: 0
2020-11-07 21:46:04.009 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.updateTag            : ==>  Preparing: update blog.t_tag set name = ? where id = ?;
2020-11-07 21:46:04.010 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.updateTag            : ==> Parameters: java反射(String), 56(Long)
2020-11-07 21:46:04.020 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.updateTag            : <==    Updates: 1
2020-11-07 21:46:04.020  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/tags
2020-11-07 21:46:04.032  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/tags', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.TagController.showTags', args参数：[1, {message=修改成功}]}
2020-11-07 21:46:04.035 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.t_tag
2020-11-07 21:46:04.035 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : ==> Parameters: 
2020-11-07 21:46:04.036 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags_COUNT  : <==      Total: 1
2020-11-07 21:46:04.039 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: SELECT id, name FROM blog.t_tag order by id desc LIMIT ?
2020-11-07 21:46:04.039 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 5(Integer)
2020-11-07 21:46:04.041 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 5
2020-11-07 21:46:04.041  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: /admin/tags
2020-11-07 21:55:03.023  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 21:55:03.035 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 21:55:03.036 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 21:55:03.038 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 21:55:03.046 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 21:55:03.048 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 21:55:03.051 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 21:55:03.052 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:55:03.052 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:55:03.055 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:55:03.056  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 21:55:06.328  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.toAddBlog', args参数：[{}]}
2020-11-07 21:55:06.332 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 21:55:06.333 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 21:55:06.345 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 21:55:06.347 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 21:55:06.348 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 21:55:06.353 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 13
2020-11-07 21:55:06.354  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 22:09:01.566  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@1b37ccc1, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 22:09:01.574 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 22:09:01.574 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 22:09:01.579 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 22:09:01.587 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 22:09:01.587 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 56(Long), 43(Long)
2020-11-07 22:09:01.591 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 22:09:01.595 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.dao.BlogMapper.save    : ==>  Preparing: insert into t_blog(id,title,content,first_picture,flag,views,description,appreciation,share_statement, commentabled,published,recommend,create_time,update_time,type_id,user_id) values (?,?, ?,?,?,?,?,?,?, ?,?,?,?,?,?,?);
2020-11-07 22:09:01.607 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.dao.BlogMapper.save    : ==> Parameters: null, 三种反射方式获取Class对象的区别(String), # 三种获取Class对象的方式有什么不同？

1、"对象的引用".getClass

2、String.class

3、Class.forName(“java.util.String”)

本篇文章就通过实例带大家来了解一下这三种获取Class对象的区别。示例基于JDK8。

## 实例演示场景一

为了更好的演示，我们先创建一个对象User，对象内部定义了一些方法。

```java
public class Person {
    {
        System.out.println("Person：动态代码块");
    }
    static {
        System.out.println("Person：静态代码块");
    }
    public User(){
        System.out.println("Person：无参构造方法");
    }
}
```



在User对象中分别定义了：静态代码块、动态代码块、构造方法。

针对上面的实例，我们构建了三个单元测试的场景，对应代码如下：

```java
public class ReflectTest {
    @Test
    public void test1() {
        Class<?> c = Person.class;
        System.out.println("----------");
    }

    @Test
    public void test2() throws ClassNotFoundException {
        Class<?> c = Class.forName("Person");
        System.out.println("----------");
    }
    @Test
    public void test3() {
        Person person = new Person();
        Class<?> c = person.getClass();
    }
}
```

分别执行三个单元测试发现，第一个单元测试没打印任何内容；第二个单元测试打印了“静态方法”中的内容；第三个单元测试打印出了全部内容：

1. Person：静态代码块
2. Person：动态代码块
3. Person：构造方法

也就是说通过Person.class的方法获取对象的Class对象，根本不会调用对象中任何的代码块或代码。而Class.forName()会调用静态代码块的内容。

而第三种方式打印所有内容的原因很显然，就因为要先实例化对象。

## 实例演示场景二

下面再组合一下这三种方式，看看一些其他的效果。

首先，依次调用三个获取Class对象的方法：

```
@Test
public void test4() throws ClassNotFoundException {
    Class<?> clz = Person.class;
    System.out.println("---------------");
    clz = Class.forName("com.choupangxia.reflect.Person");
    System.out.println("---------------");
    clz = new Person().getClass();
}
```

test4打印日志如下：

1. \---------------
2. Person：静态代码块
3. \---------------
4. Person：动态代码块
5. Person：构造方法

通过日志说明，Class.forName()方法执行过静态代码块之后，new Person().getClass()就不再会执行同样的静态代码块了。这也证明静态代码块只会被初始化一次。

再调整组合第二种场景：

```java
@Test
public void test5() throws ClassNotFoundException {
    Class<?> clz = new Person().getClass();
    System.out.println("---------------");
    clz = Class.forName("com.choupangxia.reflect.Person");
}
```

test5打印日志如下：

1. Person：静态代码块
2. Person：动态代码块
3. Person：构造方法
4. \---------------

同样只打印一次静态代码块的操作。再次证明类中的静态代码块只会被初始化一次。

## 实例演示场景三

这里，我们比较一下三种形式获得的Class对象是否是相同的。测试代码如下：

```java
@Test
public void test6() throws ClassNotFoundException {
    Class<?> clz1 = Person.class;
    Class<?> clz2 = Class.forName("com.choupangxia.reflect.Person");
    Class<?> clz3 = new Person().getClass();
    System.out.println(clz1 == clz2);
    System.out.println(clz2 == clz3);
}
```

注意，上面我们使用的是等号，也就是说比较的是引用。猜猜打印的结果？

1. true
2. true

三种形式获得的Class对象是同一个对象。这是为什么呢？

这要涉及到类的加载过程，我们知道类加载过程分：加载阶段、连接阶段和初始化阶段。

类的加载阶段是将class文件中的二进制数据读取到内存中，然后将该字节流所代表的静态存储结构转化为方法区中运行时的数据结构，并且在堆内存中生成一个该类的java.lang.class对象，作为方法区数据结构的入口。

类加载阶段的最终产物是堆内存中的class对象，对于同一个Classloader对象，不管某个类被加载多少次，对应堆内存中的class对象始终只有一个。

也就是说无论通过哪种形式来获取Class对象，获得的都是堆内存中对应的Class对象。

## 回顾三种形式

（1）类名.class：JVM将使用类装载器，将类装入内存(前提是:类还没有装入内存)，不做类的初始化工作，返回Class的对象。

（2）Class.forName(“类名字符串”)：装入类，并做类的静态初始化，返回Class的对象。

（3）实例对象.getClass()：对类进行静态初始化、非静态初始化；返回引用运行时真正所指的对象(子对象的引用会赋给父对象的引用变量中)所属的类的Class的对象。

(String), https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2060752205,1806211811&fm=26&gp=0.jpg(String), 转载(String), 1(Integer), Java中有三种反射获取Class对象的方式，本文了介绍三种方式的区别(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 22:09:01.593(Timestamp), 2020-11-07 22:09:01.593(Timestamp), 84(Long), 2(Long)
2020-11-07 22:09:01.612 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.dao.BlogMapper.save    : <==    Updates: 1
2020-11-07 22:09:01.616 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 22:09:01.616 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 72(Long), 43(Long)
2020-11-07 22:09:01.619 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 22:09:01.620 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 22:09:01.620 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 72(Long), 56(Long)
2020-11-07 22:09:01.622 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 22:09:01.625  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 22:09:01.649  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=保存成功！}, 1]}
2020-11-07 22:09:01.654 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 22:09:01.654 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 22:09:01.655 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 22:09:01.659 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 22:09:01.660 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 22:09:01.664 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 22:09:01.665 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 22:09:01.666 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 22:09:01.667 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 22:09:01.668  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 22:09:05.909  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.index', args参数：[1, {}]}
2020-11-07 22:09:05.922 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==>  Preparing: SELECT count(0) FROM (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published
2020-11-07 22:09:05.923 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : ==> Parameters: 
2020-11-07 22:09:05.931 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll_COUNT       : <==      Total: 1
2020-11-07 22:09:05.932 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published order by b.update_time desc LIMIT ?
2020-11-07 22:09:05.934 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : ==> Parameters: 5(Integer)
2020-11-07 22:09:05.977 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findAll             : <==      Total: 4
2020-11-07 22:09:05.979 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==>  Preparing: select b.id bid, b.title, b.type_id, t.id tid, t.name from t_type t inner join t_blog b on t.id = b.type_id
2020-11-07 22:09:05.980 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : ==> Parameters: 
2020-11-07 22:09:05.983 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.getIndexType        : <==      Total: 4
2020-11-07 22:09:05.984 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==>  Preparing: SELECT t.id tid,t.name, b.id bid FROM (t_blog_tags bt INNER JOIN t_blog b ON bt.blogs_id = b.id) INNER JOIN t_tag t ON bt.tags_id = t.id
2020-11-07 22:09:05.985 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : ==> Parameters: 
2020-11-07 22:09:05.989 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TagMapper.getIndexTag          : <==      Total: 7
2020-11-07 22:09:05.991 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==>  Preparing: select b.id, b.title, b.update_time from t_blog b where b.published and b.commentabled order by update_time desc limit 5
2020-11-07 22:09:05.992 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : ==> Parameters: 
2020-11-07 22:09:05.994 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.findRecommendBlogs  : <==      Total: 4
2020-11-07 22:09:05.994  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: index
2020-11-07 22:09:06.532  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 22:09:06.533 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 22:09:06.534 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 22:09:06.535 DEBUG 9972 --- [http-nio-8080-exec-3] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 22:09:06.539  INFO 9972 --- [http-nio-8080-exec-3] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 22:09:11.296  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/72', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[72, {}]}
2020-11-07 22:09:11.299 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 22:09:11.300 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 72(Long)
2020-11-07 22:09:11.306 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 22:09:11.353 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 22:09:11.355 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 72(Long)
2020-11-07 22:09:11.356 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 22:09:11.358 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 22:09:11.359 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 72(Long)
2020-11-07 22:09:11.360 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 22:09:11.361 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 22:09:11.362 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 56(Long)
2020-11-07 22:09:11.363 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 22:09:11.363  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 22:09:11.769  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 22:09:11.769 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 22:09:11.770 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 22:09:11.771 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 22:09:11.772  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 22:09:11.878  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/72', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[72, {}]}
2020-11-07 22:09:11.879 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 22:09:11.880 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 72(Long)
2020-11-07 22:09:11.882 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 22:09:11.883  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 22:09:37.655  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{}, 1]}
2020-11-07 22:09:37.668 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 22:09:37.669 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 22:09:37.673 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 22:09:37.683 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 22:09:37.686 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 22:09:37.694 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 22:09:37.696 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 22:09:37.698 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 22:09:37.705 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 22:09:37.708  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 22:09:39.898  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/search', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.searchBlogs', args参数：[{blogQuery=BlogQuery{title='', typeId=null, recommend=false}, org.springframework.validation.BindingResult.blogQuery=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, BlogQuery{title='', typeId=null, recommend=false}, 2]}
2020-11-07 22:09:39.952 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.d.B.getAllBlogBySearch_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 22:09:39.953 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.d.B.getAllBlogBySearch_COUNT       : ==> Parameters: 
2020-11-07 22:09:39.954 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.d.B.getAllBlogBySearch_COUNT       : <==      Total: 1
2020-11-07 22:09:39.962 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlogBySearch  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename from t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?, ?
2020-11-07 22:09:39.963 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlogBySearch  : ==> Parameters: 3(Integer), 3(Integer)
2020-11-07 22:09:39.964 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.BlogMapper.getAllBlogBySearch  : <==      Total: 1
2020-11-07 22:09:39.967 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 22:09:39.967 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 22:09:39.969 DEBUG 9972 --- [http-nio-8080-exec-5] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 22:09:39.970  INFO 9972 --- [http-nio-8080-exec-5] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs :: blogList
2020-11-07 22:09:41.015  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/search', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.searchBlogs', args参数：[{blogQuery=BlogQuery{title='', typeId=null, recommend=false}, org.springframework.validation.BindingResult.blogQuery=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, BlogQuery{title='', typeId=null, recommend=false}, 1]}
2020-11-07 22:09:41.019 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.B.getAllBlogBySearch_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 22:09:41.021 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.B.getAllBlogBySearch_COUNT       : ==> Parameters: 
2020-11-07 22:09:41.022 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.d.B.getAllBlogBySearch_COUNT       : <==      Total: 1
2020-11-07 22:09:41.023 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlogBySearch  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id typeid, t.name typename from t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 22:09:41.023 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlogBySearch  : ==> Parameters: 3(Integer)
2020-11-07 22:09:41.025 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getAllBlogBySearch  : <==      Total: 3
2020-11-07 22:09:41.026 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 22:09:41.026 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 22:09:41.028 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 22:09:41.028  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs :: blogList
2020-11-07 22:09:42.543  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/72/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[72, {}]}
2020-11-07 22:09:42.547 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 22:09:42.547 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 22:09:42.549 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 22:09:42.551 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 22:09:42.552 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 22:09:42.554 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 13
2020-11-07 22:09:42.556 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 22:09:42.557 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 72(Long)
2020-11-07 22:09:42.560 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 22:09:42.561 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 22:09:42.561 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 72(Long)
2020-11-07 22:09:42.563 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 22:09:42.564 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 22:09:42.564 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 56(Long)
2020-11-07 22:09:42.566 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 22:09:42.566  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 22:10:05.778  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@50967a4c, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 22:10:05.780 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 22:10:05.780 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 22:10:05.782 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 22:10:05.784 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 22:10:05.784 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 56(Long)
2020-11-07 22:10:05.786 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 22:10:05.790 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 22:10:05.790 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 72(Long)
2020-11-07 22:10:05.795 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 22:10:05.796 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 22:10:05.801 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 三种反射方式获取Class对象的区别(String), # 三种获取Class对象的方式有什么不同？

1、"对象的引用".getClass

2、String.class

3、Class.forName(“java.util.String”)

本篇文章就通过实例带大家来了解一下这三种获取Class对象的区别。示例基于JDK8。

## 实例演示场景一

为了更好的演示，我们先创建一个对象User，对象内部定义了一些方法。

```java
public class Person {
    {
        System.out.println("Person：动态代码块");
    }
    static {
        System.out.println("Person：静态代码块");
    }
    public User(){
        System.out.println("Person：无参构造方法");
    }
}
```



在User对象中分别定义了：静态代码块、动态代码块、构造方法。

针对上面的实例，我们构建了三个单元测试的场景，对应代码如下：

```java
public class ReflectTest {
    @Test
    public void test1() {
        Class<?> c = Person.class;
        System.out.println("----------");
    }

    @Test
    public void test2() throws ClassNotFoundException {
        Class<?> c = Class.forName("Person");
        System.out.println("----------");
    }
    @Test
    public void test3() {
        Person person = new Person();
        Class<?> c = person.getClass();
    }
}
```

分别执行三个单元测试发现，第一个单元测试没打印任何内容；第二个单元测试打印了“静态方法”中的内容；第三个单元测试打印出了全部内容：

1. Person：静态代码块
2. Person：动态代码块
3. Person：构造方法

也就是说通过Person.class的方法获取对象的Class对象，根本不会调用对象中任何的代码块或代码。而Class.forName()会调用静态代码块的内容。

而第三种方式打印所有内容的原因很显然，就因为要先实例化对象。

## 实例演示场景二

下面再组合一下这三种方式，看看一些其他的效果。

首先，依次调用三个获取Class对象的方法：

```java
@Test
public void test4() throws ClassNotFoundException {
    Class<?> clz = Person.class;
    System.out.println("---------------");
    clz = Class.forName("com.choupangxia.reflect.Person");
    System.out.println("---------------");
    clz = new Person().getClass();
}
```

test4打印日志如下：

1. \---------------
2. Person：静态代码块
3. \---------------
4. Person：动态代码块
5. Person：构造方法

通过日志说明，Class.forName()方法执行过静态代码块之后，new Person().getClass()就不再会执行同样的静态代码块了。这也证明静态代码块只会被初始化一次。

再调整组合第二种场景：

```java
@Test
public void test5() throws ClassNotFoundException {
    Class<?> clz = new Person().getClass();
    System.out.println("---------------");
    clz = Class.forName("com.choupangxia.reflect.Person");
}
```

test5打印日志如下：

1. Person：静态代码块
2. Person：动态代码块
3. Person：构造方法
4. \---------------

同样只打印一次静态代码块的操作。再次证明类中的静态代码块只会被初始化一次。

## 实例演示场景三

这里，我们比较一下三种形式获得的Class对象是否是相同的。测试代码如下：

```java
@Test
public void test6() throws ClassNotFoundException {
    Class<?> clz1 = Person.class;
    Class<?> clz2 = Class.forName("com.choupangxia.reflect.Person");
    Class<?> clz3 = new Person().getClass();
    System.out.println(clz1 == clz2);
    System.out.println(clz2 == clz3);
}
```

注意，上面我们使用的是等号，也就是说比较的是引用。猜猜打印的结果？

1. true
2. true

三种形式获得的Class对象是同一个对象。这是为什么呢？

这要涉及到类的加载过程，我们知道类加载过程分：加载阶段、连接阶段和初始化阶段。

类的加载阶段是将class文件中的二进制数据读取到内存中，然后将该字节流所代表的静态存储结构转化为方法区中运行时的数据结构，并且在堆内存中生成一个该类的java.lang.class对象，作为方法区数据结构的入口。

类加载阶段的最终产物是堆内存中的class对象，对于同一个Classloader对象，不管某个类被加载多少次，对应堆内存中的class对象始终只有一个。

也就是说无论通过哪种形式来获取Class对象，获得的都是堆内存中对应的Class对象。

## 回顾三种形式

（1）类名.class：JVM将使用类装载器，将类装入内存(前提是:类还没有装入内存)，不做类的初始化工作，返回Class的对象。

（2）Class.forName(“类名字符串”)：装入类，并做类的静态初始化，返回Class的对象。

（3）实例对象.getClass()：对类进行静态初始化、非静态初始化；返回引用运行时真正所指的对象(子对象的引用会赋给父对象的引用变量中)所属的类的Class的对象。

(String), https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2060752205,1806211811&fm=26&gp=0.jpg(String), Java中有三种反射获取Class对象的方式，本文了介绍三种方式的区别(String), 转载(String), 2(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 22:09:01.593(Timestamp), 2020-11-07 22:10:05.796(Timestamp), 84(Long), 2(Long), 72(Long)
2020-11-07 22:10:05.807 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 22:10:05.808 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 22:10:05.809 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 72(Long)
2020-11-07 22:10:05.811 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 22:10:05.812 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 22:10:05.812 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 72(Long), 43(Long)
2020-11-07 22:10:05.814 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 22:10:05.815 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 22:10:05.816 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 72(Long), 56(Long)
2020-11-07 22:10:05.817 DEBUG 9972 --- [http-nio-8080-exec-4] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 22:10:05.819  INFO 9972 --- [http-nio-8080-exec-4] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 22:10:05.834  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 22:10:05.841 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 22:10:05.841 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 22:10:05.845 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 22:10:05.849 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 22:10:05.849 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 22:10:05.851 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 22:10:05.853 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 22:10:05.854 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 22:10:05.857 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 22:10:05.857  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 22:11:55.070  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/72', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[72, {}]}
2020-11-07 22:11:55.116 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 22:11:55.130 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 72(Long)
2020-11-07 22:11:55.187 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 22:11:55.244 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 22:11:55.250 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 72(Long)
2020-11-07 22:11:55.251 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 22:11:55.283 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 22:11:55.284 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 72(Long)
2020-11-07 22:11:55.291 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 22:11:55.295 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 22:11:55.296 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 56(Long)
2020-11-07 22:11:55.311 DEBUG 9972 --- [http-nio-8080-exec-10] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 22:11:55.313  INFO 9972 --- [http-nio-8080-exec-10] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 22:11:56.473  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 22:11:56.476 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 22:11:56.477 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 22:11:56.482 DEBUG 9972 --- [http-nio-8080-exec-1] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 22:11:56.482  INFO 9972 --- [http-nio-8080-exec-1] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 22:11:56.622  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/72', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[72, {}]}
2020-11-07 22:11:56.623 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 22:11:56.625 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 72(Long)
2020-11-07 22:11:56.627 DEBUG 9972 --- [http-nio-8080-exec-2] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 22:11:56.628  INFO 9972 --- [http-nio-8080-exec-2] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 22:12:00.829  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/blog/67', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.BlogShowController.showBlog', args参数：[67, {}]}
2020-11-07 22:12:00.832 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : ==>  Preparing: select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar from (t_blog b INNER JOIN t_type t ON b.type_id = t.id) INNER JOIN t_user u ON b.user_id = u.id WHERE b.published and b.id = ? order by b.update_time desc
2020-11-07 22:12:00.835 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : ==> Parameters: 67(Long)
2020-11-07 22:12:00.842 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.selectBlogById      : <==      Total: 1
2020-11-07 22:12:00.874 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : ==>  Preparing: update t_blog set views = views +1 where id = ?
2020-11-07 22:12:00.874 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : ==> Parameters: 67(Long)
2020-11-07 22:12:00.876 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogMapper.updateViews         : <==    Updates: 1
2020-11-07 22:12:00.877 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 22:12:00.878 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 67(Long)
2020-11-07 22:12:00.880 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 1
2020-11-07 22:12:00.881 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? )
2020-11-07 22:12:00.881 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 54(Long)
2020-11-07 22:12:00.886 DEBUG 9972 --- [http-nio-8080-exec-9] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 1
2020-11-07 22:12:00.886  INFO 9972 --- [http-nio-8080-exec-9] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog
2020-11-07 22:12:01.404  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/footer/newblog', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.IndexController.footerNewBlogs', args参数：[1, 5, {}]}
2020-11-07 22:12:01.404 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==>  Preparing: select b.id, b.title, b.update_time from blog.t_blog b WHERE b.published order by update_time desc limit 3
2020-11-07 22:12:01.405 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : ==> Parameters: 
2020-11-07 22:12:01.406 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getNewBlogs         : <==      Total: 3
2020-11-07 22:12:01.407  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: fragments :: newBlogList
2020-11-07 22:12:01.534  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/comments/67', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.CommentController.getComment', args参数：[67, {}]}
2020-11-07 22:12:01.534 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.d.C.listCommentByBlogId            : ==>  Preparing: select * from t_comment where blog_id = ? and parent_comment_id is null order by create_time DESC
2020-11-07 22:12:01.534 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.d.C.listCommentByBlogId            : ==> Parameters: 67(Long)
2020-11-07 22:12:01.535 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.d.C.listCommentByBlogId            : <==      Total: 0
2020-11-07 22:12:01.536  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: blog :: commentList
2020-11-07 22:12:45.256  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs/72/input', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.editBlog', args参数：[72, {}]}
2020-11-07 22:12:45.258 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 22:12:45.259 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 22:12:45.262 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 22:12:45.263 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==>  Preparing: select id,name from blog.t_tag
2020-11-07 22:12:45.263 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : ==> Parameters: 
2020-11-07 22:12:45.266 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.selectAllTags        : <==      Total: 13
2020-11-07 22:12:45.267 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : ==>  Preparing: select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement, b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name from t_blog b inner join t_type t on b.type_id = t.id where b.id = ?
2020-11-07 22:12:45.268 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : ==> Parameters: 72(Long)
2020-11-07 22:12:45.273 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogMapper.getBlogById         : <==      Total: 1
2020-11-07 22:12:45.275 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==>  Preparing: select tags_id from t_blog_tags where blogs_id = ?
2020-11-07 22:12:45.275 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : ==> Parameters: 72(Long)
2020-11-07 22:12:45.278 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.BlogTagsMapper.selectByBlogId  : <==      Total: 2
2020-11-07 22:12:45.280 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 22:12:45.281 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 56(Long)
2020-11-07 22:12:45.284 DEBUG 9972 --- [http-nio-8080-exec-7] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 22:12:45.286  INFO 9972 --- [http-nio-8080-exec-7] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blog-input
2020-11-07 22:13:31.925  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.addBlog', args参数：[com.simplem.personal_blog.model.Blog@5c0b810b, {}, org.apache.catalina.session.StandardSessionFacade@5b97e2f2]}
2020-11-07 22:13:31.939 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==>  Preparing: select id,name from blog.t_type where id = ?;
2020-11-07 22:13:31.947 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : ==> Parameters: 84(Long)
2020-11-07 22:13:31.949 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TypeMapper.selectById          : <==      Total: 1
2020-11-07 22:13:31.965 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==>  Preparing: select id,name from t_tag WHERE id in ( ? , ? )
2020-11-07 22:13:31.966 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : ==> Parameters: 43(Long), 56(Long)
2020-11-07 22:13:31.982 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.TagMapper.findAllByIds         : <==      Total: 2
2020-11-07 22:13:32.001 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==>  Preparing: select * from t_blog where id = ?
2020-11-07 22:13:32.002 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : ==> Parameters: 72(Long)
2020-11-07 22:13:32.026 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogMapper.getBlog             : <==      Total: 1
2020-11-07 22:13:32.034 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==>  Preparing: update t_blog set title = ?,content = ?,first_picture=?,description=?, flag = ?,views = ?,appreciation=?,share_statement=?, commentabled=?,published=?,recommend=?,create_time=?, update_time=?,type_id=?,user_id=? where id = ?;
2020-11-07 22:13:32.085 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : ==> Parameters: 三种反射方式获取Class对象的区别(String), # 三种获取Class对象的方式有什么不同？

1、"对象的引用".getClass

2、String.class

3、Class.forName(“java.util.String”)

本篇文章就通过实例带大家来了解一下这三种获取Class对象的区别。示例基于JDK8。

## 实例演示场景一

为了更好的演示，我们先创建一个对象User，对象内部定义了一些方法。

```java
public class Person {
    {
        System.out.println("Person：动态代码块");
    }
    static {
        System.out.println("Person：静态代码块");
    }
    public User(){
        System.out.println("Person：无参构造方法");
    }
}
```



在User对象中分别定义了：静态代码块、动态代码块、构造方法。

针对上面的实例，我们构建了三个单元测试的场景，对应代码如下：

```java
public class ReflectTest {
    @Test
    public void test1() {
        Class<?> c = Person.class;
        System.out.println("----------");
    }

    @Test
    public void test2() throws ClassNotFoundException {
        Class<?> c = Class.forName("Person");
        System.out.println("----------");
    }
    @Test
    public void test3() {
        Person person = new Person();
        Class<?> c = person.getClass();
    }
}
```

分别执行三个单元测试发现，第一个单元测试没打印任何内容；第二个单元测试打印了“静态方法”中的内容；第三个单元测试打印出了全部内容：

1. Person：静态代码块
2. Person：动态代码块
3. Person：构造方法

也就是说通过Person.class的方法获取对象的Class对象，根本不会调用对象中任何的代码块或代码。而Class.forName()会调用静态代码块的内容。

而第三种方式打印所有内容的原因很显然，就因为要先实例化对象。

## 实例演示场景二

下面再组合一下这三种方式，看看一些其他的效果。

首先，依次调用三个获取Class对象的方法：

```java
@Test
public void test4() throws ClassNotFoundException {
    Class<?> clz = Person.class;
    System.out.println("---------------");
    clz = Class.forName("com.choupangxia.reflect.Person");
    System.out.println("---------------");
    clz = new Person().getClass();
}
```

test4打印日志如下：

1. \---------------
2. Person：静态代码块
3. \---------------
4. Person：动态代码块
5. Person：构造方法

通过日志说明，Class.forName()方法执行过静态代码块之后，new Person().getClass()就不再会执行同样的静态代码块了。这也证明静态代码块只会被初始化一次。

再调整组合第二种场景：

```java
@Test
public void test5() throws ClassNotFoundException {
    Class<?> clz = new Person().getClass();
    System.out.println("---------------");
    clz = Class.forName("com.choupangxia.reflect.Person");
}
```

test5打印日志如下：

1. Person：静态代码块
2. Person：动态代码块
3. Person：构造方法
4. \---------------

同样只打印一次静态代码块的操作。再次证明类中的静态代码块只会被初始化一次。

## 实例演示场景三

这里，我们比较一下三种形式获得的Class对象是否是相同的。测试代码如下：

```java
@Test
public void test6() throws ClassNotFoundException {
    Class<?> clz1 = Person.class;
    Class<?> clz2 = Class.forName("com.choupangxia.reflect.Person");
    Class<?> clz3 = new Person().getClass();
    System.out.println(clz1 == clz2);
    System.out.println(clz2 == clz3);
}
```

注意，上面我们使用的是等号，也就是说比较的是引用。猜猜打印的结果？

1. true
2. true

三种形式获得的Class对象是同一个对象。这是为什么呢？

这要涉及到类的加载过程，我们知道类加载过程分：加载阶段、连接阶段和初始化阶段。

类的加载阶段是将class文件中的二进制数据读取到内存中，然后将该字节流所代表的静态存储结构转化为方法区中运行时的数据结构，并且在堆内存中生成一个该类的java.lang.class对象，作为方法区数据结构的入口。

类加载阶段的最终产物是堆内存中的class对象，对于同一个Classloader对象，不管某个类被加载多少次，对应堆内存中的class对象始终只有一个。

也就是说无论通过哪种形式来获取Class对象，获得的都是堆内存中对应的Class对象。

## 回顾三种形式

（1）类名.class：JVM将使用类装载器，将类装入内存(前提是:类还没有装入内存)，不做类的初始化工作，返回Class的对象。

（2）Class.forName(“类名字符串”)：装入类，并做类的静态初始化，返回Class的对象。

（3）实例对象.getClass()：对类进行静态初始化、非静态初始化；返回引用运行时真正所指的对象(子对象的引用会赋给父对象的引用变量中)所属的类的Class的对象。

原文链接：[https://www.choupangxia.com/2020/03/27/java-reflect-class/](https://www.choupangxia.com/2020/03/27/java-reflect-class/ "https://www.choupangxia.com/2020/03/27/java-reflect-class/")(String), https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2060752205,1806211811&fm=26&gp=0.jpg(String), Java中有三种反射获取Class对象的方式，本文了介绍三种方式的区别(String), 转载(String), 3(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-07 22:09:01.593(Timestamp), 2020-11-07 22:13:32.029(Timestamp), 84(Long), 2(Long), 72(Long)
2020-11-07 22:13:32.127 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.dao.BlogMapper.update  : <==    Updates: 1
2020-11-07 22:13:32.142 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==>  Preparing: delete from t_blog_tags where blogs_id = ?
2020-11-07 22:13:32.143 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : ==> Parameters: 72(Long)
2020-11-07 22:13:32.156 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.delete          : <==    Updates: 2
2020-11-07 22:13:32.175 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 22:13:32.187 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 72(Long), 43(Long)
2020-11-07 22:13:32.190 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 22:13:32.202 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==>  Preparing: insert into t_blog_tags(blogs_id,tags_id) values (?,?);
2020-11-07 22:13:32.213 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : ==> Parameters: 72(Long), 56(Long)
2020-11-07 22:13:32.217 DEBUG 9972 --- [http-nio-8080-exec-8] c.s.p.dao.BlogTagsMapper.insertBlogTag   : <==    Updates: 1
2020-11-07 22:13:32.240  INFO 9972 --- [http-nio-8080-exec-8] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: redirect:/admin/blogs
2020-11-07 22:13:32.281  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : RequestLog : RequestLog{url地址：'http://localhost:8080/admin/blogs', ip地址：'0:0:0:0:0:0:0:1', classMethod方法名：'com.simplem.personal_blog.controller.admin.BlogController.showBlog', args参数：[{success=修改成功！}, 1]}
2020-11-07 22:13:32.297 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id
2020-11-07 22:13:32.298 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : ==> Parameters: 
2020-11-07 22:13:32.301 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog_COUNT    : <==      Total: 1
2020-11-07 22:13:32.305 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, b.commentabled, b.share_statement, t.id typeid, t.name typename FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id order by update_time desc LIMIT ?
2020-11-07 22:13:32.311 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : ==> Parameters: 3(Integer)
2020-11-07 22:13:32.316 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.BlogMapper.getAllBlog          : <==      Total: 3
2020-11-07 22:13:32.318 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==>  Preparing: select id,name from blog.t_type;
2020-11-07 22:13:32.319 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : ==> Parameters: 
2020-11-07 22:13:32.336 DEBUG 9972 --- [http-nio-8080-exec-6] c.s.p.dao.TypeMapper.selectAllTypes      : <==      Total: 15
2020-11-07 22:13:32.340  INFO 9972 --- [http-nio-8080-exec-6] c.s.personal_blog.aspect.LogAspect       : Result 返回结果: admin/blogs
2020-11-07 22:52:35.584  WARN 9972 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m40s818ms769µs464ns).
