<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simplem.personal_blog.dao.BlogMapper">

    <resultMap id="blog" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="typeId" column="type_id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="published" column="published"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="typeId" column="type_id"/>
        <result property="userId" column="user_id"/>
<!--        <result property="tagIds" column="tag_ids"/>-->
        <association property="type" javaType="Type">
            <id property="id" column="typeid"/>
            <result property="name" column="typename"/>
        </association>
    </resultMap>

    <select id="getBlog" parameterType="long" resultMap="blog">
        select * from t_blog where id = #{id}
    </select>

    <update id="update" parameterType="Blog">
        update t_blog set title = #{title},content = #{content},first_picture=#{firstPicture},description=#{description},
        flag = #{flag},views = #{views},appreciation=#{appreciation},share_statement=#{shareStatement},
        commentabled=#{commentabled},published=#{published},recommend=#{recommend},create_time=#{createTime},
        update_time=#{updateTime},type_id=#{type.id},user_id=#{user.id} where id = #{id};
    </update>
    
    <!--博客后台展示-->
    <select id="getAllBlog" resultMap="blog">
        select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published,
               t.id typeid, t.name typename
        from t_blog b
        INNER JOIN t_type t
        ON b.type_id = t.id
    </select>

    <resultMap id="firstPageBlog" type="com.simplem.personal_blog.vo.FirstPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <result property="typeName" column="name"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <!--博客前台展示(表连接的条件不清晰)-->
<!--    <select id="findAll" resultMap="firstPageBlog">-->
<!--        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,-->
<!--               t.name,-->
<!--               u.nickname, u.avatar-->
<!--        from blog.t_blog b , blog.t_type t, blog.t_user u-->
<!--        where b.type_id = t.id and b.user_id = u.id and b.published order by b.update_time desc-->
<!--    </select>-->
    <!--博客前台展示(结构清晰，表连接的条件和where条件分离了)-->
    <select id="findAll" resultMap="firstPageBlog">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
				t.name,
				u.nickname, u.avatar
        from (t_blog b INNER JOIN t_type t ON b.type_id = t.id)
        INNER JOIN t_user u
        ON b.user_id = u.id
        WHERE b.published order by b.update_time desc
    </select>

    <select id="findAllByTypeId" resultMap="firstPageBlog">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
				t.name,
				u.nickname, u.avatar
        from (t_blog b INNER JOIN t_type t ON b.type_id = t.id)
        INNER JOIN t_user u
        ON b.user_id = u.id
        WHERE b.published and b.type_id = #{typeId} order by b.update_time desc
    </select>

    <select id="findAllByTagId" resultMap="firstPageBlog">
        SELECT	b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
				ty.name,
				u.nickname, u.avatar
        FROM t_blog b, t_type ty, t_user u, t_blog_tags bt, t_tag ta
        WHERE b.published and b.user_id = u.id and b.type_id = ty.id and b.id = bt.blogs_id and bt.tags_id = ta.id and ta.id = #{tagId}
        ORDER BY b.update_time desc
    </select>

    <resultMap id="indexBlog" type="com.simplem.personal_blog.vo.indexBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
    </resultMap>

    <select id="getNewBlogs" resultMap="indexBlog">
        select b.id, b.title, b.update_time
        from blog.t_blog b
        WHERE b.published order by update_time desc limit 3
    </select>
    
    <select id="findRecommendBlogs" resultMap="indexBlog">
        select b.id, b.title, b.update_time
        from t_blog b
        where b.published and b.commentabled order by update_time desc limit 5
    </select>

    <resultMap id="BlogMap" type="Blog">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="appreciation" column="appreciation"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="commentabled" column="commentabled"/>
        <result property="description" column="description"/>
        <result property="published" column="published"/>
        <result property="recommend" column="recommend"/>
<!--        <result property="createTime" column="create_time"/>-->
        <result property="updateTime" column="update_time"/>
<!--        <result property="description" column="description"/>-->
        <association property="user" javaType="User">
            <result property="nickname" column="nickname"/>
            <result property="avatar" column="avatar"/>
        </association>
        <association property="type" javaType="Type">
            <id property="id" column="tid"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>

    <!--前台展示博客详情-->
    <select id="selectBlogById" resultMap="BlogMap">
        select b.id, b.title, b.content, b.views, b.first_picture, b.flag, b.appreciation, b.share_statement,
        b.commentabled, b.recommend, b.update_time, t.name, t.id tid, u.nickname, u.avatar
        from (t_blog b INNER JOIN t_type t ON b.type_id = t.id)
        INNER JOIN t_user u
        ON b.user_id = u.id
        WHERE b.published and b.id = #{id} order by b.update_time desc
    </select>

    <!--后台编辑编辑-->
    <select id="getBlogById" resultMap="BlogMap">
        select b.id, b.title, b.content, b.first_picture, b.flag, b.appreciation, b.share_statement,
        b.commentabled, b.recommend, b.description, b.published, b.update_time, t.id tid, t.name
        from t_blog b
        inner join t_type t
        on b.type_id = t.id
        where b.id = #{id}
    </select>
    <update id="updateViews">
        update t_blog set views = views +1 where id = #{id}
    </update>

    <!--useGeneratedKeys="true" 主键自增 keyProperty="id" 把id值返回给原来要插入的对象id属性值中-->
    <insert id="save" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog(id,title,content,first_picture,flag,views,description,appreciation,share_statement,
        commentabled,published,recommend,create_time,update_time,type_id,user_id) values (#{id},#{title},
        #{content},#{firstPicture},#{flag},#{views},#{description},#{appreciation},#{shareStatement},
        #{commentabled},#{published},#{recommend},#{createTime},#{updateTime},#{type.id},#{user.id});
    </insert>

    <delete id="delete" parameterType="long">
        delete from t_blog where id =#{id}
    </delete>
</mapper>